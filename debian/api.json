{"Filepath":"src/3rdparty/libtiff/libtiff/t4.h","Functions":null,"Records":[{"Name":"macro","Fields":["EOL","G3CODE_EOF","G3CODE_EOL","G3CODE_INCOMP","G3CODE_INVALID","_T4_"]},{"Name":"struct:tableentry","Fields":["unsigned short tableentry::code","unsigned short tableentry::length","short tableentry::runlen"]}]}
{"Filepath":"src/3rdparty/libtiff/libtiff/tif_config.h","Functions":null,"Records":[{"Name":"macro","Fields":["HAVE_ASSERT_H","HAVE_DECL_OPTARG","HAVE_FCNTL_H","HAVE_INT16","HAVE_INT32","HAVE_INT8","HAVE_SEARCH_H","HAVE_SNPRINTF","HAVE_STRING_H","HAVE_SYS_TYPES_H","HAVE_UNISTD_H","PACKAGE_VERSION","TIFF_INT32_FORMAT","TIFF_INT64_FORMAT","TIFF_PTRDIFF_FORMAT","TIFF_PTRDIFF_T","TIFF_SSIZE_FORMAT","TIFF_UINT32_FORMAT","TIFF_UINT64_FORMAT","TIF_PLATFORM_CONSOLE","USE_WIN32_FILEIO","WORDS_BIGENDIAN","_CRT_SECURE_NO_WARNINGS","_DARWIN_USE_64_BIT_INODE","inline"]}]}
{"Filepath":"src/3rdparty/libtiff/libtiff/tif_config.vc.h","Functions":null,"Records":[{"Name":"macro","Fields":["HAVE_ASSERT_H","HAVE_DECL_OPTARG","HAVE_FCNTL_H","HAVE_IEEEFP","HAVE_IO_H","HAVE_JBG_NEWLEN","HAVE_SEARCH_H","HAVE_SETMODE","HAVE_SNPRINTF","HAVE_STRING_H","HAVE_SYS_TYPES_H","HOST_FILLORDER","SIZEOF_INT","SIZEOF_LONG","SIZEOF_SIZE_T","TIFF_INT64_FORMAT","TIFF_INT64_T","TIFF_PTRDIFF_T","TIFF_SIZE_FORMAT","TIFF_SIZE_T","TIFF_SSIZE_FORMAT","TIFF_SSIZE_T","TIFF_UINT64_FORMAT","TIFF_UINT64_T","_TIF_CONFIG_H_","inline","lfind","snprintf"]}]}
{"Filepath":"src/3rdparty/libtiff/libtiff/tif_config.wince.h","Functions":null,"Records":[{"Name":"macro","Fields":["HAVE_ASSERT_H","HAVE_BSEARCH","HAVE_FCNTL_H","HAVE_IEEEFP","HAVE_IO_H","HAVE_JBG_NEWLEN","HAVE_LFIND","HAVE_SEARCH_H","HAVE_SETMODE","HAVE_STRING_H","HOST_FILLORDER","SIZEOF_INT","bsearch","inline","lfind"]}]}
{"Filepath":"src/3rdparty/libtiff/libtiff/tif_dir.h","Functions":[{"Uniquefunname":"int _TIFFCheckFieldIsValidForCodec(TIFF * tif,ttag_t tag)","Funname":"_TIFFCheckFieldIsValidForCodec","Returntype":"int","Args":"TIFF * tif,ttag_t tag"},{"Uniquefunname":"TIFFField * _TIFFCreateAnonField(TIFF *,uint32,TIFFDataType)","Funname":"_TIFFCreateAnonField","Returntype":"TIFFField *","Args":"TIFF *,uint32,TIFFDataType"},{"Uniquefunname":"int _TIFFFillStriles(TIFF *)","Funname":"_TIFFFillStriles","Returntype":"int","Args":"TIFF *"},{"Uniquefunname":"const TIFFField * _TIFFFindOrRegisterField(TIFF *,uint32,TIFFDataType)","Funname":"_TIFFFindOrRegisterField","Returntype":"const TIFFField *","Args":"TIFF *,uint32,TIFFDataType"},{"Uniquefunname":"const TIFFFieldArray * _TIFFGetExifFields(void)","Funname":"_TIFFGetExifFields","Returntype":"const TIFFFieldArray *","Args":"void"},{"Uniquefunname":"const TIFFFieldArray * _TIFFGetFields(void)","Funname":"_TIFFGetFields","Returntype":"const TIFFFieldArray *","Args":"void"},{"Uniquefunname":"int _TIFFMergeFields(TIFF *,const TIFFField[],uint32)","Funname":"_TIFFMergeFields","Returntype":"int","Args":"TIFF *,const TIFFField[],uint32"},{"Uniquefunname":"void _TIFFPrintFieldInfo(TIFF *,FILE *)","Funname":"_TIFFPrintFieldInfo","Returntype":"void","Args":"TIFF *,FILE *"},{"Uniquefunname":"void _TIFFSetupFields(TIFF * tif,const TIFFFieldArray * infoarray)","Funname":"_TIFFSetupFields","Returntype":"void","Args":"TIFF * tif,const TIFFFieldArray * infoarray"}],"Records":[{"Name":"macro","Fields":["BITFIELDn(tif,n)","BITn(n)","FIELD_BITSPERSAMPLE","FIELD_CODEC","FIELD_COLORMAP","FIELD_COMPRESSION","FIELD_EXTRASAMPLES","FIELD_FILLORDER","FIELD_HALFTONEHINTS","FIELD_IGNORE","FIELD_IMAGEDEPTH","FIELD_IMAGEDIMENSIONS","FIELD_INKNAMES","FIELD_LAST","FIELD_MAXSAMPLEVALUE","FIELD_MINSAMPLEVALUE","FIELD_ORIENTATION","FIELD_PAGENUMBER","FIELD_PHOTOMETRIC","FIELD_PLANARCONFIG","FIELD_POSITION","FIELD_PSEUDO","FIELD_REFBLACKWHITE","FIELD_RESOLUTION","FIELD_RESOLUTIONUNIT","FIELD_ROWSPERSTRIP","FIELD_SAMPLEFORMAT","FIELD_SAMPLESPERPIXEL","FIELD_SETLONGS","FIELD_SMAXSAMPLEVALUE","FIELD_SMINSAMPLEVALUE","FIELD_STRIPBYTECOUNTS","FIELD_STRIPOFFSETS","FIELD_SUBFILETYPE","FIELD_SUBIFD","FIELD_THRESHHOLDING","FIELD_TILEDEPTH","FIELD_TILEDIMENSIONS","FIELD_TRANSFERFUNCTION","FIELD_YCBCRPOSITIONING","FIELD_YCBCRSUBSAMPLING","FieldSet(fields,f)","ResetFieldBit(fields,f)","TIFFClrFieldBit(tif,field)","TIFFFieldSet(tif,field)","TIFFSetFieldBit(tif,field)","_TIFFDIR_"]},{"Name":"struct:_TIFFField","Fields":["unsigned short _TIFFField::field_bit","char * _TIFFField::field_name","unsigned char _TIFFField::field_oktochange","unsigned char _TIFFField::field_passcount","short _TIFFField::field_readcount","TIFFFieldArray * _TIFFField::field_subfields","uint32 _TIFFField::field_tag","TIFFDataType _TIFFField::field_type","short _TIFFField::field_writecount","TIFFSetGetFieldType _TIFFField::get_field_type","uint32 _TIFFField::reserved","TIFFSetGetFieldType _TIFFField::set_field_type"]},{"Name":"struct:_TIFFFieldArray","Fields":["uint32 _TIFFFieldArray::allocated_size","uint32 _TIFFFieldArray::count","TIFFField * _TIFFFieldArray::fields","TIFFFieldArrayType _TIFFFieldArray::type"]}]}
{"Filepath":"src/3rdparty/libtiff/libtiff/tif_fax3.h","Functions":[{"Uniquefunname":"void _TIFFFax3fillruns(unsigned char *,uint32 *,uint32 *,uint32)","Funname":"_TIFFFax3fillruns","Returntype":"void","Args":"unsigned char *,uint32 *,uint32 *,uint32"}],"Records":[{"Name":"macro","Fields":["CHECK_b1","CLEANUP_RUNS()","ClrBits(n)","DEBUG_SHOW","EXPAND1D(eoflab)","EXPAND2D(eoflab)","EndOfData()","GetBits(n)","LOOKUP16(wid,tab,eoflab)","LOOKUP8(wid,tab,eoflab)","NeedBits16(n,eoflab)","NeedBits8(n,eoflab)","SETVALUE(x)","SYNC_EOL(eoflab)","S_EOL","S_Ext","S_Horiz","S_MakeUp","S_MakeUpB","S_MakeUpW","S_Null","S_Pass","S_TermB","S_TermW","S_V0","S_VL","S_VR","_FAX3_"]}]}
{"Filepath":"src/3rdparty/libtiff/libtiff/tif_predict.h","Functions":[{"Uniquefunname":"int TIFFPredictorCleanup(TIFF *)","Funname":"TIFFPredictorCleanup","Returntype":"int","Args":"TIFF *"},{"Uniquefunname":"int TIFFPredictorInit(TIFF *)","Funname":"TIFFPredictorInit","Returntype":"int","Args":"TIFF *"}],"Records":[{"Name":"macro","Fields":["_TIFFPREDICT_"]}]}
{"Filepath":"src/3rdparty/libtiff/libtiff/tiff.h","Functions":null,"Records":[{"Name":"macro","Fields":["CLEANFAXDATA_CLEAN","CLEANFAXDATA_REGENERATED","CLEANFAXDATA_UNCLEAN","CODINGMETHODS_T42","CODINGMETHODS_T43","CODINGMETHODS_T4_1D","CODINGMETHODS_T4_2D","CODINGMETHODS_T6","CODINGMETHODS_T85","COLORRESPONSEUNIT_100000S","COLORRESPONSEUNIT_10000S","COLORRESPONSEUNIT_1000S","COLORRESPONSEUNIT_100S","COLORRESPONSEUNIT_10S","COMPRESSION_ADOBE_DEFLATE","COMPRESSION_CCITTFAX3","COMPRESSION_CCITTFAX4","COMPRESSION_CCITTRLE","COMPRESSION_CCITTRLEW","COMPRESSION_CCITT_T4","COMPRESSION_CCITT_T6","COMPRESSION_DCS","COMPRESSION_DEFLATE","COMPRESSION_IT8BL","COMPRESSION_IT8CTPAD","COMPRESSION_IT8LW","COMPRESSION_IT8MP","COMPRESSION_JBIG","COMPRESSION_JP2000","COMPRESSION_JPEG","COMPRESSION_LERC","COMPRESSION_LZMA","COMPRESSION_LZW","COMPRESSION_NEXT","COMPRESSION_NONE","COMPRESSION_OJPEG","COMPRESSION_PACKBITS","COMPRESSION_PIXARFILM","COMPRESSION_PIXARLOG","COMPRESSION_SGILOG","COMPRESSION_SGILOG24","COMPRESSION_T43","COMPRESSION_T85","COMPRESSION_THUNDERSCAN","COMPRESSION_WEBP","COMPRESSION_ZSTD","DCSIMAGERFILTER_CFA","DCSIMAGERFILTER_IR","DCSIMAGERFILTER_MONO","DCSIMAGERFILTER_OTHER","DCSIMAGERMODEL_M3","DCSIMAGERMODEL_M5","DCSIMAGERMODEL_M6","DCSINTERPMODE_NORMAL","DCSINTERPMODE_PREVIEW","EXIFTAG_APERTUREVALUE","EXIFTAG_BRIGHTNESSVALUE","EXIFTAG_CFAPATTERN","EXIFTAG_COLORSPACE","EXIFTAG_COMPONENTSCONFIGURATION","EXIFTAG_COMPRESSEDBITSPERPIXEL","EXIFTAG_CONTRAST","EXIFTAG_CUSTOMRENDERED","EXIFTAG_DATETIMEDIGITIZED","EXIFTAG_DATETIMEORIGINAL","EXIFTAG_DEVICESETTINGDESCRIPTION","EXIFTAG_DIGITALZOOMRATIO","EXIFTAG_EXIFVERSION","EXIFTAG_EXPOSUREBIASVALUE","EXIFTAG_EXPOSUREINDEX","EXIFTAG_EXPOSUREMODE","EXIFTAG_EXPOSUREPROGRAM","EXIFTAG_EXPOSURETIME","EXIFTAG_FILESOURCE","EXIFTAG_FLASH","EXIFTAG_FLASHENERGY","EXIFTAG_FLASHPIXVERSION","EXIFTAG_FNUMBER","EXIFTAG_FOCALLENGTH","EXIFTAG_FOCALLENGTHIN35MMFILM","EXIFTAG_FOCALPLANERESOLUTIONUNIT","EXIFTAG_FOCALPLANEXRESOLUTION","EXIFTAG_FOCALPLANEYRESOLUTION","EXIFTAG_GAINCONTROL","EXIFTAG_IMAGEUNIQUEID","EXIFTAG_ISOSPEEDRATINGS","EXIFTAG_LIGHTSOURCE","EXIFTAG_MAKERNOTE","EXIFTAG_MAXAPERTUREVALUE","EXIFTAG_METERINGMODE","EXIFTAG_OECF","EXIFTAG_PIXELXDIMENSION","EXIFTAG_PIXELYDIMENSION","EXIFTAG_RELATEDSOUNDFILE","EXIFTAG_SATURATION","EXIFTAG_SCENECAPTURETYPE","EXIFTAG_SCENETYPE","EXIFTAG_SENSINGMETHOD","EXIFTAG_SHARPNESS","EXIFTAG_SHUTTERSPEEDVALUE","EXIFTAG_SPATIALFREQUENCYRESPONSE","EXIFTAG_SPECTRALSENSITIVITY","EXIFTAG_SUBJECTAREA","EXIFTAG_SUBJECTDISTANCE","EXIFTAG_SUBJECTDISTANCERANGE","EXIFTAG_SUBJECTLOCATION","EXIFTAG_SUBSECTIME","EXIFTAG_SUBSECTIMEDIGITIZED","EXIFTAG_SUBSECTIMEORIGINAL","EXIFTAG_USERCOMMENT","EXIFTAG_WHITEBALANCE","EXTRASAMPLE_ASSOCALPHA","EXTRASAMPLE_UNASSALPHA","EXTRASAMPLE_UNSPECIFIED","FAXMODE_BYTEALIGN","FAXMODE_CLASSF","FAXMODE_CLASSIC","FAXMODE_NOEOL","FAXMODE_NORTC","FAXMODE_WORDALIGN","FAXPROFILE_C","FAXPROFILE_F","FAXPROFILE_J","FAXPROFILE_L","FAXPROFILE_M","FAXPROFILE_S","FILETYPE_MASK","FILETYPE_PAGE","FILETYPE_REDUCEDIMAGE","FILLORDER_LSB2MSB","FILLORDER_MSB2LSB","GRAYRESPONSEUNIT_100000S","GRAYRESPONSEUNIT_10000S","GRAYRESPONSEUNIT_1000S","GRAYRESPONSEUNIT_100S","GRAYRESPONSEUNIT_10S","GROUP3OPT_2DENCODING","GROUP3OPT_FILLBITS","GROUP3OPT_UNCOMPRESSED","GROUP4OPT_UNCOMPRESSED","INKSET_CMYK","INKSET_MULTIINK","JPEGCOLORMODE_RAW","JPEGCOLORMODE_RGB","JPEGPROC_BASELINE","JPEGPROC_LOSSLESS","JPEGTABLESMODE_HUFF","JPEGTABLESMODE_QUANT","LERC_ADD_COMPRESSION_DEFLATE","LERC_ADD_COMPRESSION_NONE","LERC_ADD_COMPRESSION_ZSTD","LERC_VERSION_2_4","MDI_BIGENDIAN","MDI_LITTLEENDIAN","OFILETYPE_IMAGE","OFILETYPE_PAGE","OFILETYPE_REDUCEDIMAGE","ORIENTATION_BOTLEFT","ORIENTATION_BOTRIGHT","ORIENTATION_LEFTBOT","ORIENTATION_LEFTTOP","ORIENTATION_RIGHTBOT","ORIENTATION_RIGHTTOP","ORIENTATION_TOPLEFT","ORIENTATION_TOPRIGHT","PERSAMPLE_MERGED","PERSAMPLE_MULTI","PHOTOMETRIC_CFA","PHOTOMETRIC_CIELAB","PHOTOMETRIC_ICCLAB","PHOTOMETRIC_ITULAB","PHOTOMETRIC_LOGL","PHOTOMETRIC_LOGLUV","PHOTOMETRIC_MASK","PHOTOMETRIC_MINISBLACK","PHOTOMETRIC_MINISWHITE","PHOTOMETRIC_PALETTE","PHOTOMETRIC_RGB","PHOTOMETRIC_SEPARATED","PHOTOMETRIC_YCBCR","PIXARLOGDATAFMT_11BITLOG","PIXARLOGDATAFMT_12BITPICIO","PIXARLOGDATAFMT_16BIT","PIXARLOGDATAFMT_8BIT","PIXARLOGDATAFMT_8BITABGR","PIXARLOGDATAFMT_FLOAT","PLANARCONFIG_CONTIG","PLANARCONFIG_SEPARATE","PREDICTOR_FLOATINGPOINT","PREDICTOR_HORIZONTAL","PREDICTOR_NONE","PROFILETYPE_G3_FAX","PROFILETYPE_UNSPECIFIED","RESUNIT_CENTIMETER","RESUNIT_INCH","RESUNIT_NONE","SAMPLEFORMAT_COMPLEXIEEEFP","SAMPLEFORMAT_COMPLEXINT","SAMPLEFORMAT_IEEEFP","SAMPLEFORMAT_INT","SAMPLEFORMAT_UINT","SAMPLEFORMAT_VOID","SGILOGDATAFMT_16BIT","SGILOGDATAFMT_8BIT","SGILOGDATAFMT_FLOAT","SGILOGDATAFMT_RAW","SGILOGENCODE_NODITHER","SGILOGENCODE_RANDITHER","THRESHHOLD_BILEVEL","THRESHHOLD_ERRORDIFFUSE","THRESHHOLD_HALFTONE","TIFFTAG_ACTIVEAREA","TIFFTAG_ANALOGBALANCE","TIFFTAG_ANTIALIASSTRENGTH","TIFFTAG_ARTIST","TIFFTAG_ASSHOTICCPROFILE","TIFFTAG_ASSHOTNEUTRAL","TIFFTAG_ASSHOTPREPROFILEMATRIX","TIFFTAG_ASSHOTWHITEXY","TIFFTAG_BADFAXLINES","TIFFTAG_BASELINEEXPOSURE","TIFFTAG_BASELINENOISE","TIFFTAG_BASELINESHARPNESS","TIFFTAG_BAYERGREENSPLIT","TIFFTAG_BESTQUALITYSCALE","TIFFTAG_BITSPERSAMPLE","TIFFTAG_BLACKLEVEL","TIFFTAG_BLACKLEVELDELTAH","TIFFTAG_BLACKLEVELDELTAV","TIFFTAG_BLACKLEVELREPEATDIM","TIFFTAG_CALIBRATIONILLUMINANT1","TIFFTAG_CALIBRATIONILLUMINANT2","TIFFTAG_CAMERACALIBRATION1","TIFFTAG_CAMERACALIBRATION2","TIFFTAG_CAMERASERIALNUMBER","TIFFTAG_CELLLENGTH","TIFFTAG_CELLWIDTH","TIFFTAG_CFALAYOUT","TIFFTAG_CFAPATTERN","TIFFTAG_CFAPLANECOLOR","TIFFTAG_CFAREPEATPATTERNDIM","TIFFTAG_CHROMABLURRADIUS","TIFFTAG_CLEANFAXDATA","TIFFTAG_CLIPPATH","TIFFTAG_CODINGMETHODS","TIFFTAG_COLORMAP","TIFFTAG_COLORMATRIX1","TIFFTAG_COLORMATRIX2","TIFFTAG_COLORRESPONSEUNIT","TIFFTAG_COMPRESSION","TIFFTAG_CONSECUTIVEBADFAXLINES","TIFFTAG_COPYRIGHT","TIFFTAG_CURRENTICCPROFILE","TIFFTAG_CURRENTPREPROFILEMATRIX","TIFFTAG_DATATYPE","TIFFTAG_DATETIME","TIFFTAG_DCSBALANCEARRAY","TIFFTAG_DCSCALIBRATIONFD","TIFFTAG_DCSCLIPRECTANGLE","TIFFTAG_DCSCORRECTMATRIX","TIFFTAG_DCSGAMMA","TIFFTAG_DCSHUESHIFTVALUES","TIFFTAG_DCSIMAGERTYPE","TIFFTAG_DCSINTERPMODE","TIFFTAG_DCSTOESHOULDERPTS","TIFFTAG_DECODE","TIFFTAG_DEFAULTCROPORIGIN","TIFFTAG_DEFAULTCROPSIZE","TIFFTAG_DEFAULTSCALE","TIFFTAG_DNGBACKWARDVERSION","TIFFTAG_DNGPRIVATEDATA","TIFFTAG_DNGVERSION","TIFFTAG_DOCUMENTNAME","TIFFTAG_DOTRANGE","TIFFTAG_EXIFIFD","TIFFTAG_EXTRASAMPLES","TIFFTAG_FAXDCS","TIFFTAG_FAXFILLFUNC","TIFFTAG_FAXMODE","TIFFTAG_FAXPROFILE","TIFFTAG_FAXRECVPARAMS","TIFFTAG_FAXRECVTIME","TIFFTAG_FAXSUBADDRESS","TIFFTAG_FEDEX_EDR","TIFFTAG_FILLORDER","TIFFTAG_FRAMECOUNT","TIFFTAG_FREEBYTECOUNTS","TIFFTAG_FREEOFFSETS","TIFFTAG_GLOBALPARAMETERSIFD","TIFFTAG_GPSIFD","TIFFTAG_GRAYRESPONSECURVE","TIFFTAG_GRAYRESPONSEUNIT","TIFFTAG_GROUP3OPTIONS","TIFFTAG_GROUP4OPTIONS","TIFFTAG_HALFTONEHINTS","TIFFTAG_HOSTCOMPUTER","TIFFTAG_ICCPROFILE","TIFFTAG_IMAGEBASECOLOR","TIFFTAG_IMAGEDEPTH","TIFFTAG_IMAGEDESCRIPTION","TIFFTAG_IMAGELAYER","TIFFTAG_IMAGELENGTH","TIFFTAG_IMAGEWIDTH","TIFFTAG_INDEXED","TIFFTAG_INKNAMES","TIFFTAG_INKSET","TIFFTAG_INTEROPERABILITYIFD","TIFFTAG_IT8BITSPEREXTENDEDRUNLENGTH","TIFFTAG_IT8BITSPERRUNLENGTH","TIFFTAG_IT8BKGCOLORINDICATOR","TIFFTAG_IT8BKGCOLORVALUE","TIFFTAG_IT8CMYKEQUIVALENT","TIFFTAG_IT8COLORCHARACTERIZATION","TIFFTAG_IT8COLORSEQUENCE","TIFFTAG_IT8COLORTABLE","TIFFTAG_IT8HCUSAGE","TIFFTAG_IT8HEADER","TIFFTAG_IT8IMAGECOLORINDICATOR","TIFFTAG_IT8IMAGECOLORVALUE","TIFFTAG_IT8PIXELINTENSITYRANGE","TIFFTAG_IT8RASTERPADDING","TIFFTAG_IT8SITE","TIFFTAG_IT8TRANSPARENCYINDICATOR","TIFFTAG_IT8TRAPINDICATOR","TIFFTAG_JBIGOPTIONS","TIFFTAG_JPEGACTABLES","TIFFTAG_JPEGCOLORMODE","TIFFTAG_JPEGDCTABLES","TIFFTAG_JPEGIFBYTECOUNT","TIFFTAG_JPEGIFOFFSET","TIFFTAG_JPEGLOSSLESSPREDICTORS","TIFFTAG_JPEGPOINTTRANSFORM","TIFFTAG_JPEGPROC","TIFFTAG_JPEGQTABLES","TIFFTAG_JPEGQUALITY","TIFFTAG_JPEGRESTARTINTERVAL","TIFFTAG_JPEGTABLES","TIFFTAG_JPEGTABLESMODE","TIFFTAG_LENSINFO","TIFFTAG_LERC_ADD_COMPRESSION","TIFFTAG_LERC_MAXZERROR","TIFFTAG_LERC_PARAMETERS","TIFFTAG_LERC_VERSION","TIFFTAG_LINEARIZATIONTABLE","TIFFTAG_LINEARRESPONSELIMIT","TIFFTAG_LOCALIZEDCAMERAMODEL","TIFFTAG_LZMAPRESET","TIFFTAG_MAKE","TIFFTAG_MAKERNOTESAFETY","TIFFTAG_MASKEDAREAS","TIFFTAG_MATTEING","TIFFTAG_MAXSAMPLEVALUE","TIFFTAG_MINSAMPLEVALUE","TIFFTAG_MODEL","TIFFTAG_MODENUMBER","TIFFTAG_NUMBEROFINKS","TIFFTAG_OPIIMAGEID","TIFFTAG_OPIPROXY","TIFFTAG_ORIENTATION","TIFFTAG_ORIGINALRAWFILEDATA","TIFFTAG_ORIGINALRAWFILENAME","TIFFTAG_OSUBFILETYPE","TIFFTAG_PAGENAME","TIFFTAG_PAGENUMBER","TIFFTAG_PERSAMPLE","TIFFTAG_PHOTOMETRIC","TIFFTAG_PHOTOSHOP","TIFFTAG_PIXARLOGDATAFMT","TIFFTAG_PIXARLOGQUALITY","TIFFTAG_PIXAR_FOVCOT","TIFFTAG_PIXAR_IMAGEFULLLENGTH","TIFFTAG_PIXAR_IMAGEFULLWIDTH","TIFFTAG_PIXAR_MATRIX_WORLDTOCAMERA","TIFFTAG_PIXAR_MATRIX_WORLDTOSCREEN","TIFFTAG_PIXAR_TEXTUREFORMAT","TIFFTAG_PIXAR_WRAPMODES","TIFFTAG_PLANARCONFIG","TIFFTAG_PREDICTOR","TIFFTAG_PRIMARYCHROMATICITIES","TIFFTAG_PROFILETYPE","TIFFTAG_RAWDATAUNIQUEID","TIFFTAG_REDUCTIONMATRIX1","TIFFTAG_REDUCTIONMATRIX2","TIFFTAG_REFERENCEBLACKWHITE","TIFFTAG_REFPTS","TIFFTAG_REGIONAFFINE","TIFFTAG_REGIONTACKPOINT","TIFFTAG_REGIONWARPCORNERS","TIFFTAG_RESOLUTIONUNIT","TIFFTAG_RICHTIFFIPTC","TIFFTAG_ROWSPERSTRIP","TIFFTAG_SAMPLEFORMAT","TIFFTAG_SAMPLESPERPIXEL","TIFFTAG_SGILOGDATAFMT","TIFFTAG_SGILOGENCODE","TIFFTAG_SHADOWSCALE","TIFFTAG_SMAXSAMPLEVALUE","TIFFTAG_SMINSAMPLEVALUE","TIFFTAG_SOFTWARE","TIFFTAG_STONITS","TIFFTAG_STRIPBYTECOUNTS","TIFFTAG_STRIPOFFSETS","TIFFTAG_STRIPROWCOUNTS","TIFFTAG_SUBFILETYPE","TIFFTAG_SUBIFD","TIFFTAG_T4OPTIONS","TIFFTAG_T6OPTIONS","TIFFTAG_T82OPTIONS","TIFFTAG_TARGETPRINTER","TIFFTAG_THRESHHOLDING","TIFFTAG_TILEBYTECOUNTS","TIFFTAG_TILEDEPTH","TIFFTAG_TILELENGTH","TIFFTAG_TILEOFFSETS","TIFFTAG_TILEWIDTH","TIFFTAG_TRANSFERFUNCTION","TIFFTAG_UNIQUECAMERAMODEL","TIFFTAG_VERSIONYEAR","TIFFTAG_WEBP_LEVEL","TIFFTAG_WEBP_LOSSLESS","TIFFTAG_WHITELEVEL","TIFFTAG_WHITEPOINT","TIFFTAG_WRITERSERIALNUMBER","TIFFTAG_XCLIPPATHUNITS","TIFFTAG_XMLPACKET","TIFFTAG_XPOSITION","TIFFTAG_XRESOLUTION","TIFFTAG_YCBCRCOEFFICIENTS","TIFFTAG_YCBCRPOSITIONING","TIFFTAG_YCBCRSUBSAMPLING","TIFFTAG_YCLIPPATHUNITS","TIFFTAG_YPOSITION","TIFFTAG_YRESOLUTION","TIFFTAG_ZIPQUALITY","TIFFTAG_ZSTD_LEVEL","TIFF_BIGENDIAN","TIFF_LITTLEENDIAN","TIFF_VERSION_BIG","TIFF_VERSION_CLASSIC","YCBCRPOSITION_CENTERED","YCBCRPOSITION_COSITED","_TIFF_"]}]}
{"Filepath":"src/3rdparty/libtiff/libtiff/tiffconf.h","Functions":null,"Records":[{"Name":"macro","Fields":["CCITT_SUPPORT","CHECK_JPEG_YCBCR_SUBSAMPLING","CMYK_SUPPORT","COLORIMETRY_SUPPORT","DEFAULT_EXTRASAMPLE_AS_ALPHA","HAVE_IEEEFP","HOST_BIGENDIAN","HOST_FILLORDER","ICC_SUPPORT","IPTC_SUPPORT","LOGLUV_SUPPORT","LZW_SUPPORT","MDI_SUPPORT","NEXT_SUPPORT","PACKBITS_SUPPORT","PHOTOSHOP_SUPPORT","PIXARLOG_SUPPORT","STRIPCHOP_DEFAULT","SUBIFD_SUPPORT","THUNDER_SUPPORT","TIFF_INT16_T","TIFF_INT32_T","TIFF_INT64_T","TIFF_INT8_T","TIFF_PTRDIFF_T","TIFF_SSIZE_T","TIFF_UINT16_T","TIFF_UINT32_T","TIFF_UINT64_T","TIFF_UINT8_T","YCBCR_SUPPORT","ZIP_SUPPORT","_TIFFCONF_"]}]}
{"Filepath":"src/3rdparty/libtiff/libtiff/tiffconf.vc.h","Functions":null,"Records":[{"Name":"macro","Fields":["CCITT_SUPPORT","CHECK_JPEG_YCBCR_SUBSAMPLING","CMYK_SUPPORT","COLORIMETRY_SUPPORT","DEFAULT_EXTRASAMPLE_AS_ALPHA","HAVE_IEEEFP","HOST_BIGENDIAN","HOST_FILLORDER","ICC_SUPPORT","IPTC_SUPPORT","LOGLUV_SUPPORT","LZW_SUPPORT","NEXT_SUPPORT","PACKBITS_SUPPORT","PHOTOSHOP_SUPPORT","SIZEOF_INT","STRIPCHOP_DEFAULT","SUBIFD_SUPPORT","THUNDER_SUPPORT","TIFF_INT16_T","TIFF_INT32_FORMAT","TIFF_INT32_T","TIFF_INT64_FORMAT","TIFF_INT64_T","TIFF_INT8_T","TIFF_SSIZE_T","TIFF_UINT16_T","TIFF_UINT32_FORMAT","TIFF_UINT32_T","TIFF_UINT64_FORMAT","TIFF_UINT64_T","TIFF_UINT8_T","YCBCR_SUPPORT","_TIFFCONF_"]}]}
{"Filepath":"src/3rdparty/libtiff/libtiff/tiffconf.wince.h","Functions":null,"Records":[{"Name":"macro","Fields":["CCITT_SUPPORT","CHECK_JPEG_YCBCR_SUBSAMPLING","CMYK_SUPPORT","COLORIMETRY_SUPPORT","DEFAULT_EXTRASAMPLE_AS_ALPHA","HAVE_IEEEFP","HOST_BIGENDIAN","HOST_FILLORDER","ICC_SUPPORT","IPTC_SUPPORT","LOGLUV_SUPPORT","LZW_SUPPORT","NEXT_SUPPORT","PACKBITS_SUPPORT","PHOTOSHOP_SUPPORT","SIZEOF_INT","STRIPCHOP_DEFAULT","SUBIFD_SUPPORT","THUNDER_SUPPORT","YCBCR_SUPPORT","_TIFFCONF_"]}]}
{"Filepath":"src/3rdparty/libtiff/libtiff/tiffio.h","Functions":[{"Uniquefunname":" DECLARE_HANDLE(thandle_t)","Funname":"DECLARE_HANDLE","Returntype":"","Args":"thandle_t"},{"Uniquefunname":"int LogL10fromY(double,int)","Funname":"LogL10fromY","Returntype":"int","Args":"double,int"},{"Uniquefunname":"double LogL10toY(int)","Funname":"LogL10toY","Returntype":"double","Args":"int"},{"Uniquefunname":"int LogL16fromY(double,int)","Funname":"LogL16fromY","Returntype":"int","Args":"double,int"},{"Uniquefunname":"double LogL16toY(int)","Funname":"LogL16toY","Returntype":"double","Args":"int"},{"Uniquefunname":"uint32 LogLuv24fromXYZ(float *,int)","Funname":"LogLuv24fromXYZ","Returntype":"uint32","Args":"float *,int"},{"Uniquefunname":"void LogLuv24toXYZ(uint32,float *)","Funname":"LogLuv24toXYZ","Returntype":"void","Args":"uint32,float *"},{"Uniquefunname":"uint32 LogLuv32fromXYZ(float *,int)","Funname":"LogLuv32fromXYZ","Returntype":"uint32","Args":"float *,int"},{"Uniquefunname":"void LogLuv32toXYZ(uint32,float *)","Funname":"LogLuv32toXYZ","Returntype":"void","Args":"uint32,float *"},{"Uniquefunname":"TIFFTagMethods * TIFFAccessTagMethods(TIFF *)","Funname":"TIFFAccessTagMethods","Returntype":"TIFFTagMethods *","Args":"TIFF *"},{"Uniquefunname":"int TIFFCIELabToRGBInit(TIFFCIELabToRGB *,const TIFFDisplay *,float *)","Funname":"TIFFCIELabToRGBInit","Returntype":"int","Args":"TIFFCIELabToRGB *,const TIFFDisplay *,float *"},{"Uniquefunname":"void TIFFCIELabToXYZ(TIFFCIELabToRGB *,uint32,int32,int32,float *,float *,float *)","Funname":"TIFFCIELabToXYZ","Returntype":"void","Args":"TIFFCIELabToRGB *,uint32,int32,int32,float *,float *,float *"},{"Uniquefunname":"int TIFFCheckTile(TIFF * tif,uint32 x,uint32 y,uint32 z,uint16 s)","Funname":"TIFFCheckTile","Returntype":"int","Args":"TIFF * tif,uint32 x,uint32 y,uint32 z,uint16 s"},{"Uniquefunname":"int TIFFCheckpointDirectory(TIFF *)","Funname":"TIFFCheckpointDirectory","Returntype":"int","Args":"TIFF *"},{"Uniquefunname":"void TIFFCleanup(TIFF * tif)","Funname":"TIFFCleanup","Returntype":"void","Args":"TIFF * tif"},{"Uniquefunname":"TIFF * TIFFClientOpen(const char *,const char *,thandle_t,TIFFReadWriteProc,TIFFReadWriteProc,TIFFSeekProc,TIFFCloseProc,TIFFSizeProc,TIFFMapFileProc,TIFFUnmapFileProc)","Funname":"TIFFClientOpen","Returntype":"TIFF *","Args":"const char *,const char *,thandle_t,TIFFReadWriteProc,TIFFReadWriteProc,TIFFSeekProc,TIFFCloseProc,TIFFSizeProc,TIFFMapFileProc,TIFFUnmapFileProc"},{"Uniquefunname":"thandle_t TIFFClientdata(TIFF *)","Funname":"TIFFClientdata","Returntype":"thandle_t","Args":"TIFF *"},{"Uniquefunname":"void TIFFClose(TIFF * tif)","Funname":"TIFFClose","Returntype":"void","Args":"TIFF * tif"},{"Uniquefunname":"uint32 TIFFComputeStrip(TIFF *,uint32,uint16)","Funname":"TIFFComputeStrip","Returntype":"uint32","Args":"TIFF *,uint32,uint16"},{"Uniquefunname":"uint32 TIFFComputeTile(TIFF * tif,uint32 x,uint32 y,uint32 z,uint16 s)","Funname":"TIFFComputeTile","Returntype":"uint32","Args":"TIFF * tif,uint32 x,uint32 y,uint32 z,uint16 s"},{"Uniquefunname":"int TIFFCreateCustomDirectory(TIFF *,const TIFFFieldArray *)","Funname":"TIFFCreateCustomDirectory","Returntype":"int","Args":"TIFF *,const TIFFFieldArray *"},{"Uniquefunname":"int TIFFCreateDirectory(TIFF *)","Funname":"TIFFCreateDirectory","Returntype":"int","Args":"TIFF *"},{"Uniquefunname":"int TIFFCreateEXIFDirectory(TIFF *)","Funname":"TIFFCreateEXIFDirectory","Returntype":"int","Args":"TIFF *"},{"Uniquefunname":"uint64 TIFFCurrentDirOffset(TIFF *)","Funname":"TIFFCurrentDirOffset","Returntype":"uint64","Args":"TIFF *"},{"Uniquefunname":"uint16 TIFFCurrentDirectory(TIFF *)","Funname":"TIFFCurrentDirectory","Returntype":"uint16","Args":"TIFF *"},{"Uniquefunname":"uint32 TIFFCurrentRow(TIFF *)","Funname":"TIFFCurrentRow","Returntype":"uint32","Args":"TIFF *"},{"Uniquefunname":"uint32 TIFFCurrentStrip(TIFF *)","Funname":"TIFFCurrentStrip","Returntype":"uint32","Args":"TIFF *"},{"Uniquefunname":"uint32 TIFFCurrentTile(TIFF * tif)","Funname":"TIFFCurrentTile","Returntype":"uint32","Args":"TIFF * tif"},{"Uniquefunname":"int TIFFDataWidth(TIFFDataType)","Funname":"TIFFDataWidth","Returntype":"int","Args":"TIFFDataType"},{"Uniquefunname":"uint32 TIFFDefaultStripSize(TIFF * tif,uint32 request)","Funname":"TIFFDefaultStripSize","Returntype":"uint32","Args":"TIFF * tif,uint32 request"},{"Uniquefunname":"void TIFFDefaultTileSize(TIFF *,uint32 *,uint32 *)","Funname":"TIFFDefaultTileSize","Returntype":"void","Args":"TIFF *,uint32 *,uint32 *"},{"Uniquefunname":"int TIFFDeferStrileArrayWriting(TIFF *)","Funname":"TIFFDeferStrileArrayWriting","Returntype":"int","Args":"TIFF *"},{"Uniquefunname":"void TIFFError(const char *,const char *,...)","Funname":"TIFFError","Returntype":"void","Args":"const char *,const char *,..."},{"Uniquefunname":"void TIFFErrorExt(thandle_t,const char *,const char *,...)","Funname":"TIFFErrorExt","Returntype":"void","Args":"thandle_t,const char *,const char *,..."},{"Uniquefunname":"TIFF * TIFFFdOpen(int,const char *,const char *)","Funname":"TIFFFdOpen","Returntype":"TIFF *","Args":"int,const char *,const char *"},{"Uniquefunname":"TIFFDataType TIFFFieldDataType(const TIFFField *)","Funname":"TIFFFieldDataType","Returntype":"TIFFDataType","Args":"const TIFFField *"},{"Uniquefunname":"const char * TIFFFieldName(const TIFFField *)","Funname":"TIFFFieldName","Returntype":"const char *","Args":"const TIFFField *"},{"Uniquefunname":"int TIFFFieldPassCount(const TIFFField *)","Funname":"TIFFFieldPassCount","Returntype":"int","Args":"const TIFFField *"},{"Uniquefunname":"int TIFFFieldReadCount(const TIFFField *)","Funname":"TIFFFieldReadCount","Returntype":"int","Args":"const TIFFField *"},{"Uniquefunname":"uint32 TIFFFieldTag(const TIFFField *)","Funname":"TIFFFieldTag","Returntype":"uint32","Args":"const TIFFField *"},{"Uniquefunname":"const TIFFField * TIFFFieldWithName(TIFF *,const char *)","Funname":"TIFFFieldWithName","Returntype":"const TIFFField *","Args":"TIFF *,const char *"},{"Uniquefunname":"const TIFFField * TIFFFieldWithTag(TIFF *,uint32)","Funname":"TIFFFieldWithTag","Returntype":"const TIFFField *","Args":"TIFF *,uint32"},{"Uniquefunname":"int TIFFFieldWriteCount(const TIFFField *)","Funname":"TIFFFieldWriteCount","Returntype":"int","Args":"const TIFFField *"},{"Uniquefunname":"const char * TIFFFileName(TIFF *)","Funname":"TIFFFileName","Returntype":"const char *","Args":"TIFF *"},{"Uniquefunname":"int TIFFFileno(TIFF *)","Funname":"TIFFFileno","Returntype":"int","Args":"TIFF *"},{"Uniquefunname":"const TIFFCodec * TIFFFindCODEC(uint16)","Funname":"TIFFFindCODEC","Returntype":"const TIFFCodec *","Args":"uint16"},{"Uniquefunname":"const TIFFField * TIFFFindField(TIFF *,uint32,TIFFDataType)","Funname":"TIFFFindField","Returntype":"const TIFFField *","Args":"TIFF *,uint32,TIFFDataType"},{"Uniquefunname":"int TIFFFlush(TIFF * tif)","Funname":"TIFFFlush","Returntype":"int","Args":"TIFF * tif"},{"Uniquefunname":"int TIFFFlushData(TIFF * tif)","Funname":"TIFFFlushData","Returntype":"int","Args":"TIFF * tif"},{"Uniquefunname":"int TIFFForceStrileArrayWriting(TIFF *)","Funname":"TIFFForceStrileArrayWriting","Returntype":"int","Args":"TIFF *"},{"Uniquefunname":"void TIFFFreeDirectory(TIFF *)","Funname":"TIFFFreeDirectory","Returntype":"void","Args":"TIFF *"},{"Uniquefunname":"const unsigned char * TIFFGetBitRevTable(int)","Funname":"TIFFGetBitRevTable","Returntype":"const unsigned char *","Args":"int"},{"Uniquefunname":"void * TIFFGetClientInfo(TIFF *,const char *)","Funname":"TIFFGetClientInfo","Returntype":"void *","Args":"TIFF *,const char *"},{"Uniquefunname":"TIFFCloseProc TIFFGetCloseProc(TIFF *)","Funname":"TIFFGetCloseProc","Returntype":"TIFFCloseProc","Args":"TIFF *"},{"Uniquefunname":"TIFFCodec * TIFFGetConfiguredCODECs(void)","Funname":"TIFFGetConfiguredCODECs","Returntype":"TIFFCodec *","Args":"void"},{"Uniquefunname":"int TIFFGetField(TIFF * tif,uint32 tag,...)","Funname":"TIFFGetField","Returntype":"int","Args":"TIFF * tif,uint32 tag,..."},{"Uniquefunname":"int TIFFGetFieldDefaulted(TIFF * tif,uint32 tag,...)","Funname":"TIFFGetFieldDefaulted","Returntype":"int","Args":"TIFF * tif,uint32 tag,..."},{"Uniquefunname":"TIFFMapFileProc TIFFGetMapFileProc(TIFF *)","Funname":"TIFFGetMapFileProc","Returntype":"TIFFMapFileProc","Args":"TIFF *"},{"Uniquefunname":"int TIFFGetMode(TIFF *)","Funname":"TIFFGetMode","Returntype":"int","Args":"TIFF *"},{"Uniquefunname":"TIFFReadWriteProc TIFFGetReadProc(TIFF *)","Funname":"TIFFGetReadProc","Returntype":"TIFFReadWriteProc","Args":"TIFF *"},{"Uniquefunname":"TIFFSeekProc TIFFGetSeekProc(TIFF *)","Funname":"TIFFGetSeekProc","Returntype":"TIFFSeekProc","Args":"TIFF *"},{"Uniquefunname":"TIFFSizeProc TIFFGetSizeProc(TIFF *)","Funname":"TIFFGetSizeProc","Returntype":"TIFFSizeProc","Args":"TIFF *"},{"Uniquefunname":"uint64 TIFFGetStrileByteCount(TIFF * tif,uint32 strile)","Funname":"TIFFGetStrileByteCount","Returntype":"uint64","Args":"TIFF * tif,uint32 strile"},{"Uniquefunname":"uint64 TIFFGetStrileByteCountWithErr(TIFF * tif,uint32 strile,int * pbErr)","Funname":"TIFFGetStrileByteCountWithErr","Returntype":"uint64","Args":"TIFF * tif,uint32 strile,int * pbErr"},{"Uniquefunname":"uint64 TIFFGetStrileOffset(TIFF * tif,uint32 strile)","Funname":"TIFFGetStrileOffset","Returntype":"uint64","Args":"TIFF * tif,uint32 strile"},{"Uniquefunname":"uint64 TIFFGetStrileOffsetWithErr(TIFF * tif,uint32 strile,int * pbErr)","Funname":"TIFFGetStrileOffsetWithErr","Returntype":"uint64","Args":"TIFF * tif,uint32 strile,int * pbErr"},{"Uniquefunname":"int TIFFGetTagListCount(TIFF *)","Funname":"TIFFGetTagListCount","Returntype":"int","Args":"TIFF *"},{"Uniquefunname":"uint32 TIFFGetTagListEntry(TIFF *,int tag_index)","Funname":"TIFFGetTagListEntry","Returntype":"uint32","Args":"TIFF *,int tag_index"},{"Uniquefunname":"TIFFUnmapFileProc TIFFGetUnmapFileProc(TIFF *)","Funname":"TIFFGetUnmapFileProc","Returntype":"TIFFUnmapFileProc","Args":"TIFF *"},{"Uniquefunname":"const char * TIFFGetVersion(void)","Funname":"TIFFGetVersion","Returntype":"const char *","Args":"void"},{"Uniquefunname":"TIFFReadWriteProc TIFFGetWriteProc(TIFF *)","Funname":"TIFFGetWriteProc","Returntype":"TIFFReadWriteProc","Args":"TIFF *"},{"Uniquefunname":"int TIFFIsBigEndian(TIFF *)","Funname":"TIFFIsBigEndian","Returntype":"int","Args":"TIFF *"},{"Uniquefunname":"int TIFFIsByteSwapped(TIFF *)","Funname":"TIFFIsByteSwapped","Returntype":"int","Args":"TIFF *"},{"Uniquefunname":"int TIFFIsCODECConfigured(uint16)","Funname":"TIFFIsCODECConfigured","Returntype":"int","Args":"uint16"},{"Uniquefunname":"int TIFFIsMSB2LSB(TIFF *)","Funname":"TIFFIsMSB2LSB","Returntype":"int","Args":"TIFF *"},{"Uniquefunname":"int TIFFIsTiled(TIFF *)","Funname":"TIFFIsTiled","Returntype":"int","Args":"TIFF *"},{"Uniquefunname":"int TIFFIsUpSampled(TIFF *)","Funname":"TIFFIsUpSampled","Returntype":"int","Args":"TIFF *"},{"Uniquefunname":"int TIFFLastDirectory(TIFF *)","Funname":"TIFFLastDirectory","Returntype":"int","Args":"TIFF *"},{"Uniquefunname":"int TIFFMergeFieldInfo(TIFF *,const TIFFFieldInfo[],uint32)","Funname":"TIFFMergeFieldInfo","Returntype":"int","Args":"TIFF *,const TIFFFieldInfo[],uint32"},{"Uniquefunname":"uint16 TIFFNumberOfDirectories(TIFF *)","Funname":"TIFFNumberOfDirectories","Returntype":"uint16","Args":"TIFF *"},{"Uniquefunname":"uint32 TIFFNumberOfStrips(TIFF *)","Funname":"TIFFNumberOfStrips","Returntype":"uint32","Args":"TIFF *"},{"Uniquefunname":"uint32 TIFFNumberOfTiles(TIFF *)","Funname":"TIFFNumberOfTiles","Returntype":"uint32","Args":"TIFF *"},{"Uniquefunname":"TIFF * TIFFOpen(const char *,const char *)","Funname":"TIFFOpen","Returntype":"TIFF *","Args":"const char *,const char *"},{"Uniquefunname":"TIFF * TIFFOpenW(const wchar_t *,const char *)","Funname":"TIFFOpenW","Returntype":"TIFF *","Args":"const wchar_t *,const char *"},{"Uniquefunname":"void TIFFPrintDirectory(TIFF *,FILE *,long)","Funname":"TIFFPrintDirectory","Returntype":"void","Args":"TIFF *,FILE *,long"},{"Uniquefunname":"int TIFFRGBAImageBegin(TIFFRGBAImage *,TIFF *,int,char[1024])","Funname":"TIFFRGBAImageBegin","Returntype":"int","Args":"TIFFRGBAImage *,TIFF *,int,char[1024]"},{"Uniquefunname":"void TIFFRGBAImageEnd(TIFFRGBAImage *)","Funname":"TIFFRGBAImageEnd","Returntype":"void","Args":"TIFFRGBAImage *"},{"Uniquefunname":"int TIFFRGBAImageGet(TIFFRGBAImage *,uint32 *,uint32,uint32)","Funname":"TIFFRGBAImageGet","Returntype":"int","Args":"TIFFRGBAImage *,uint32 *,uint32,uint32"},{"Uniquefunname":"int TIFFRGBAImageOK(TIFF *,char[1024])","Funname":"TIFFRGBAImageOK","Returntype":"int","Args":"TIFF *,char[1024]"},{"Uniquefunname":"tmsize_t TIFFRasterScanlineSize(TIFF * tif)","Funname":"TIFFRasterScanlineSize","Returntype":"tmsize_t","Args":"TIFF * tif"},{"Uniquefunname":"uint64 TIFFRasterScanlineSize64(TIFF * tif)","Funname":"TIFFRasterScanlineSize64","Returntype":"uint64","Args":"TIFF * tif"},{"Uniquefunname":"tmsize_t TIFFRawStripSize(TIFF * tif,uint32 strip)","Funname":"TIFFRawStripSize","Returntype":"tmsize_t","Args":"TIFF * tif,uint32 strip"},{"Uniquefunname":"uint64 TIFFRawStripSize64(TIFF * tif,uint32 strip)","Funname":"TIFFRawStripSize64","Returntype":"uint64","Args":"TIFF * tif,uint32 strip"},{"Uniquefunname":"int TIFFReadBufferSetup(TIFF * tif,void * bp,tmsize_t size)","Funname":"TIFFReadBufferSetup","Returntype":"int","Args":"TIFF * tif,void * bp,tmsize_t size"},{"Uniquefunname":"int TIFFReadCustomDirectory(TIFF * tif,toff_t diroff,const TIFFFieldArray * infoarray)","Funname":"TIFFReadCustomDirectory","Returntype":"int","Args":"TIFF * tif,toff_t diroff,const TIFFFieldArray * infoarray"},{"Uniquefunname":"int TIFFReadDirectory(TIFF * tif)","Funname":"TIFFReadDirectory","Returntype":"int","Args":"TIFF * tif"},{"Uniquefunname":"int TIFFReadEXIFDirectory(TIFF * tif,toff_t diroff)","Funname":"TIFFReadEXIFDirectory","Returntype":"int","Args":"TIFF * tif,toff_t diroff"},{"Uniquefunname":"tmsize_t TIFFReadEncodedStrip(TIFF * tif,uint32 strip,void * buf,tmsize_t size)","Funname":"TIFFReadEncodedStrip","Returntype":"tmsize_t","Args":"TIFF * tif,uint32 strip,void * buf,tmsize_t size"},{"Uniquefunname":"tmsize_t TIFFReadEncodedTile(TIFF * tif,uint32 tile,void * buf,tmsize_t size)","Funname":"TIFFReadEncodedTile","Returntype":"tmsize_t","Args":"TIFF * tif,uint32 tile,void * buf,tmsize_t size"},{"Uniquefunname":"int TIFFReadFromUserBuffer(TIFF * tif,uint32 strile,void * inbuf,tmsize_t insize,void * outbuf,tmsize_t outsize)","Funname":"TIFFReadFromUserBuffer","Returntype":"int","Args":"TIFF * tif,uint32 strile,void * inbuf,tmsize_t insize,void * outbuf,tmsize_t outsize"},{"Uniquefunname":"int TIFFReadRGBAImage(TIFF *,uint32,uint32,uint32 *,int)","Funname":"TIFFReadRGBAImage","Returntype":"int","Args":"TIFF *,uint32,uint32,uint32 *,int"},{"Uniquefunname":"int TIFFReadRGBAImageOriented(TIFF *,uint32,uint32,uint32 *,int,int)","Funname":"TIFFReadRGBAImageOriented","Returntype":"int","Args":"TIFF *,uint32,uint32,uint32 *,int,int"},{"Uniquefunname":"int TIFFReadRGBAStrip(TIFF *,uint32,uint32 *)","Funname":"TIFFReadRGBAStrip","Returntype":"int","Args":"TIFF *,uint32,uint32 *"},{"Uniquefunname":"int TIFFReadRGBAStripExt(TIFF *,uint32,uint32 *,int stop_on_error)","Funname":"TIFFReadRGBAStripExt","Returntype":"int","Args":"TIFF *,uint32,uint32 *,int stop_on_error"},{"Uniquefunname":"int TIFFReadRGBATile(TIFF *,uint32,uint32,uint32 *)","Funname":"TIFFReadRGBATile","Returntype":"int","Args":"TIFF *,uint32,uint32,uint32 *"},{"Uniquefunname":"int TIFFReadRGBATileExt(TIFF *,uint32,uint32,uint32 *,int stop_on_error)","Funname":"TIFFReadRGBATileExt","Returntype":"int","Args":"TIFF *,uint32,uint32,uint32 *,int stop_on_error"},{"Uniquefunname":"tmsize_t TIFFReadRawStrip(TIFF * tif,uint32 strip,void * buf,tmsize_t size)","Funname":"TIFFReadRawStrip","Returntype":"tmsize_t","Args":"TIFF * tif,uint32 strip,void * buf,tmsize_t size"},{"Uniquefunname":"tmsize_t TIFFReadRawTile(TIFF * tif,uint32 tile,void * buf,tmsize_t size)","Funname":"TIFFReadRawTile","Returntype":"tmsize_t","Args":"TIFF * tif,uint32 tile,void * buf,tmsize_t size"},{"Uniquefunname":"int TIFFReadScanline(TIFF * tif,void * buf,uint32 row,uint16 sample)","Funname":"TIFFReadScanline","Returntype":"int","Args":"TIFF * tif,void * buf,uint32 row,uint16 sample"},{"Uniquefunname":"tmsize_t TIFFReadTile(TIFF * tif,void * buf,uint32 x,uint32 y,uint32 z,uint16 s)","Funname":"TIFFReadTile","Returntype":"tmsize_t","Args":"TIFF * tif,void * buf,uint32 x,uint32 y,uint32 z,uint16 s"},{"Uniquefunname":"TIFFCodec * TIFFRegisterCODEC(uint16,const char *,TIFFInitMethod)","Funname":"TIFFRegisterCODEC","Returntype":"TIFFCodec *","Args":"uint16,const char *,TIFFInitMethod"},{"Uniquefunname":"void TIFFReverseBits(uint8 * cp,tmsize_t n)","Funname":"TIFFReverseBits","Returntype":"void","Args":"uint8 * cp,tmsize_t n"},{"Uniquefunname":"int TIFFRewriteDirectory(TIFF *)","Funname":"TIFFRewriteDirectory","Returntype":"int","Args":"TIFF *"},{"Uniquefunname":"tmsize_t TIFFScanlineSize(TIFF * tif)","Funname":"TIFFScanlineSize","Returntype":"tmsize_t","Args":"TIFF * tif"},{"Uniquefunname":"uint64 TIFFScanlineSize64(TIFF * tif)","Funname":"TIFFScanlineSize64","Returntype":"uint64","Args":"TIFF * tif"},{"Uniquefunname":"void TIFFSetClientInfo(TIFF *,void *,const char *)","Funname":"TIFFSetClientInfo","Returntype":"void","Args":"TIFF *,void *,const char *"},{"Uniquefunname":"thandle_t TIFFSetClientdata(TIFF *,thandle_t)","Funname":"TIFFSetClientdata","Returntype":"thandle_t","Args":"TIFF *,thandle_t"},{"Uniquefunname":"int TIFFSetDirectory(TIFF *,uint16)","Funname":"TIFFSetDirectory","Returntype":"int","Args":"TIFF *,uint16"},{"Uniquefunname":"TIFFErrorHandler TIFFSetErrorHandler(TIFFErrorHandler)","Funname":"TIFFSetErrorHandler","Returntype":"TIFFErrorHandler","Args":"TIFFErrorHandler"},{"Uniquefunname":"TIFFErrorHandlerExt TIFFSetErrorHandlerExt(TIFFErrorHandlerExt)","Funname":"TIFFSetErrorHandlerExt","Returntype":"TIFFErrorHandlerExt","Args":"TIFFErrorHandlerExt"},{"Uniquefunname":"int TIFFSetField(TIFF *,uint32,...)","Funname":"TIFFSetField","Returntype":"int","Args":"TIFF *,uint32,..."},{"Uniquefunname":"const char * TIFFSetFileName(TIFF *,const char *)","Funname":"TIFFSetFileName","Returntype":"const char *","Args":"TIFF *,const char *"},{"Uniquefunname":"int TIFFSetFileno(TIFF *,int)","Funname":"TIFFSetFileno","Returntype":"int","Args":"TIFF *,int"},{"Uniquefunname":"int TIFFSetMode(TIFF *,int)","Funname":"TIFFSetMode","Returntype":"int","Args":"TIFF *,int"},{"Uniquefunname":"int TIFFSetSubDirectory(TIFF *,uint64)","Funname":"TIFFSetSubDirectory","Returntype":"int","Args":"TIFF *,uint64"},{"Uniquefunname":"TIFFExtendProc TIFFSetTagExtender(TIFFExtendProc)","Funname":"TIFFSetTagExtender","Returntype":"TIFFExtendProc","Args":"TIFFExtendProc"},{"Uniquefunname":"TIFFErrorHandler TIFFSetWarningHandler(TIFFErrorHandler)","Funname":"TIFFSetWarningHandler","Returntype":"TIFFErrorHandler","Args":"TIFFErrorHandler"},{"Uniquefunname":"TIFFErrorHandlerExt TIFFSetWarningHandlerExt(TIFFErrorHandlerExt)","Funname":"TIFFSetWarningHandlerExt","Returntype":"TIFFErrorHandlerExt","Args":"TIFFErrorHandlerExt"},{"Uniquefunname":"void TIFFSetWriteOffset(TIFF * tif,toff_t off)","Funname":"TIFFSetWriteOffset","Returntype":"void","Args":"TIFF * tif,toff_t off"},{"Uniquefunname":"int TIFFSetupStrips(TIFF *)","Funname":"TIFFSetupStrips","Returntype":"int","Args":"TIFF *"},{"Uniquefunname":"tmsize_t TIFFStripSize(TIFF * tif)","Funname":"TIFFStripSize","Returntype":"tmsize_t","Args":"TIFF * tif"},{"Uniquefunname":"uint64 TIFFStripSize64(TIFF * tif)","Funname":"TIFFStripSize64","Returntype":"uint64","Args":"TIFF * tif"},{"Uniquefunname":"void TIFFSwabArrayOfDouble(double * dp,tmsize_t n)","Funname":"TIFFSwabArrayOfDouble","Returntype":"void","Args":"double * dp,tmsize_t n"},{"Uniquefunname":"void TIFFSwabArrayOfFloat(float * fp,tmsize_t n)","Funname":"TIFFSwabArrayOfFloat","Returntype":"void","Args":"float * fp,tmsize_t n"},{"Uniquefunname":"void TIFFSwabArrayOfLong(uint32 * lp,tmsize_t n)","Funname":"TIFFSwabArrayOfLong","Returntype":"void","Args":"uint32 * lp,tmsize_t n"},{"Uniquefunname":"void TIFFSwabArrayOfLong8(uint64 * lp,tmsize_t n)","Funname":"TIFFSwabArrayOfLong8","Returntype":"void","Args":"uint64 * lp,tmsize_t n"},{"Uniquefunname":"void TIFFSwabArrayOfShort(uint16 * wp,tmsize_t n)","Funname":"TIFFSwabArrayOfShort","Returntype":"void","Args":"uint16 * wp,tmsize_t n"},{"Uniquefunname":"void TIFFSwabArrayOfTriples(uint8 * tp,tmsize_t n)","Funname":"TIFFSwabArrayOfTriples","Returntype":"void","Args":"uint8 * tp,tmsize_t n"},{"Uniquefunname":"void TIFFSwabDouble(double *)","Funname":"TIFFSwabDouble","Returntype":"void","Args":"double *"},{"Uniquefunname":"void TIFFSwabFloat(float *)","Funname":"TIFFSwabFloat","Returntype":"void","Args":"float *"},{"Uniquefunname":"void TIFFSwabLong(uint32 *)","Funname":"TIFFSwabLong","Returntype":"void","Args":"uint32 *"},{"Uniquefunname":"void TIFFSwabLong8(uint64 *)","Funname":"TIFFSwabLong8","Returntype":"void","Args":"uint64 *"},{"Uniquefunname":"void TIFFSwabShort(uint16 *)","Funname":"TIFFSwabShort","Returntype":"void","Args":"uint16 *"},{"Uniquefunname":"tmsize_t TIFFTileRowSize(TIFF * tif)","Funname":"TIFFTileRowSize","Returntype":"tmsize_t","Args":"TIFF * tif"},{"Uniquefunname":"uint64 TIFFTileRowSize64(TIFF * tif)","Funname":"TIFFTileRowSize64","Returntype":"uint64","Args":"TIFF * tif"},{"Uniquefunname":"tmsize_t TIFFTileSize(TIFF * tif)","Funname":"TIFFTileSize","Returntype":"tmsize_t","Args":"TIFF * tif"},{"Uniquefunname":"uint64 TIFFTileSize64(TIFF * tif)","Funname":"TIFFTileSize64","Returntype":"uint64","Args":"TIFF * tif"},{"Uniquefunname":"void TIFFUnRegisterCODEC(TIFFCodec *)","Funname":"TIFFUnRegisterCODEC","Returntype":"void","Args":"TIFFCodec *"},{"Uniquefunname":"int TIFFUnlinkDirectory(TIFF *,uint16)","Funname":"TIFFUnlinkDirectory","Returntype":"int","Args":"TIFF *,uint16"},{"Uniquefunname":"int TIFFUnsetField(TIFF *,uint32)","Funname":"TIFFUnsetField","Returntype":"int","Args":"TIFF *,uint32"},{"Uniquefunname":"int TIFFVGetField(TIFF * tif,uint32 tag,va_list ap)","Funname":"TIFFVGetField","Returntype":"int","Args":"TIFF * tif,uint32 tag,va_list ap"},{"Uniquefunname":"int TIFFVGetFieldDefaulted(TIFF * tif,uint32 tag,va_list ap)","Funname":"TIFFVGetFieldDefaulted","Returntype":"int","Args":"TIFF * tif,uint32 tag,va_list ap"},{"Uniquefunname":"int TIFFVSetField(TIFF *,uint32,va_list)","Funname":"TIFFVSetField","Returntype":"int","Args":"TIFF *,uint32,va_list"},{"Uniquefunname":"tmsize_t TIFFVStripSize(TIFF * tif,uint32 nrows)","Funname":"TIFFVStripSize","Returntype":"tmsize_t","Args":"TIFF * tif,uint32 nrows"},{"Uniquefunname":"uint64 TIFFVStripSize64(TIFF * tif,uint32 nrows)","Funname":"TIFFVStripSize64","Returntype":"uint64","Args":"TIFF * tif,uint32 nrows"},{"Uniquefunname":"tmsize_t TIFFVTileSize(TIFF * tif,uint32 nrows)","Funname":"TIFFVTileSize","Returntype":"tmsize_t","Args":"TIFF * tif,uint32 nrows"},{"Uniquefunname":"uint64 TIFFVTileSize64(TIFF * tif,uint32 nrows)","Funname":"TIFFVTileSize64","Returntype":"uint64","Args":"TIFF * tif,uint32 nrows"},{"Uniquefunname":"void TIFFWarning(const char *,const char *,...)","Funname":"TIFFWarning","Returntype":"void","Args":"const char *,const char *,..."},{"Uniquefunname":"void TIFFWarningExt(thandle_t,const char *,const char *,...)","Funname":"TIFFWarningExt","Returntype":"void","Args":"thandle_t,const char *,const char *,..."},{"Uniquefunname":"int TIFFWriteBufferSetup(TIFF * tif,void * bp,tmsize_t size)","Funname":"TIFFWriteBufferSetup","Returntype":"int","Args":"TIFF * tif,void * bp,tmsize_t size"},{"Uniquefunname":"int TIFFWriteCheck(TIFF *,int,const char *)","Funname":"TIFFWriteCheck","Returntype":"int","Args":"TIFF *,int,const char *"},{"Uniquefunname":"int TIFFWriteCustomDirectory(TIFF *,uint64 *)","Funname":"TIFFWriteCustomDirectory","Returntype":"int","Args":"TIFF *,uint64 *"},{"Uniquefunname":"int TIFFWriteDirectory(TIFF *)","Funname":"TIFFWriteDirectory","Returntype":"int","Args":"TIFF *"},{"Uniquefunname":"tmsize_t TIFFWriteEncodedStrip(TIFF * tif,uint32 strip,void * data,tmsize_t cc)","Funname":"TIFFWriteEncodedStrip","Returntype":"tmsize_t","Args":"TIFF * tif,uint32 strip,void * data,tmsize_t cc"},{"Uniquefunname":"tmsize_t TIFFWriteEncodedTile(TIFF * tif,uint32 tile,void * data,tmsize_t cc)","Funname":"TIFFWriteEncodedTile","Returntype":"tmsize_t","Args":"TIFF * tif,uint32 tile,void * data,tmsize_t cc"},{"Uniquefunname":"tmsize_t TIFFWriteRawStrip(TIFF * tif,uint32 strip,void * data,tmsize_t cc)","Funname":"TIFFWriteRawStrip","Returntype":"tmsize_t","Args":"TIFF * tif,uint32 strip,void * data,tmsize_t cc"},{"Uniquefunname":"tmsize_t TIFFWriteRawTile(TIFF * tif,uint32 tile,void * data,tmsize_t cc)","Funname":"TIFFWriteRawTile","Returntype":"tmsize_t","Args":"TIFF * tif,uint32 tile,void * data,tmsize_t cc"},{"Uniquefunname":"int TIFFWriteScanline(TIFF * tif,void * buf,uint32 row,uint16 sample)","Funname":"TIFFWriteScanline","Returntype":"int","Args":"TIFF * tif,void * buf,uint32 row,uint16 sample"},{"Uniquefunname":"tmsize_t TIFFWriteTile(TIFF * tif,void * buf,uint32 x,uint32 y,uint32 z,uint16 s)","Funname":"TIFFWriteTile","Returntype":"tmsize_t","Args":"TIFF * tif,void * buf,uint32 x,uint32 y,uint32 z,uint16 s"},{"Uniquefunname":"void TIFFXYZToRGB(TIFFCIELabToRGB *,float,float,float,uint32 *,uint32 *,uint32 *)","Funname":"TIFFXYZToRGB","Returntype":"void","Args":"TIFFCIELabToRGB *,float,float,float,uint32 *,uint32 *,uint32 *"},{"Uniquefunname":"int TIFFYCbCrToRGBInit(TIFFYCbCrToRGB *,float *,float *)","Funname":"TIFFYCbCrToRGBInit","Returntype":"int","Args":"TIFFYCbCrToRGB *,float *,float *"},{"Uniquefunname":"void TIFFYCbCrtoRGB(TIFFYCbCrToRGB *,uint32,int32,int32,uint32 *,uint32 *,uint32 *)","Funname":"TIFFYCbCrtoRGB","Returntype":"void","Args":"TIFFYCbCrToRGB *,uint32,int32,int32,uint32 *,uint32 *,uint32 *"},{"Uniquefunname":"void XYZtoRGB24(float *,uint8 *)","Funname":"XYZtoRGB24","Returntype":"void","Args":"float *,uint8 *"},{"Uniquefunname":"void * _TIFFcalloc(tmsize_t nmemb,tmsize_t siz)","Funname":"_TIFFcalloc","Returntype":"void *","Args":"tmsize_t nmemb,tmsize_t siz"},{"Uniquefunname":"void _TIFFfree(void * p)","Funname":"_TIFFfree","Returntype":"void","Args":"void * p"},{"Uniquefunname":"void * _TIFFmalloc(tmsize_t s)","Funname":"_TIFFmalloc","Returntype":"void *","Args":"tmsize_t s"},{"Uniquefunname":"int _TIFFmemcmp(const void * p1,const void * p2,tmsize_t c)","Funname":"_TIFFmemcmp","Returntype":"int","Args":"const void * p1,const void * p2,tmsize_t c"},{"Uniquefunname":"void _TIFFmemcpy(void * d,const void * s,tmsize_t c)","Funname":"_TIFFmemcpy","Returntype":"void","Args":"void * d,const void * s,tmsize_t c"},{"Uniquefunname":"void _TIFFmemset(void * p,int v,tmsize_t c)","Funname":"_TIFFmemset","Returntype":"void","Args":"void * p,int v,tmsize_t c"},{"Uniquefunname":"void * _TIFFrealloc(void * p,tmsize_t s)","Funname":"_TIFFrealloc","Returntype":"void *","Args":"void * p,tmsize_t s"},{"Uniquefunname":"int uv_decode(double *,double *,int)","Funname":"uv_decode","Returntype":"int","Args":"double *,double *,int"},{"Uniquefunname":"int uv_encode(double,double,int)","Funname":"uv_encode","Returntype":"int","Args":"double,double,int"}],"Records":[{"Name":"macro","Fields":["AVOID_WIN32_FILEIO","CIELABTORGB_TABLE_RANGE","D50_X0","D50_Y0","D50_Z0","D65_X0","D65_Y0","D65_Z0","FIELD_CUSTOM","LOGLUV_PUBLIC","TIFFGetA(abgr)","TIFFGetB(abgr)","TIFFGetG(abgr)","TIFFGetR(abgr)","TIFFPRINT_COLORMAP","TIFFPRINT_CURVES","TIFFPRINT_JPEGACTABLES","TIFFPRINT_JPEGDCTABLES","TIFFPRINT_JPEGQTABLES","TIFFPRINT_NONE","TIFFPRINT_STRIPS","TIFF_ANY","TIFF_SPP","TIFF_VARIABLE","TIFF_VARIABLE2","UVSCALE","U_NEU","VC_EXTRALEAN","V_NEU","_TIFFIO_","__WIN32__","__attribute__(x)"]},{"Name":"struct:_TIFFRGBAImage","Fields":["uint32 ** _TIFFRGBAImage::BWmap","uint8 * _TIFFRGBAImage::Bitdepth16To8","TIFFRGBValue * _TIFFRGBAImage::Map","uint32 ** _TIFFRGBAImage::PALmap","uint8 * _TIFFRGBAImage::UaToAa","int _TIFFRGBAImage::alpha","uint16 _TIFFRGBAImage::bitspersample","uint16 * _TIFFRGBAImage::bluecmap","TIFFCIELabToRGB * _TIFFRGBAImage::cielab","int _TIFFRGBAImage::col_offset","int (*)(TIFFRGBAImage *,uint32 *,uint32,uint32) _TIFFRGBAImage::get","uint16 * _TIFFRGBAImage::greencmap","uint32 _TIFFRGBAImage::height","int _TIFFRGBAImage::isContig","uint16 _TIFFRGBAImage::orientation","uint16 _TIFFRGBAImage::photometric","_TIFFRGBAImage::put","uint16 * _TIFFRGBAImage::redcmap","uint16 _TIFFRGBAImage::req_orientation","int _TIFFRGBAImage::row_offset","uint16 _TIFFRGBAImage::samplesperpixel","int _TIFFRGBAImage::stoponerr","TIFF * _TIFFRGBAImage::tif","uint32 _TIFFRGBAImage::width","TIFFYCbCrToRGB * _TIFFRGBAImage::ycbcr"]}]}
{"Filepath":"src/3rdparty/libtiff/libtiff/tiffiop.h","Functions":[{"Uniquefunname":"int TIFFDefaultDirectory(TIFF * tif)","Funname":"TIFFDefaultDirectory","Returntype":"int","Args":"TIFF * tif"},{"Uniquefunname":"int TIFFFlushData1(TIFF * tif)","Funname":"TIFFFlushData1","Returntype":"int","Args":"TIFF * tif"},{"Uniquefunname":"int TIFFInitCCITTFax3(TIFF *,int)","Funname":"TIFFInitCCITTFax3","Returntype":"int","Args":"TIFF *,int"},{"Uniquefunname":"int TIFFInitCCITTFax4(TIFF *,int)","Funname":"TIFFInitCCITTFax4","Returntype":"int","Args":"TIFF *,int"},{"Uniquefunname":"int TIFFInitCCITTRLE(TIFF *,int)","Funname":"TIFFInitCCITTRLE","Returntype":"int","Args":"TIFF *,int"},{"Uniquefunname":"int TIFFInitCCITTRLEW(TIFF *,int)","Funname":"TIFFInitCCITTRLEW","Returntype":"int","Args":"TIFF *,int"},{"Uniquefunname":"int TIFFInitDumpMode(TIFF *,int)","Funname":"TIFFInitDumpMode","Returntype":"int","Args":"TIFF *,int"},{"Uniquefunname":"int TIFFInitJBIG(TIFF *,int)","Funname":"TIFFInitJBIG","Returntype":"int","Args":"TIFF *,int"},{"Uniquefunname":"int TIFFInitJPEG(TIFF *,int)","Funname":"TIFFInitJPEG","Returntype":"int","Args":"TIFF *,int"},{"Uniquefunname":"int TIFFInitLZMA(TIFF *,int)","Funname":"TIFFInitLZMA","Returntype":"int","Args":"TIFF *,int"},{"Uniquefunname":"int TIFFInitLZW(TIFF *,int)","Funname":"TIFFInitLZW","Returntype":"int","Args":"TIFF *,int"},{"Uniquefunname":"int TIFFInitNeXT(TIFF *,int)","Funname":"TIFFInitNeXT","Returntype":"int","Args":"TIFF *,int"},{"Uniquefunname":"int TIFFInitOJPEG(TIFF *,int)","Funname":"TIFFInitOJPEG","Returntype":"int","Args":"TIFF *,int"},{"Uniquefunname":"int TIFFInitPackBits(TIFF *,int)","Funname":"TIFFInitPackBits","Returntype":"int","Args":"TIFF *,int"},{"Uniquefunname":"int TIFFInitPixarLog(TIFF *,int)","Funname":"TIFFInitPixarLog","Returntype":"int","Args":"TIFF *,int"},{"Uniquefunname":"int TIFFInitSGILog(TIFF *,int)","Funname":"TIFFInitSGILog","Returntype":"int","Args":"TIFF *,int"},{"Uniquefunname":"int TIFFInitThunderScan(TIFF *,int)","Funname":"TIFFInitThunderScan","Returntype":"int","Args":"TIFF *,int"},{"Uniquefunname":"int TIFFInitWebP(TIFF *,int)","Funname":"TIFFInitWebP","Returntype":"int","Args":"TIFF *,int"},{"Uniquefunname":"int TIFFInitZIP(TIFF *,int)","Funname":"TIFFInitZIP","Returntype":"int","Args":"TIFF *,int"},{"Uniquefunname":"int TIFFInitZSTD(TIFF *,int)","Funname":"TIFFInitZSTD","Returntype":"int","Args":"TIFF *,int"},{"Uniquefunname":"int TIFFJPEGIsFullStripRequired(TIFF *)","Funname":"TIFFJPEGIsFullStripRequired","Returntype":"int","Args":"TIFF *"},{"Uniquefunname":"int TIFFSetCompressionScheme(TIFF * tif,int scheme)","Funname":"TIFFSetCompressionScheme","Returntype":"int","Args":"TIFF * tif,int scheme"},{"Uniquefunname":"int TIFFSetDefaultCompressionState(TIFF * tif)","Funname":"TIFFSetDefaultCompressionState","Returntype":"int","Args":"TIFF * tif"},{"Uniquefunname":"tmsize_t _TIFFCastUInt64ToSSize(TIFF *,uint64,const char *)","Funname":"_TIFFCastUInt64ToSSize","Returntype":"tmsize_t","Args":"TIFF *,uint64,const char *"},{"Uniquefunname":"void * _TIFFCheckMalloc(TIFF *,tmsize_t,tmsize_t,const char *)","Funname":"_TIFFCheckMalloc","Returntype":"void *","Args":"TIFF *,tmsize_t,tmsize_t,const char *"},{"Uniquefunname":"void * _TIFFCheckRealloc(TIFF *,void *,tmsize_t,tmsize_t,const char *)","Funname":"_TIFFCheckRealloc","Returntype":"void *","Args":"TIFF *,void *,tmsize_t,tmsize_t,const char *"},{"Uniquefunname":"float _TIFFClampDoubleToFloat(double)","Funname":"_TIFFClampDoubleToFloat","Returntype":"float","Args":"double"},{"Uniquefunname":"int _TIFFDataSize(TIFFDataType type)","Funname":"_TIFFDataSize","Returntype":"int","Args":"TIFFDataType type"},{"Uniquefunname":"uint32 _TIFFDefaultStripSize(TIFF * tif,uint32 s)","Funname":"_TIFFDefaultStripSize","Returntype":"uint32","Args":"TIFF * tif,uint32 s"},{"Uniquefunname":"void _TIFFDefaultTileSize(TIFF * tif,uint32 * tw,uint32 * th)","Funname":"_TIFFDefaultTileSize","Returntype":"void","Args":"TIFF * tif,uint32 * tw,uint32 * th"},{"Uniquefunname":"uint32 _TIFFMultiply32(TIFF *,uint32,uint32,const char *)","Funname":"_TIFFMultiply32","Returntype":"uint32","Args":"TIFF *,uint32,uint32,const char *"},{"Uniquefunname":"uint64 _TIFFMultiply64(TIFF *,uint64,uint64,const char *)","Funname":"_TIFFMultiply64","Returntype":"uint64","Args":"TIFF *,uint64,uint64,const char *"},{"Uniquefunname":"tmsize_t _TIFFMultiplySSize(TIFF *,tmsize_t,tmsize_t,const char *)","Funname":"_TIFFMultiplySSize","Returntype":"tmsize_t","Args":"TIFF *,tmsize_t,tmsize_t,const char *"},{"Uniquefunname":"void _TIFFNoPostDecode(TIFF * tif,uint8 * buf,tmsize_t cc)","Funname":"_TIFFNoPostDecode","Returntype":"void","Args":"TIFF * tif,uint8 * buf,tmsize_t cc"},{"Uniquefunname":"int _TIFFNoPreCode(TIFF * tif,uint16 s)","Funname":"_TIFFNoPreCode","Returntype":"int","Args":"TIFF * tif,uint16 s"},{"Uniquefunname":"int _TIFFNoRowDecode(TIFF * tif,uint8 * pp,tmsize_t cc,uint16 s)","Funname":"_TIFFNoRowDecode","Returntype":"int","Args":"TIFF * tif,uint8 * pp,tmsize_t cc,uint16 s"},{"Uniquefunname":"int _TIFFNoRowEncode(TIFF * tif,uint8 * pp,tmsize_t cc,uint16 s)","Funname":"_TIFFNoRowEncode","Returntype":"int","Args":"TIFF * tif,uint8 * pp,tmsize_t cc,uint16 s"},{"Uniquefunname":"int _TIFFNoSeek(TIFF * tif,uint32 off)","Funname":"_TIFFNoSeek","Returntype":"int","Args":"TIFF * tif,uint32 off"},{"Uniquefunname":"int _TIFFNoStripDecode(TIFF * tif,uint8 * pp,tmsize_t cc,uint16 s)","Funname":"_TIFFNoStripDecode","Returntype":"int","Args":"TIFF * tif,uint8 * pp,tmsize_t cc,uint16 s"},{"Uniquefunname":"int _TIFFNoStripEncode(TIFF * tif,uint8 * pp,tmsize_t cc,uint16 s)","Funname":"_TIFFNoStripEncode","Returntype":"int","Args":"TIFF * tif,uint8 * pp,tmsize_t cc,uint16 s"},{"Uniquefunname":"int _TIFFNoTileDecode(TIFF *,uint8 * pp,tmsize_t cc,uint16 s)","Funname":"_TIFFNoTileDecode","Returntype":"int","Args":"TIFF *,uint8 * pp,tmsize_t cc,uint16 s"},{"Uniquefunname":"int _TIFFNoTileEncode(TIFF *,uint8 * pp,tmsize_t cc,uint16 s)","Funname":"_TIFFNoTileEncode","Returntype":"int","Args":"TIFF *,uint8 * pp,tmsize_t cc,uint16 s"},{"Uniquefunname":"tmsize_t _TIFFReadEncodedStripAndAllocBuffer(TIFF * tif,uint32 strip,void ** buf,tmsize_t bufsizetoalloc,tmsize_t size_to_read)","Funname":"_TIFFReadEncodedStripAndAllocBuffer","Returntype":"tmsize_t","Args":"TIFF * tif,uint32 strip,void ** buf,tmsize_t bufsizetoalloc,tmsize_t size_to_read"},{"Uniquefunname":"tmsize_t _TIFFReadEncodedTileAndAllocBuffer(TIFF * tif,uint32 tile,void ** buf,tmsize_t bufsizetoalloc,tmsize_t size_to_read)","Funname":"_TIFFReadEncodedTileAndAllocBuffer","Returntype":"tmsize_t","Args":"TIFF * tif,uint32 tile,void ** buf,tmsize_t bufsizetoalloc,tmsize_t size_to_read"},{"Uniquefunname":"tmsize_t _TIFFReadTileAndAllocBuffer(TIFF * tif,void ** buf,tmsize_t bufsizetoalloc,uint32 x,uint32 y,uint32 z,uint16 s)","Funname":"_TIFFReadTileAndAllocBuffer","Returntype":"tmsize_t","Args":"TIFF * tif,void ** buf,tmsize_t bufsizetoalloc,uint32 x,uint32 y,uint32 z,uint16 s"},{"Uniquefunname":"int _TIFFRewriteField(TIFF *,uint16,TIFFDataType,tmsize_t,void *)","Funname":"_TIFFRewriteField","Returntype":"int","Args":"TIFF *,uint16,TIFFDataType,tmsize_t,void *"},{"Uniquefunname":"int _TIFFSeekOK(TIFF * tif,toff_t off)","Funname":"_TIFFSeekOK","Returntype":"int","Args":"TIFF * tif,toff_t off"},{"Uniquefunname":"void _TIFFSetDefaultCompressionState(TIFF * tif)","Funname":"_TIFFSetDefaultCompressionState","Returntype":"void","Args":"TIFF * tif"},{"Uniquefunname":"void _TIFFSwab16BitData(TIFF * tif,uint8 * buf,tmsize_t cc)","Funname":"_TIFFSwab16BitData","Returntype":"void","Args":"TIFF * tif,uint8 * buf,tmsize_t cc"},{"Uniquefunname":"void _TIFFSwab24BitData(TIFF * tif,uint8 * buf,tmsize_t cc)","Funname":"_TIFFSwab24BitData","Returntype":"void","Args":"TIFF * tif,uint8 * buf,tmsize_t cc"},{"Uniquefunname":"void _TIFFSwab32BitData(TIFF * tif,uint8 * buf,tmsize_t cc)","Funname":"_TIFFSwab32BitData","Returntype":"void","Args":"TIFF * tif,uint8 * buf,tmsize_t cc"},{"Uniquefunname":"void _TIFFSwab64BitData(TIFF * tif,uint8 * buf,tmsize_t cc)","Funname":"_TIFFSwab64BitData","Returntype":"void","Args":"TIFF * tif,uint8 * buf,tmsize_t cc"},{"Uniquefunname":"double _TIFFUInt64ToDouble(uint64)","Funname":"_TIFFUInt64ToDouble","Returntype":"double","Args":"uint64"},{"Uniquefunname":"float _TIFFUInt64ToFloat(uint64)","Funname":"_TIFFUInt64ToFloat","Returntype":"float","Args":"uint64"},{"Uniquefunname":"int _TIFFgetMode(const char * mode,const char * module)","Funname":"_TIFFgetMode","Returntype":"int","Args":"const char * mode,const char * module"},{"Uniquefunname":"void _TIFFprintAscii(FILE *,const char *)","Funname":"_TIFFprintAscii","Returntype":"void","Args":"FILE *,const char *"},{"Uniquefunname":"void _TIFFprintAsciiTag(FILE *,const char *,const char *)","Funname":"_TIFFprintAsciiTag","Returntype":"void","Args":"FILE *,const char *,const char *"},{"Uniquefunname":"void _TIFFsetByteArray(void **,void *,uint32)","Funname":"_TIFFsetByteArray","Returntype":"void","Args":"void **,void *,uint32"},{"Uniquefunname":"void _TIFFsetDoubleArray(double **,double *,uint32)","Funname":"_TIFFsetDoubleArray","Returntype":"void","Args":"double **,double *,uint32"},{"Uniquefunname":"void _TIFFsetFloatArray(float **,float *,uint32)","Funname":"_TIFFsetFloatArray","Returntype":"void","Args":"float **,float *,uint32"},{"Uniquefunname":"void _TIFFsetLongArray(uint32 **,uint32 *,uint32)","Funname":"_TIFFsetLongArray","Returntype":"void","Args":"uint32 **,uint32 *,uint32"},{"Uniquefunname":"void _TIFFsetShortArray(uint16 **,uint16 *,uint32)","Funname":"_TIFFsetShortArray","Returntype":"void","Args":"uint16 **,uint16 *,uint32"},{"Uniquefunname":"void _TIFFsetString(char **,char *)","Funname":"_TIFFsetString","Returntype":"void","Args":"char **,char *"},{"Uniquefunname":"void * lfind(const void *,const void *,size_t *,size_t,int (*)(const void *,const void *))","Funname":"lfind","Returntype":"void *","Args":"const void *,const void *,size_t *,size_t,int (*)(const void *,const void *)"},{"Uniquefunname":"int snprintf(char * str,size_t size,const char * format,...)","Funname":"snprintf","Returntype":"int","Args":"char * str,size_t size,const char * format,..."}],"Records":[{"Name":"macro","Fields":["FALSE","ReadOK(tif,buf,size)","STRIP_SIZE_DEFAULT","SeekOK(tif,off)","TIFFArrayCount(a)","TIFFCloseFile(tif)","TIFFGetFileSize(tif)","TIFFMapFileContents(tif,paddr,psize)","TIFFReadFile(tif,buf,size)","TIFFSafeMultiply(t,v,m)","TIFFSeekFile(tif,off,whence)","TIFFUnmapFileContents(tif,addr,size)","TIFFWriteFile(tif,buf,size)","TIFF_BEENWRITING","TIFF_BIGTIFF","TIFF_BUF4WRITE","TIFF_BUFFERMMAP","TIFF_BUFFERSETUP","TIFF_CHOPPEDUPARRAYS","TIFF_CODERSETUP","TIFF_DEFERSTRILELOAD","TIFF_DIRTYDIRECT","TIFF_DIRTYHEADER","TIFF_DIRTYSTRIP","TIFF_FILLORDER","TIFF_HEADERONLY","TIFF_INCUSTOMIFD","TIFF_INSUBIFD","TIFF_ISTILED","TIFF_LAZYSTRILELOAD","TIFF_MAPPED","TIFF_MYBUFFER","TIFF_NOBITREV","TIFF_NOREADRAW","TIFF_NOSANITIZE_UNSIGNED_INT_OVERFLOW","TIFF_NOSANITIZE_UNSIGNED_INT_OVERFLOW","TIFF_PERSAMPLE","TIFF_POSTENCODE","TIFF_SIZE_T_MAX","TIFF_STRIPCHOP","TIFF_SWAB","TIFF_TMSIZE_T_MAX","TIFF_UINT32_MAX","TIFF_UINT64_MAX","TIFF_UPSAMPLED","TIFFhowmany8_32(x)","TIFFhowmany8_64(x)","TIFFhowmany_32(x,y)","TIFFhowmany_32_maxuint_compat(x,y)","TIFFhowmany_64(x,y)","TIFFmax(A,B)","TIFFmin(A,B)","TIFFroundup_32(x,y)","TIFFroundup_64(x,y)","TRUE","WriteOK(tif,buf,size)","_TIFFIOP_","_TIFF_fseek_f(stream,offset,whence)","_TIFF_fstat_f(fildes,stat_buff)","_TIFF_lseek_f(fildes,offset,whence)","_TIFF_off_t","_TIFF_stat_s","assert(x)","fseek(stream,offset,whence)","ftell(stream,offset,whence)","isFillOrder(tif,o)","isMapped(tif)","isPseudoTag(t)","isTiled(tif)","isUpSampled(tif)","snprintf","streq(a,b)","strneq(a,b,n)"]},{"Name":"struct:client_info","Fields":["void * client_info::data","char * client_info::name","client_info * client_info::next"]},{"Name":"struct:tiff","Fields":["uint8 * tiff::tif_base","TIFFVoidMethod tiff::tif_cleanup","thandle_t tiff::tif_clientdata","TIFFClientInfoLink * tiff::tif_clientinfo","TIFFVoidMethod tiff::tif_close","TIFFCloseProc tiff::tif_closeproc","uint32 tiff::tif_col","uint16 tiff::tif_curdir","uint64 tiff::tif_curoff","uint32 tiff::tif_curstrip","uint32 tiff::tif_curtile","TIFFDirectory tiff::tif_customdir","uint8 * tiff::tif_data","uint64 tiff::tif_dataoff","TIFFCodeMethod tiff::tif_decoderow","int tiff::tif_decodestatus","TIFFCodeMethod tiff::tif_decodestrip","TIFFCodeMethod tiff::tif_decodetile","TIFFStripMethod tiff::tif_defstripsize","TIFFTileMethod tiff::tif_deftilesize","TIFFDirectory tiff::tif_dir","uint64 * tiff::tif_dirlist","uint16 tiff::tif_dirlistsize","uint16 tiff::tif_dirnumber","uint64 tiff::tif_diroff","TIFFCodeMethod tiff::tif_encoderow","int tiff::tif_encodestatus","TIFFCodeMethod tiff::tif_encodestrip","TIFFCodeMethod tiff::tif_encodetile","int tiff::tif_fd","TIFFField ** tiff::tif_fields","TIFFFieldArray * tiff::tif_fieldscompat","TIFFBoolMethod tiff::tif_fixuptags","uint32 tiff::tif_flags","const TIFFField * tiff::tif_foundfield","tiff::tif_header","uint16 tiff::tif_header_size","TIFFMapFileProc tiff::tif_mapproc","int tiff::tif_mode","char * tiff::tif_name","uint64 tiff::tif_nextdiroff","size_t tiff::tif_nfields","size_t tiff::tif_nfieldscompat","uint16 tiff::tif_nsubifd","TIFFPostMethod tiff::tif_postdecode","TIFFBoolMethod tiff::tif_postencode","TIFFPreMethod tiff::tif_predecode","TIFFPreMethod tiff::tif_preencode","tmsize_t tiff::tif_rawcc","uint8 * tiff::tif_rawcp","uint8 * tiff::tif_rawdata","tmsize_t tiff::tif_rawdataloaded","tmsize_t tiff::tif_rawdataoff","tmsize_t tiff::tif_rawdatasize","TIFFReadWriteProc tiff::tif_readproc","uint32 tiff::tif_row","tmsize_t tiff::tif_scanlinesize","tmsize_t tiff::tif_scanlineskew","TIFFSeekMethod tiff::tif_seek","TIFFSeekProc tiff::tif_seekproc","TIFFBoolMethod tiff::tif_setupdecode","TIFFBoolMethod tiff::tif_setupencode","tmsize_t tiff::tif_size","TIFFSizeProc tiff::tif_sizeproc","uint64 tiff::tif_subifdoff","TIFFTagMethods tiff::tif_tagmethods","tmsize_t tiff::tif_tilesize","TIFFUnmapFileProc tiff::tif_unmapproc","TIFFReadWriteProc tiff::tif_writeproc"]}]}
{"Filepath":"src/3rdparty/libtiff/libtiff/tiffvers.h","Functions":null,"Records":[{"Name":"macro","Fields":["TIFFLIB_VERSION","TIFFLIB_VERSION_STR"]}]}
{"Filepath":"src/3rdparty/libtiff/libtiff/uvcode.h","Functions":null,"Records":[{"Name":"macro","Fields":["UV_NDIVS","UV_NVS","UV_SQSIZ","UV_VSTART"]}]}
{"Filepath":"src/3rdparty/libtiff/port/libport.h","Functions":[{"Uniquefunname":"int getopt(int argc,char * const argv[],const char * optstring)","Funname":"getopt","Returntype":"int","Args":"int argc,char * const argv[],const char * optstring"},{"Uniquefunname":"int snprintf(char * str,size_t size,const char * format,...)","Funname":"snprintf","Returntype":"int","Args":"char * str,size_t size,const char * format,..."},{"Uniquefunname":"int strcasecmp(const char * s1,const char * s2)","Funname":"strcasecmp","Returntype":"int","Args":"const char * s1,const char * s2"},{"Uniquefunname":"long strtol(const char * nptr,char ** endptr,int base)","Funname":"strtol","Returntype":"long","Args":"const char * nptr,char ** endptr,int base"},{"Uniquefunname":"long long strtoll(const char * nptr,char ** endptr,int base)","Funname":"strtoll","Returntype":"long long","Args":"const char * nptr,char ** endptr,int base"},{"Uniquefunname":"unsigned long strtoul(const char * nptr,char ** endptr,int base)","Funname":"strtoul","Returntype":"unsigned long","Args":"const char * nptr,char ** endptr,int base"},{"Uniquefunname":"unsigned long long strtoull(const char * nptr,char ** endptr,int base)","Funname":"strtoull","Returntype":"unsigned long long","Args":"const char * nptr,char ** endptr,int base"}],"Records":[{"Name":"macro","Fields":["HAVE_GETOPT","_LIBPORT_","snprintf","vsnprintf"]}]}
{"Filepath":"src/3rdparty/libwebp/src/dec/alphai_dec.h","Functions":[{"Uniquefunname":"void WebPDeallocateAlphaMemory(VP8Decoder * const dec)","Funname":"WebPDeallocateAlphaMemory","Returntype":"void","Args":"VP8Decoder * const dec"}],"Records":[{"Name":"struct:ALPHDecoder","Fields":["WEBP_FILTER_TYPE ALPHDecoder::filter_","int ALPHDecoder::height_","VP8Io ALPHDecoder::io_","int ALPHDecoder::method_","uint8_t * ALPHDecoder::output_","int ALPHDecoder::pre_processing_","const uint8_t * ALPHDecoder::prev_line_","int ALPHDecoder::use_8b_decode_","VP8LDecoder * ALPHDecoder::vp8l_dec_","int ALPHDecoder::width_"]},{"Name":"macro","Fields":["WEBP_DEC_ALPHAI_DEC_H_"]}]}
{"Filepath":"src/3rdparty/libwebp/src/dec/common_dec.h","Functions":null,"Records":[{"Name":"macro","Fields":["WEBP_DEC_COMMON_DEC_H_"]}]}
{"Filepath":"src/3rdparty/libwebp/src/dec/vp8_dec.h","Functions":[{"Uniquefunname":"WEBP_EXTERN int VP8CheckSignature(const uint8_t * const data,size_t data_size)","Funname":"VP8CheckSignature","Returntype":"WEBP_EXTERN int","Args":"const uint8_t * const data,size_t data_size"},{"Uniquefunname":"void VP8Clear(VP8Decoder * const dec)","Funname":"VP8Clear","Returntype":"void","Args":"VP8Decoder * const dec"},{"Uniquefunname":"int VP8Decode(VP8Decoder * const dec,VP8Io * const io)","Funname":"VP8Decode","Returntype":"int","Args":"VP8Decoder * const dec,VP8Io * const io"},{"Uniquefunname":"void VP8Delete(VP8Decoder * const dec)","Funname":"VP8Delete","Returntype":"void","Args":"VP8Decoder * const dec"},{"Uniquefunname":"int VP8GetHeaders(VP8Decoder * const dec,VP8Io * const io)","Funname":"VP8GetHeaders","Returntype":"int","Args":"VP8Decoder * const dec,VP8Io * const io"},{"Uniquefunname":"WEBP_EXTERN int VP8GetInfo(const uint8_t * data,size_t data_size,size_t chunk_size,int * const width,int * const height)","Funname":"VP8GetInfo","Returntype":"WEBP_EXTERN int","Args":"const uint8_t * data,size_t data_size,size_t chunk_size,int * const width,int * const height"},{"Uniquefunname":"WEBP_INLINE int VP8InitIo(VP8Io * const io)","Funname":"VP8InitIo","Returntype":"WEBP_INLINE int","Args":"VP8Io * const io"},{"Uniquefunname":"int VP8InitIoInternal(VP8Io * const,int)","Funname":"VP8InitIoInternal","Returntype":"int","Args":"VP8Io * const,int"},{"Uniquefunname":"WEBP_EXTERN int VP8LCheckSignature(const uint8_t * const data,size_t size)","Funname":"VP8LCheckSignature","Returntype":"WEBP_EXTERN int","Args":"const uint8_t * const data,size_t size"},{"Uniquefunname":"WEBP_EXTERN int VP8LGetInfo(const uint8_t * data,size_t data_size,int * const width,int * const height,int * const has_alpha)","Funname":"VP8LGetInfo","Returntype":"WEBP_EXTERN int","Args":"const uint8_t * data,size_t data_size,int * const width,int * const height,int * const has_alpha"},{"Uniquefunname":"VP8Decoder * VP8New(void)","Funname":"VP8New","Returntype":"VP8Decoder *","Args":"void"},{"Uniquefunname":"VP8StatusCode VP8Status(VP8Decoder * const dec)","Funname":"VP8Status","Returntype":"VP8StatusCode","Args":"VP8Decoder * const dec"},{"Uniquefunname":"const char * VP8StatusMessage(VP8Decoder * const dec)","Funname":"VP8StatusMessage","Returntype":"const char *","Args":"VP8Decoder * const dec"},{"Uniquefunname":"int WebPISetIOHooks(WebPIDecoder * const idec,VP8IoPutHook put,VP8IoSetupHook setup,VP8IoTeardownHook teardown,void * user_data)","Funname":"WebPISetIOHooks","Returntype":"int","Args":"WebPIDecoder * const idec,VP8IoPutHook put,VP8IoSetupHook setup,VP8IoTeardownHook teardown,void * user_data"}],"Records":[{"Name":"struct:VP8Io","Fields":["const uint8_t * VP8Io::a","int VP8Io::bypass_filtering","int VP8Io::crop_bottom","int VP8Io::crop_left","int VP8Io::crop_right","int VP8Io::crop_top","const uint8_t * VP8Io::data","size_t VP8Io::data_size","int VP8Io::fancy_upsampling","int VP8Io::height","int VP8Io::mb_h","int VP8Io::mb_w","int VP8Io::mb_y","void * VP8Io::opaque","VP8IoPutHook VP8Io::put","int VP8Io::scaled_height","int VP8Io::scaled_width","VP8IoSetupHook VP8Io::setup","VP8IoTeardownHook VP8Io::teardown","const uint8_t ** VP8Io::u","int VP8Io::use_cropping","int VP8Io::use_scaling","int VP8Io::uv_stride","const uint8_t *** VP8Io::v","int VP8Io::width","const uint8_t * VP8Io::y","int VP8Io::y_stride"]},{"Name":"macro","Fields":["WEBP_DEC_VP8_DEC_H_"]}]}
{"Filepath":"src/3rdparty/libwebp/src/dec/vp8i_dec.h","Functions":[{"Uniquefunname":"int VP8DecodeMB(VP8Decoder * const dec,VP8BitReader * const token_br)","Funname":"VP8DecodeMB","Returntype":"int","Args":"VP8Decoder * const dec,VP8BitReader * const token_br"},{"Uniquefunname":"const uint8_t * VP8DecompressAlphaRows(VP8Decoder * const dec,const VP8Io * const io,int row,int num_rows)","Funname":"VP8DecompressAlphaRows","Returntype":"const uint8_t *","Args":"VP8Decoder * const dec,const VP8Io * const io,int row,int num_rows"},{"Uniquefunname":"VP8StatusCode VP8EnterCritical(VP8Decoder * const dec,VP8Io * const io)","Funname":"VP8EnterCritical","Returntype":"VP8StatusCode","Args":"VP8Decoder * const dec,VP8Io * const io"},{"Uniquefunname":"int VP8ExitCritical(VP8Decoder * const dec,VP8Io * const io)","Funname":"VP8ExitCritical","Returntype":"int","Args":"VP8Decoder * const dec,VP8Io * const io"},{"Uniquefunname":"int VP8GetThreadMethod(const WebPDecoderOptions * const options,const WebPHeaderStructure * const headers,int width,int height)","Funname":"VP8GetThreadMethod","Returntype":"int","Args":"const WebPDecoderOptions * const options,const WebPHeaderStructure * const headers,int width,int height"},{"Uniquefunname":"void VP8InitDithering(const WebPDecoderOptions * const options,VP8Decoder * const dec)","Funname":"VP8InitDithering","Returntype":"void","Args":"const WebPDecoderOptions * const options,VP8Decoder * const dec"},{"Uniquefunname":"int VP8InitFrame(VP8Decoder * const dec,VP8Io * const io)","Funname":"VP8InitFrame","Returntype":"int","Args":"VP8Decoder * const dec,VP8Io * const io"},{"Uniquefunname":"void VP8InitScanline(VP8Decoder * const dec)","Funname":"VP8InitScanline","Returntype":"void","Args":"VP8Decoder * const dec"},{"Uniquefunname":"int VP8ParseIntraModeRow(VP8BitReader * const br,VP8Decoder * const dec)","Funname":"VP8ParseIntraModeRow","Returntype":"int","Args":"VP8BitReader * const br,VP8Decoder * const dec"},{"Uniquefunname":"void VP8ParseProba(VP8BitReader * const br,VP8Decoder * const dec)","Funname":"VP8ParseProba","Returntype":"void","Args":"VP8BitReader * const br,VP8Decoder * const dec"},{"Uniquefunname":"void VP8ParseQuant(VP8Decoder * const dec)","Funname":"VP8ParseQuant","Returntype":"void","Args":"VP8Decoder * const dec"},{"Uniquefunname":"int VP8ProcessRow(VP8Decoder * const dec,VP8Io * const io)","Funname":"VP8ProcessRow","Returntype":"int","Args":"VP8Decoder * const dec,VP8Io * const io"},{"Uniquefunname":"void VP8ResetProba(VP8Proba * const proba)","Funname":"VP8ResetProba","Returntype":"void","Args":"VP8Proba * const proba"},{"Uniquefunname":"int VP8SetError(VP8Decoder * const dec,VP8StatusCode error,const char * const msg)","Funname":"VP8SetError","Returntype":"int","Args":"VP8Decoder * const dec,VP8StatusCode error,const char * const msg"}],"Records":[{"Name":"macro","Fields":["DEC_MAJ_VERSION","DEC_MIN_VERSION","DEC_REV_VERSION","MIN_WIDTH_FOR_THREADS","U_OFF","V_OFF","WEBP_DEC_VP8I_DEC_H_","YUV_SIZE","Y_OFF"]},{"Name":"struct:VP8Decoder","Fields":["ALPHDecoder * VP8Decoder::alph_dec_","const uint8_t * VP8Decoder::alpha_data_","size_t VP8Decoder::alpha_data_size_","int VP8Decoder::alpha_dithering_","uint8_t * VP8Decoder::alpha_plane_","uint8_t * VP8Decoder::alpha_plane_mem_","const uint8_t * VP8Decoder::alpha_prev_line_","VP8BitReader VP8Decoder::br_","int VP8Decoder::br_mb_x_","int VP8Decoder::br_mb_y_","int VP8Decoder::cache_id_","uint8_t * VP8Decoder::cache_u_","int VP8Decoder::cache_uv_stride_","uint8_t * VP8Decoder::cache_v_","uint8_t * VP8Decoder::cache_y_","int VP8Decoder::cache_y_stride_","int VP8Decoder::dither_","VP8Random VP8Decoder::dithering_rg_","VP8QuantMatrix[] VP8Decoder::dqm_","const char * VP8Decoder::error_msg_","VP8FInfo * VP8Decoder::f_info_","VP8FilterHeader VP8Decoder::filter_hdr_","int VP8Decoder::filter_type_","VP8FrameHeader VP8Decoder::frm_hdr_","VP8FInfo[][2] VP8Decoder::fstrengths_","uint8_t[4] VP8Decoder::intra_l_","uint8_t * VP8Decoder::intra_t_","int VP8Decoder::is_alpha_decoded_","VP8MBData * VP8Decoder::mb_data_","int VP8Decoder::mb_h_","VP8MB * VP8Decoder::mb_info_","int VP8Decoder::mb_w_","int VP8Decoder::mb_x_","int VP8Decoder::mb_y_","void * VP8Decoder::mem_","size_t VP8Decoder::mem_size_","int VP8Decoder::mt_method_","int VP8Decoder::num_caches_","uint32_t VP8Decoder::num_parts_minus_one_","VP8BitReader[] VP8Decoder::parts_","VP8PictureHeader VP8Decoder::pic_hdr_","VP8Proba VP8Decoder::proba_","int VP8Decoder::ready_","VP8SegmentHeader VP8Decoder::segment_hdr_","uint8_t VP8Decoder::skip_p_","VP8StatusCode VP8Decoder::status_","VP8ThreadContext VP8Decoder::thread_ctx_","int VP8Decoder::tl_mb_x_","int VP8Decoder::tl_mb_y_","int VP8Decoder::use_skip_proba_","WebPWorker VP8Decoder::worker_","uint8_t * VP8Decoder::yuv_b_","VP8TopSamples * VP8Decoder::yuv_t_"]}]}
{"Filepath":"src/3rdparty/libwebp/src/dec/vp8li_dec.h","Functions":[{"Uniquefunname":"void VP8LClear(VP8LDecoder * const dec)","Funname":"VP8LClear","Returntype":"void","Args":"VP8LDecoder * const dec"},{"Uniquefunname":"int VP8LDecodeAlphaHeader(struct ALPHDecoder * const alph_dec,const uint8_t * const data,size_t data_size)","Funname":"VP8LDecodeAlphaHeader","Returntype":"int","Args":"struct ALPHDecoder * const alph_dec,const uint8_t * const data,size_t data_size"},{"Uniquefunname":"int VP8LDecodeAlphaImageStream(struct ALPHDecoder * const alph_dec,int last_row)","Funname":"VP8LDecodeAlphaImageStream","Returntype":"int","Args":"struct ALPHDecoder * const alph_dec,int last_row"},{"Uniquefunname":"int VP8LDecodeHeader(VP8LDecoder * const dec,VP8Io * const io)","Funname":"VP8LDecodeHeader","Returntype":"int","Args":"VP8LDecoder * const dec,VP8Io * const io"},{"Uniquefunname":"int VP8LDecodeImage(VP8LDecoder * const dec)","Funname":"VP8LDecodeImage","Returntype":"int","Args":"VP8LDecoder * const dec"},{"Uniquefunname":"void VP8LDelete(VP8LDecoder * const dec)","Funname":"VP8LDelete","Returntype":"void","Args":"VP8LDecoder * const dec"},{"Uniquefunname":"VP8LDecoder * VP8LNew(void)","Funname":"VP8LNew","Returntype":"VP8LDecoder *","Args":"void"}],"Records":[{"Name":"struct:VP8LDecoder","Fields":["uint32_t * VP8LDecoder::argb_cache_","VP8LBitReader VP8LDecoder::br_","VP8LMetadata VP8LDecoder::hdr_","int VP8LDecoder::height_","int VP8LDecoder::incremental_","VP8Io * VP8LDecoder::io_","int VP8LDecoder::last_out_row_","int VP8LDecoder::last_pixel_","int VP8LDecoder::last_row_","int VP8LDecoder::next_transform_","const WebPDecBuffer * VP8LDecoder::output_","uint32_t * VP8LDecoder::pixels_","WebPRescaler * VP8LDecoder::rescaler","uint8_t * VP8LDecoder::rescaler_memory","VP8LBitReader VP8LDecoder::saved_br_","int VP8LDecoder::saved_last_pixel_","VP8LDecodeState VP8LDecoder::state_","VP8StatusCode VP8LDecoder::status_","VP8LTransform[] VP8LDecoder::transforms_","uint32_t VP8LDecoder::transforms_seen_","int VP8LDecoder::width_"]},{"Name":"struct:VP8LTransform","Fields":["int VP8LTransform::bits_","uint32_t * VP8LTransform::data_","VP8LImageTransformType VP8LTransform::type_","int VP8LTransform::xsize_","int VP8LTransform::ysize_"]},{"Name":"macro","Fields":["WEBP_DEC_VP8LI_DEC_H_"]}]}
{"Filepath":"src/3rdparty/libwebp/src/dec/webpi_dec.h","Functions":[{"Uniquefunname":"VP8StatusCode WebPAllocateDecBuffer(int width,int height,const WebPDecoderOptions * const options,WebPDecBuffer * const buffer)","Funname":"WebPAllocateDecBuffer","Returntype":"VP8StatusCode","Args":"int width,int height,const WebPDecoderOptions * const options,WebPDecBuffer * const buffer"},{"Uniquefunname":"int WebPAvoidSlowMemory(const WebPDecBuffer * const output,const WebPBitstreamFeatures * const features)","Funname":"WebPAvoidSlowMemory","Returntype":"int","Args":"const WebPDecBuffer * const output,const WebPBitstreamFeatures * const features"},{"Uniquefunname":"void WebPCopyDecBuffer(const WebPDecBuffer * const src,WebPDecBuffer * const dst)","Funname":"WebPCopyDecBuffer","Returntype":"void","Args":"const WebPDecBuffer * const src,WebPDecBuffer * const dst"},{"Uniquefunname":"VP8StatusCode WebPCopyDecBufferPixels(const WebPDecBuffer * const src,WebPDecBuffer * const dst)","Funname":"WebPCopyDecBufferPixels","Returntype":"VP8StatusCode","Args":"const WebPDecBuffer * const src,WebPDecBuffer * const dst"},{"Uniquefunname":"VP8StatusCode WebPFlipBuffer(WebPDecBuffer * const buffer)","Funname":"WebPFlipBuffer","Returntype":"VP8StatusCode","Args":"WebPDecBuffer * const buffer"},{"Uniquefunname":"void WebPGrabDecBuffer(WebPDecBuffer * const src,WebPDecBuffer * const dst)","Funname":"WebPGrabDecBuffer","Returntype":"void","Args":"WebPDecBuffer * const src,WebPDecBuffer * const dst"},{"Uniquefunname":"void WebPInitCustomIo(WebPDecParams * const params,VP8Io * const io)","Funname":"WebPInitCustomIo","Returntype":"void","Args":"WebPDecParams * const params,VP8Io * const io"},{"Uniquefunname":"int WebPIoInitFromOptions(const WebPDecoderOptions * const options,VP8Io * const io,WEBP_CSP_MODE src_colorspace)","Funname":"WebPIoInitFromOptions","Returntype":"int","Args":"const WebPDecoderOptions * const options,VP8Io * const io,WEBP_CSP_MODE src_colorspace"},{"Uniquefunname":"VP8StatusCode WebPParseHeaders(WebPHeaderStructure * const headers)","Funname":"WebPParseHeaders","Returntype":"VP8StatusCode","Args":"WebPHeaderStructure * const headers"},{"Uniquefunname":"void WebPResetDecParams(WebPDecParams * const params)","Funname":"WebPResetDecParams","Returntype":"void","Args":"WebPDecParams * const params"}],"Records":[{"Name":"macro","Fields":["WEBP_DEC_WEBPI_DEC_H_"]},{"Name":"struct:WebPDecParams","Fields":["OutputFunc WebPDecParams::emit","OutputAlphaFunc WebPDecParams::emit_alpha","OutputRowFunc WebPDecParams::emit_alpha_row","int WebPDecParams::last_y","void * WebPDecParams::memory","const WebPDecoderOptions * WebPDecParams::options","WebPDecBuffer * WebPDecParams::output","WebPRescaler **** WebPDecParams::scaler_a","WebPRescaler ** WebPDecParams::scaler_u","WebPRescaler *** WebPDecParams::scaler_v","WebPRescaler * WebPDecParams::scaler_y","uint8_t ** WebPDecParams::tmp_u","uint8_t *** WebPDecParams::tmp_v","uint8_t * WebPDecParams::tmp_y"]}]}
{"Filepath":"src/3rdparty/libwebp/src/dsp/common_sse2.h","Functions":[{"Uniquefunname":"WEBP_INLINE int VP8HorizontalAdd8b(const __m128i * const a)","Funname":"VP8HorizontalAdd8b","Returntype":"WEBP_INLINE int","Args":"const __m128i * const a"},{"Uniquefunname":"WEBP_INLINE void VP8L32bToPlanar_SSE2(__m128i * const in0,__m128i * const in1,__m128i * const in2,__m128i * const in3)","Funname":"VP8L32bToPlanar_SSE2","Returntype":"WEBP_INLINE void","Args":"__m128i * const in0,__m128i * const in1,__m128i * const in2,__m128i * const in3"},{"Uniquefunname":"WEBP_INLINE void VP8PlanarTo24b_SSE2(__m128i * const in0,__m128i * const in1,__m128i * const in2,__m128i * const in3,__m128i * const in4,__m128i * const in5)","Funname":"VP8PlanarTo24b_SSE2","Returntype":"WEBP_INLINE void","Args":"__m128i * const in0,__m128i * const in1,__m128i * const in2,__m128i * const in3,__m128i * const in4,__m128i * const in5"},{"Uniquefunname":"WEBP_INLINE void VP8Transpose_2_4x4_16b(const __m128i * const in0,const __m128i * const in1,const __m128i * const in2,const __m128i * const in3,__m128i * const out0,__m128i * const out1,__m128i * const out2,__m128i * const out3)","Funname":"VP8Transpose_2_4x4_16b","Returntype":"WEBP_INLINE void","Args":"const __m128i * const in0,const __m128i * const in1,const __m128i * const in2,const __m128i * const in3,__m128i * const out0,__m128i * const out1,__m128i * const out2,__m128i * const out3"}],"Records":[{"Name":"macro","Fields":["VP8PlanarTo24bHelper(IN,OUT)","WEBP_DSP_COMMON_SSE2_H_"]}]}
{"Filepath":"src/3rdparty/libwebp/src/dsp/common_sse41.h","Functions":[{"Uniquefunname":"WEBP_INLINE void VP8L32bToPlanar_SSE41(__m128i * const in0,__m128i * const in1,__m128i * const in2,__m128i * const in3)","Funname":"VP8L32bToPlanar_SSE41","Returntype":"WEBP_INLINE void","Args":"__m128i * const in0,__m128i * const in1,__m128i * const in2,__m128i * const in3"},{"Uniquefunname":"WEBP_INLINE void VP8PlanarTo24b_SSE41(__m128i * const in0,__m128i * const in1,__m128i * const in2,__m128i * const in3,__m128i * const in4,__m128i * const in5)","Funname":"VP8PlanarTo24b_SSE41","Returntype":"WEBP_INLINE void","Args":"__m128i * const in0,__m128i * const in1,__m128i * const in2,__m128i * const in3,__m128i * const in4,__m128i * const in5"}],"Records":[{"Name":"macro","Fields":["WEBP_DSP_COMMON_SSE41_H_","WEBP_SSE41_SHUFF(OUT,IN0,IN1)"]}]}
{"Filepath":"src/3rdparty/libwebp/src/dsp/dsp.h","Functions":[{"Uniquefunname":"void VP8DspInit(void)","Funname":"VP8DspInit","Returntype":"void","Args":"void"},{"Uniquefunname":"void VP8EncDspCostInit(void)","Funname":"VP8EncDspCostInit","Returntype":"void","Args":"void"},{"Uniquefunname":"void VP8EncDspInit(void)","Funname":"VP8EncDspInit","Returntype":"void","Args":"void"},{"Uniquefunname":"void VP8FiltersInit(void)","Funname":"VP8FiltersInit","Returntype":"void","Args":"void"},{"Uniquefunname":"void VP8InitClipTables(void)","Funname":"VP8InitClipTables","Returntype":"void","Args":"void"},{"Uniquefunname":"void VP8SSIMDspInit(void)","Funname":"VP8SSIMDspInit","Returntype":"void","Args":"void"},{"Uniquefunname":"double VP8SSIMFromStats(const VP8DistoStats * const stats)","Funname":"VP8SSIMFromStats","Returntype":"double","Args":"const VP8DistoStats * const stats"},{"Uniquefunname":"double VP8SSIMFromStatsClipped(const VP8DistoStats * const stats)","Funname":"VP8SSIMFromStatsClipped","Returntype":"double","Args":"const VP8DistoStats * const stats"},{"Uniquefunname":"void VP8SetHistogramData(const int distribution[MAX_COEFF_THRESH+1],VP8Histogram * const histo)","Funname":"VP8SetHistogramData","Returntype":"void","Args":"const int distribution[MAX_COEFF_THRESH+1],VP8Histogram * const histo"},{"Uniquefunname":"void WebPConvertARGBToUV_C(const uint32_t * argb,uint8_t * u,uint8_t * v,int src_width,int do_store)","Funname":"WebPConvertARGBToUV_C","Returntype":"void","Args":"const uint32_t * argb,uint8_t * u,uint8_t * v,int src_width,int do_store"},{"Uniquefunname":"void WebPConvertRGBA32ToUV_C(const uint16_t * rgb,uint8_t * u,uint8_t * v,int width)","Funname":"WebPConvertRGBA32ToUV_C","Returntype":"void","Args":"const uint16_t * rgb,uint8_t * u,uint8_t * v,int width"},{"Uniquefunname":"WebPUpsampleLinePairFunc WebPGetLinePairConverter(int alpha_is_last)","Funname":"WebPGetLinePairConverter","Returntype":"WebPUpsampleLinePairFunc","Args":"int alpha_is_last"},{"Uniquefunname":"void WebPInitAlphaProcessing(void)","Funname":"WebPInitAlphaProcessing","Returntype":"void","Args":"void"},{"Uniquefunname":"void WebPInitConvertARGBToYUV(void)","Funname":"WebPInitConvertARGBToYUV","Returntype":"void","Args":"void"},{"Uniquefunname":"void WebPInitSamplers(void)","Funname":"WebPInitSamplers","Returntype":"void","Args":"void"},{"Uniquefunname":"void WebPInitUpsamplers(void)","Funname":"WebPInitUpsamplers","Returntype":"void","Args":"void"},{"Uniquefunname":"void WebPInitYUV444Converters(void)","Funname":"WebPInitYUV444Converters","Returntype":"void","Args":"void"},{"Uniquefunname":"void WebPMultARGBRow_C(uint32_t * const ptr,int width,int inverse)","Funname":"WebPMultARGBRow_C","Returntype":"void","Args":"uint32_t * const ptr,int width,int inverse"},{"Uniquefunname":"void WebPMultARGBRows(uint8_t * ptr,int stride,int width,int num_rows,int inverse)","Funname":"WebPMultARGBRows","Returntype":"void","Args":"uint8_t * ptr,int stride,int width,int num_rows,int inverse"},{"Uniquefunname":"void WebPMultRow_C(uint8_t * const ptr,const uint8_t * const alpha,int width,int inverse)","Funname":"WebPMultRow_C","Returntype":"void","Args":"uint8_t * const ptr,const uint8_t * const alpha,int width,int inverse"},{"Uniquefunname":"void WebPMultRows(uint8_t * ptr,int stride,const uint8_t * alpha,int alpha_stride,int width,int num_rows,int inverse)","Funname":"WebPMultRows","Returntype":"void","Args":"uint8_t * ptr,int stride,const uint8_t * alpha,int alpha_stride,int width,int num_rows,int inverse"},{"Uniquefunname":"void WebPRescalerDspInit(void)","Funname":"WebPRescalerDspInit","Returntype":"void","Args":"void"},{"Uniquefunname":"void WebPRescalerExportRow(struct WebPRescaler * const wrk)","Funname":"WebPRescalerExportRow","Returntype":"void","Args":"struct WebPRescaler * const wrk"},{"Uniquefunname":"void WebPRescalerExportRowExpand_C(struct WebPRescaler * const wrk)","Funname":"WebPRescalerExportRowExpand_C","Returntype":"void","Args":"struct WebPRescaler * const wrk"},{"Uniquefunname":"void WebPRescalerExportRowShrink_C(struct WebPRescaler * const wrk)","Funname":"WebPRescalerExportRowShrink_C","Returntype":"void","Args":"struct WebPRescaler * const wrk"},{"Uniquefunname":"void WebPRescalerImportRow(struct WebPRescaler * const wrk,const uint8_t * src)","Funname":"WebPRescalerImportRow","Returntype":"void","Args":"struct WebPRescaler * const wrk,const uint8_t * src"},{"Uniquefunname":"void WebPRescalerImportRowExpand_C(struct WebPRescaler * const wrk,const uint8_t * src)","Funname":"WebPRescalerImportRowExpand_C","Returntype":"void","Args":"struct WebPRescaler * const wrk,const uint8_t * src"},{"Uniquefunname":"void WebPRescalerImportRowShrink_C(struct WebPRescaler * const wrk,const uint8_t * src)","Funname":"WebPRescalerImportRowShrink_C","Returntype":"void","Args":"struct WebPRescaler * const wrk,const uint8_t * src"},{"Uniquefunname":"void WebPSamplerProcessPlane(const uint8_t * y,int y_stride,const uint8_t * u,const uint8_t * v,int uv_stride,uint8_t * dst,int dst_stride,int width,int height,WebPSamplerRowFunc func)","Funname":"WebPSamplerProcessPlane","Returntype":"void","Args":"const uint8_t * y,int y_stride,const uint8_t * u,const uint8_t * v,int uv_stride,uint8_t * dst,int dst_stride,int width,int height,WebPSamplerRowFunc func"}],"Records":[{"Name":"macro","Fields":["BPS","FANCY_UPSAMPLING","LOCAL_CLANG_PREREQ(maj,min)","LOCAL_CLANG_VERSION","LOCAL_GCC_PREREQ(maj,min)","LOCAL_GCC_VERSION","MAX_COEFF_THRESH","VP8_DITHER_AMP_BITS","VP8_DITHER_AMP_CENTER","VP8_DITHER_DESCALE","VP8_DITHER_DESCALE_ROUNDER","VP8_SSIM_KERNEL","WEBP_ANDROID_NEON","WEBP_DSP_DSP_H_","WEBP_DSP_INIT(func)","WEBP_DSP_INIT_FUNC(name)","WEBP_DSP_INIT_STUB(func)","WEBP_DSP_OMIT_C_CODE","WEBP_MSC_SSE2","WEBP_MSC_SSE41","WEBP_NEON_OMIT_C_CODE","WEBP_NEON_WORK_AROUND_GCC","WEBP_SWAP_16BIT_CSP","WEBP_TSAN_IGNORE_FUNCTION","WEBP_TSAN_IGNORE_FUNCTION","WEBP_UBSAN_IGNORE_UNDEF","WEBP_UBSAN_IGNORE_UNDEF","WEBP_UBSAN_IGNORE_UNSIGNED_OVERFLOW","WEBP_UBSAN_IGNORE_UNSIGNED_OVERFLOW","WEBP_USE_INTRINSICS","WEBP_USE_MIPS32","WEBP_USE_MIPS32_R2","WEBP_USE_MIPS_DSP_R2","WEBP_USE_MSA","WEBP_USE_NEON","WEBP_USE_SSE2","WEBP_USE_SSE41","WORDS_BIGENDIAN","__has_builtin(x)"]}]}
{"Filepath":"src/3rdparty/libwebp/src/dsp/lossless.h","Functions":[{"Uniquefunname":"void VP8LAddGreenToBlueAndRed_C(const uint32_t * src,int num_pixels,uint32_t * dst)","Funname":"VP8LAddGreenToBlueAndRed_C","Returntype":"void","Args":"const uint32_t * src,int num_pixels,uint32_t * dst"},{"Uniquefunname":"void VP8LBitEntropyInit(VP8LBitEntropy * const entropy)","Funname":"VP8LBitEntropyInit","Returntype":"void","Args":"VP8LBitEntropy * const entropy"},{"Uniquefunname":"void VP8LBitsEntropyUnrefined(const uint32_t * const array,int n,VP8LBitEntropy * const entropy)","Funname":"VP8LBitsEntropyUnrefined","Returntype":"void","Args":"const uint32_t * const array,int n,VP8LBitEntropy * const entropy"},{"Uniquefunname":"void VP8LBundleColorMap_C(const uint8_t * const row,int width,int xbits,uint32_t * dst)","Funname":"VP8LBundleColorMap_C","Returntype":"void","Args":"const uint8_t * const row,int width,int xbits,uint32_t * dst"},{"Uniquefunname":"void VP8LCollectColorBlueTransforms_C(const uint32_t * argb,int stride,int tile_width,int tile_height,int green_to_blue,int red_to_blue,int histo[])","Funname":"VP8LCollectColorBlueTransforms_C","Returntype":"void","Args":"const uint32_t * argb,int stride,int tile_width,int tile_height,int green_to_blue,int red_to_blue,int histo[]"},{"Uniquefunname":"void VP8LCollectColorRedTransforms_C(const uint32_t * argb,int stride,int tile_width,int tile_height,int green_to_red,int histo[])","Funname":"VP8LCollectColorRedTransforms_C","Returntype":"void","Args":"const uint32_t * argb,int stride,int tile_width,int tile_height,int green_to_red,int histo[]"},{"Uniquefunname":"void VP8LColorIndexInverseTransformAlpha(const struct VP8LTransform * const transform,int y_start,int y_end,const uint8_t * src,uint8_t * dst)","Funname":"VP8LColorIndexInverseTransformAlpha","Returntype":"void","Args":"const struct VP8LTransform * const transform,int y_start,int y_end,const uint8_t * src,uint8_t * dst"},{"Uniquefunname":"void VP8LConvertBGRAToBGR_C(const uint32_t * src,int num_pixels,uint8_t * dst)","Funname":"VP8LConvertBGRAToBGR_C","Returntype":"void","Args":"const uint32_t * src,int num_pixels,uint8_t * dst"},{"Uniquefunname":"void VP8LConvertBGRAToRGB565_C(const uint32_t * src,int num_pixels,uint8_t * dst)","Funname":"VP8LConvertBGRAToRGB565_C","Returntype":"void","Args":"const uint32_t * src,int num_pixels,uint8_t * dst"},{"Uniquefunname":"void VP8LConvertBGRAToRGBA4444_C(const uint32_t * src,int num_pixels,uint8_t * dst)","Funname":"VP8LConvertBGRAToRGBA4444_C","Returntype":"void","Args":"const uint32_t * src,int num_pixels,uint8_t * dst"},{"Uniquefunname":"void VP8LConvertBGRAToRGBA_C(const uint32_t * src,int num_pixels,uint8_t * dst)","Funname":"VP8LConvertBGRAToRGBA_C","Returntype":"void","Args":"const uint32_t * src,int num_pixels,uint8_t * dst"},{"Uniquefunname":"void VP8LConvertBGRAToRGB_C(const uint32_t * src,int num_pixels,uint8_t * dst)","Funname":"VP8LConvertBGRAToRGB_C","Returntype":"void","Args":"const uint32_t * src,int num_pixels,uint8_t * dst"},{"Uniquefunname":"void VP8LConvertFromBGRA(const uint32_t * const in_data,int num_pixels,WEBP_CSP_MODE out_colorspace,uint8_t * const rgba)","Funname":"VP8LConvertFromBGRA","Returntype":"void","Args":"const uint32_t * const in_data,int num_pixels,WEBP_CSP_MODE out_colorspace,uint8_t * const rgba"},{"Uniquefunname":"void VP8LDspInit(void)","Funname":"VP8LDspInit","Returntype":"void","Args":"void"},{"Uniquefunname":"void VP8LEncDspInit(void)","Funname":"VP8LEncDspInit","Returntype":"void","Args":"void"},{"Uniquefunname":"void VP8LHistogramAdd(const VP8LHistogram * const a,const VP8LHistogram * const b,VP8LHistogram * const out)","Funname":"VP8LHistogramAdd","Returntype":"void","Args":"const VP8LHistogram * const a,const VP8LHistogram * const b,VP8LHistogram * const out"},{"Uniquefunname":"void VP8LInverseTransform(const struct VP8LTransform * const transform,int row_start,int row_end,const uint32_t * const in,uint32_t * const out)","Funname":"VP8LInverseTransform","Returntype":"void","Args":"const struct VP8LTransform * const transform,int row_start,int row_end,const uint32_t * const in,uint32_t * const out"},{"Uniquefunname":"void VP8LSubtractGreenFromBlueAndRed_C(uint32_t * argb_data,int num_pixels)","Funname":"VP8LSubtractGreenFromBlueAndRed_C","Returntype":"void","Args":"uint32_t * argb_data,int num_pixels"},{"Uniquefunname":"void VP8LTransformColorInverse_C(const VP8LMultipliers * const m,const uint32_t * src,int num_pixels,uint32_t * dst)","Funname":"VP8LTransformColorInverse_C","Returntype":"void","Args":"const VP8LMultipliers * const m,const uint32_t * src,int num_pixels,uint32_t * dst"},{"Uniquefunname":"void VP8LTransformColor_C(const VP8LMultipliers * const m,uint32_t * data,int num_pixels)","Funname":"VP8LTransformColor_C","Returntype":"void","Args":"const VP8LMultipliers * const m,uint32_t * data,int num_pixels"}],"Records":[{"Name":"macro","Fields":["WEBP_DSP_LOSSLESS_H_"]}]}
{"Filepath":"src/3rdparty/libwebp/src/dsp/lossless_common.h","Functions":[{"Uniquefunname":"WEBP_INLINE uint32_t VP8GetARGBIndex(uint32_t idx)","Funname":"VP8GetARGBIndex","Returntype":"WEBP_INLINE uint32_t","Args":"uint32_t idx"},{"Uniquefunname":"WEBP_INLINE uint32_t VP8GetARGBValue(uint32_t val)","Funname":"VP8GetARGBValue","Returntype":"WEBP_INLINE uint32_t","Args":"uint32_t val"},{"Uniquefunname":"WEBP_INLINE uint8_t VP8GetAlphaIndex(uint8_t idx)","Funname":"VP8GetAlphaIndex","Returntype":"WEBP_INLINE uint8_t","Args":"uint8_t idx"},{"Uniquefunname":"WEBP_INLINE uint8_t VP8GetAlphaValue(uint32_t val)","Funname":"VP8GetAlphaValue","Returntype":"WEBP_INLINE uint8_t","Args":"uint32_t val"},{"Uniquefunname":"WEBP_UBSAN_IGNORE_UNSIGNED_OVERFLOW WEBP_INLINE uint32_t VP8LAddPixels(uint32_t a,uint32_t b)","Funname":"VP8LAddPixels","Returntype":"WEBP_UBSAN_IGNORE_UNSIGNED_OVERFLOW WEBP_INLINE uint32_t","Args":"uint32_t a,uint32_t b"},{"Uniquefunname":"WEBP_INLINE float VP8LFastLog2(uint32_t v)","Funname":"VP8LFastLog2","Returntype":"WEBP_INLINE float","Args":"uint32_t v"},{"Uniquefunname":"WEBP_INLINE float VP8LFastSLog2(uint32_t v)","Funname":"VP8LFastSLog2","Returntype":"WEBP_INLINE float","Args":"uint32_t v"},{"Uniquefunname":"WEBP_INLINE int VP8LNearLosslessBits(int near_lossless_quality)","Funname":"VP8LNearLosslessBits","Returntype":"WEBP_INLINE int","Args":"int near_lossless_quality"},{"Uniquefunname":"WEBP_INLINE void VP8LPrefixEncode(int distance,int * const code,int * const extra_bits,int * const extra_bits_value)","Funname":"VP8LPrefixEncode","Returntype":"WEBP_INLINE void","Args":"int distance,int * const code,int * const extra_bits,int * const extra_bits_value"},{"Uniquefunname":"WEBP_INLINE void VP8LPrefixEncodeBits(int distance,int * const code,int * const extra_bits)","Funname":"VP8LPrefixEncodeBits","Returntype":"WEBP_INLINE void","Args":"int distance,int * const code,int * const extra_bits"},{"Uniquefunname":"WEBP_INLINE void VP8LPrefixEncodeBitsNoLUT(int distance,int * const code,int * const extra_bits)","Funname":"VP8LPrefixEncodeBitsNoLUT","Returntype":"WEBP_INLINE void","Args":"int distance,int * const code,int * const extra_bits"},{"Uniquefunname":"WEBP_INLINE void VP8LPrefixEncodeNoLUT(int distance,int * const code,int * const extra_bits,int * const extra_bits_value)","Funname":"VP8LPrefixEncodeNoLUT","Returntype":"WEBP_INLINE void","Args":"int distance,int * const code,int * const extra_bits,int * const extra_bits_value"},{"Uniquefunname":"WEBP_UBSAN_IGNORE_UNSIGNED_OVERFLOW WEBP_INLINE uint32_t VP8LSubPixels(uint32_t a,uint32_t b)","Funname":"VP8LSubPixels","Returntype":"WEBP_UBSAN_IGNORE_UNSIGNED_OVERFLOW WEBP_INLINE uint32_t","Args":"uint32_t a,uint32_t b"},{"Uniquefunname":"WEBP_INLINE uint32_t VP8LSubSampleSize(uint32_t size,uint32_t sampling_bits)","Funname":"VP8LSubSampleSize","Returntype":"WEBP_INLINE uint32_t","Args":"uint32_t size,uint32_t sampling_bits"}],"Records":[{"Name":"macro","Fields":["APPROX_LOG_MAX","APPROX_LOG_WITH_CORRECTION_MAX","GENERATE_PREDICTOR_ADD(PREDICTOR,PREDICTOR_ADD)","GENERATE_PREDICTOR_SUB(PREDICTOR,PREDICTOR_SUB)","LOG_2_RECIPROCAL","LOG_LOOKUP_IDX_MAX","PREFIX_LOOKUP_IDX_MAX","WEBP_DSP_LOSSLESS_COMMON_H_"]}]}
{"Filepath":"src/3rdparty/libwebp/src/dsp/mips_macro.h","Functions":null,"Records":[{"Name":"macro","Fields":["ADD_SUB_HALVES(O0,O1,\\\\\\nI0,I1)","CONVERT_2_BYTES_TO_HALF(O0,O1,O2,O3,O4,O5,O6,O7,\\\\\\nI0,I1,I2,I3)","INSERT_HALF_X2(O0,O1,\\\\\\nI0,I1)","LOAD_IN_X2(O0,O1,\\\\\\nI0,I1)","LOAD_WITH_OFFSET_X4(O0,O1,O2,O3,\\\\\\nI0,I1,I2,I3,I4,I5,I6,I7,I8,I9)","MUL_SHIFT_SUM(O0,O1,O2,O3,O4,O5,O6,O7,\\\\\\nIO0,IO1,IO2,IO3,\\\\\\nI0,I1,I2,I3,I4,I5,I6,I7)","OUTPUT_EARLY_CLOBBER_REGS_10()","OUTPUT_EARLY_CLOBBER_REGS_18()","PACK_2_HALVES_TO_WORD(O0,O1,O2,O3,\\\\\\nIO0,IO1,IO2,IO3,\\\\\\nI0,I1,I2,I3)","SHIFT_R_SUM_X2(O0,O1,O2,O3,O4,O5,O6,O7,\\\\\\nI0,I1,I2,I3,I4,I5,I6,I7)","SRA_16(O0,O1,O2,O3,\\\\\\nI0,I1,I2,I3)","STORE_SAT_SUM_X2(IO0,IO1,IO2,IO3,IO4,IO5,IO6,IO7,\\\\\\nI0,I1,I2,I3,I4,I5,I6,I7,\\\\\\nI8,I9,I10,I11,I12,I13)","STR(s)","WEBP_DSP_MIPS_MACRO_H_","WORK_AROUND_GCC","XSTR(s)"]}]}
{"Filepath":"src/3rdparty/libwebp/src/dsp/msa_macro.h","Functions":[{"Uniquefunname":" MSA_LOAD_FUNC(uint64_t,ld,msa_ld)","Funname":"MSA_LOAD_FUNC","Returntype":"","Args":"uint64_t,ld,msa_ld"},{"Uniquefunname":" MSA_LOAD_FUNC(uint64_t,uld,msa_uld)","Funname":"MSA_LOAD_FUNC","Returntype":"","Args":"uint64_t,uld,msa_uld"},{"Uniquefunname":" MSA_LOAD_FUNC(uint16_t,lh,msa_lh)","Funname":"MSA_LOAD_FUNC","Returntype":"","Args":"uint16_t,lh,msa_lh"},{"Uniquefunname":" MSA_LOAD_FUNC(uint16_t,ulh,msa_ulh)","Funname":"MSA_LOAD_FUNC","Returntype":"","Args":"uint16_t,ulh,msa_ulh"},{"Uniquefunname":" MSA_LOAD_FUNC(uint32_t,lw,msa_lw)","Funname":"MSA_LOAD_FUNC","Returntype":"","Args":"uint32_t,lw,msa_lw"},{"Uniquefunname":" MSA_LOAD_FUNC(uint32_t,ulw,msa_ulw)","Funname":"MSA_LOAD_FUNC","Returntype":"","Args":"uint32_t,ulw,msa_ulw"},{"Uniquefunname":" MSA_STORE_FUNC(uint16_t,sh,msa_sh)","Funname":"MSA_STORE_FUNC","Returntype":"","Args":"uint16_t,sh,msa_sh"},{"Uniquefunname":" MSA_STORE_FUNC(uint16_t,ush,msa_ush)","Funname":"MSA_STORE_FUNC","Returntype":"","Args":"uint16_t,ush,msa_ush"},{"Uniquefunname":" MSA_STORE_FUNC(uint32_t,sw,msa_sw)","Funname":"MSA_STORE_FUNC","Returntype":"","Args":"uint32_t,sw,msa_sw"},{"Uniquefunname":" MSA_STORE_FUNC(uint32_t,usw,msa_usw)","Funname":"MSA_STORE_FUNC","Returntype":"","Args":"uint32_t,usw,msa_usw"},{"Uniquefunname":" MSA_STORE_FUNC(uint64_t,sd,msa_sd)","Funname":"MSA_STORE_FUNC","Returntype":"","Args":"uint64_t,sd,msa_sd"},{"Uniquefunname":"WEBP_INLINE int32_t func_hadd_sh_s32(v8i16 in)","Funname":"func_hadd_sh_s32","Returntype":"WEBP_INLINE int32_t","Args":"v8i16 in"},{"Uniquefunname":"WEBP_INLINE int32_t func_hadd_sw_s32(v4i32 in)","Funname":"func_hadd_sw_s32","Returntype":"WEBP_INLINE int32_t","Args":"v4i32 in"},{"Uniquefunname":"WEBP_INLINE uint32_t func_hadd_uh_u32(v8u16 in)","Funname":"func_hadd_uh_u32","Returntype":"WEBP_INLINE uint32_t","Args":"v8u16 in"}],"Records":[{"Name":"macro","Fields":["ADD2(in0,in1,in2,in3,out0,out1)","ADD4(in0,in1,in2,in3,in4,in5,in6,in7,\\\\\\nout0,out1,out2,out3)","ADDBLK_ST4x4_UB(in0,in1,in2,in3,pdst,stride)","ADDSUB2(in0,in1,out0,out1)","ADDVI_H(a,b)","ADDVI_H2(RTYPE,in0,in1,in2,in3,out0,out1)","ADDVI_H2_SH(...)","ADDVI_H2_UH(...)","ADDVI_W(a,b)","ADDVI_W2(RTYPE,in0,in1,in2,in3,out0,out1)","ADDVI_W2_SW(...)","ALPHAVAL","ANDI_B(a,b)","AVER_UB2(RTYPE,in0,in1,in2,in3,out0,out1)","AVER_UB2_UB(...)","BUTTERFLY_4(in0,in1,in2,in3,out0,out1,out2,out3)","CLANG_BUILD","CLIP_SH2_0_255(in0,in1)","CLIP_SH4_0_255(in0,in1,in2,in3)","CLIP_SH_0_255(val)","CLIP_SW4_0_255(in0,in1,in2,in3)","CLIP_SW_0_255(val)","CLIP_UH2_0_255(in0,in1)","CLIP_UH_0_255(in)","DOTP_SB2(RTYPE,mult0,mult1,cnst0,cnst1,out0,out1)","DOTP_SB2_SH(...)","DOTP_SH2(RTYPE,mult0,mult1,cnst0,cnst1,out0,out1)","DOTP_SH2_SW(...)","DOTP_UW2(RTYPE,mult0,mult1,cnst0,cnst1,out0,out1)","DOTP_UW2_UD(...)","DPADD_SH2(RTYPE,mult0,mult1,cnst0,cnst1,out0,out1)","DPADD_SH2_SW(...)","FILL_W2(RTYPE,in0,in1,out0,out1)","FILL_W2_SW(...)","HADD_SH2(RTYPE,in0,in1,out0,out1)","HADD_SH2_SW(...)","HADD_SH4(RTYPE,in0,in1,in2,in3,out0,out1,out2,out3)","HADD_SH4_SW(...)","HADD_SH_S32(in)","HADD_SW_S32(in)","HADD_UH_U32(in)","HSUB_UB2(RTYPE,in0,in1,out0,out1)","HSUB_UB2_SH(...)","HSUB_UB2_SW(...)","HSUB_UB2_UH(...)","ILVEVOD_H2(RTYPE,in0,in1,in2,in3,out0,out1)","ILVEVOD_H2_SH(...)","ILVEVOD_H2_SW(...)","ILVEVOD_H2_UB(...)","ILVEVOD_H2_UH(...)","ILVEVOD_W2(RTYPE,in0,in1,in2,in3,out0,out1)","ILVEVOD_W2_SH(...)","ILVEVOD_W2_SW(...)","ILVEVOD_W2_UB(...)","ILVEVOD_W2_UH(...)","ILVEV_B2(RTYPE,in0,in1,in2,in3,out0,out1)","ILVEV_B2_SB(...)","ILVEV_B2_SD(...)","ILVEV_B2_SH(...)","ILVEV_B2_UB(...)","ILVEV_B2_UH(...)","ILVEV_D2(RTYPE,in0,in1,in2,in3,out0,out1)","ILVEV_D2_SB(...)","ILVEV_D2_SD(...)","ILVEV_D2_SW(...)","ILVEV_D2_UB(...)","ILVEV_H2(RTYPE,in0,in1,in2,in3,out0,out1)","ILVEV_H2_SH(...)","ILVEV_H2_SW(...)","ILVEV_H2_UB(...)","ILVEV_H2_UH(...)","ILVEV_W2(RTYPE,in0,in1,in2,in3,out0,out1)","ILVEV_W2_SB(...)","ILVEV_W2_SD(...)","ILVEV_W2_UB(...)","ILVEV_W2_UH(...)","ILVL_B2(RTYPE,in0,in1,in2,in3,out0,out1)","ILVL_B2_SB(...)","ILVL_B2_SH(...)","ILVL_B2_SW(...)","ILVL_B2_UB(...)","ILVL_B2_UH(...)","ILVOD_B2(RTYPE,in0,in1,in2,in3,out0,out1)","ILVOD_B2_SB(...)","ILVOD_B2_SD(...)","ILVOD_B2_SH(...)","ILVOD_B2_UB(...)","ILVOD_B2_UH(...)","ILVOD_H2(RTYPE,in0,in1,in2,in3,out0,out1)","ILVOD_H2_SH(...)","ILVOD_H2_SW(...)","ILVOD_H2_UB(...)","ILVOD_H2_UH(...)","ILVRL_B2(RTYPE,in0,in1,out0,out1)","ILVRL_B2_SB(...)","ILVRL_B2_SH(...)","ILVRL_B2_SW(...)","ILVRL_B2_UB(...)","ILVRL_B2_UH(...)","ILVRL_H2(RTYPE,in0,in1,out0,out1)","ILVRL_H2_SB(...)","ILVRL_H2_SH(...)","ILVRL_H2_SW(...)","ILVRL_H2_UB(...)","ILVRL_H2_UW(...)","ILVRL_W2(RTYPE,in0,in1,out0,out1)","ILVRL_W2_SH(...)","ILVRL_W2_SW(...)","ILVRL_W2_UB(...)","ILVRL_W2_UW(...)","ILVR_B2(RTYPE,in0,in1,in2,in3,out0,out1)","ILVR_B2_SB(...)","ILVR_B2_SH(...)","ILVR_B2_SW(...)","ILVR_B2_UB(...)","ILVR_B2_UH(...)","ILVR_B4(RTYPE,in0,in1,in2,in3,in4,in5,in6,in7,\\\\\\nout0,out1,out2,out3)","ILVR_B4_SB(...)","ILVR_B4_SH(...)","ILVR_B4_SW(...)","ILVR_B4_UB(...)","ILVR_B4_UH(...)","ILVR_D2(RTYPE,in0,in1,in2,in3,out0,out1)","ILVR_D2_SB(...)","ILVR_D2_SH(...)","ILVR_D2_UB(...)","ILVR_D4(RTYPE,in0,in1,in2,in3,in4,in5,in6,in7,\\\\\\nout0,out1,out2,out3)","ILVR_D4_SB(...)","ILVR_D4_UB(...)","ILVR_H2(RTYPE,in0,in1,in2,in3,out0,out1)","ILVR_H2_SH(...)","ILVR_H2_SW(...)","ILVR_H2_UB(...)","ILVR_H4(RTYPE,in0,in1,in2,in3,in4,in5,in6,in7,\\\\\\nout0,out1,out2,out3)","ILVR_H4_SH(...)","ILVR_H4_SW(...)","ILVR_H4_UB(...)","INSERT_D2(RTYPE,in0,in1,out)","INSERT_D2_SB(...)","INSERT_D2_UB(...)","INSERT_W2(RTYPE,in0,in1,out)","INSERT_W2_SB(...)","INSERT_W2_UB(...)","INSERT_W4(RTYPE,in0,in1,in2,in3,out)","INSERT_W4_SB(...)","INSERT_W4_SW(...)","INSERT_W4_UB(...)","LD(psrc)","LD_B(RTYPE,psrc)","LD_B2(RTYPE,psrc,stride,out0,out1)","LD_B3(RTYPE,psrc,stride,out0,out1,out2)","LD_B4(RTYPE,psrc,stride,out0,out1,out2,out3)","LD_B8(RTYPE,psrc,stride,\\\\\\nout0,out1,out2,out3,out4,out5,out6,out7)","LD_H(RTYPE,psrc)","LD_H2(RTYPE,psrc,stride,out0,out1)","LD_SB(...)","LD_SB2(...)","LD_SB3(...)","LD_SB4(...)","LD_SB8(...)","LD_SH(...)","LD_SH2(...)","LD_SW(...)","LD_SW2(...)","LD_SW3(...)","LD_SW4(...)","LD_UB(...)","LD_UB2(...)","LD_UB3(...)","LD_UB4(...)","LD_UB8(...)","LD_UH(...)","LD_UH2(...)","LD_UW(...)","LD_UW2(...)","LD_UW3(...)","LD_UW4(...)","LD_W(RTYPE,psrc)","LD_W2(RTYPE,psrc,stride,out0,out1)","LD_W3(RTYPE,psrc,stride,out0,out1,out2)","LD_W4(RTYPE,psrc,stride,out0,out1,out2,out3)","LH(psrc)","LW(psrc)","LW4(psrc,stride,out0,out1,out2,out3)","MSA_LOAD(psrc,FUNC_NAME)","MSA_LOAD_FUNC(TYPE,INSTR,FUNC_NAME)","MSA_STORE(val,pdst,FUNC_NAME)","MSA_STORE_FUNC(TYPE,INSTR,FUNC_NAME)","MUL2(in0,in1,in2,in3,out0,out1)","MUL4(in0,in1,in2,in3,in4,in5,in6,in7,\\\\\\nout0,out1,out2,out3)","ORI_B(a,b)","PCKEV_B2(RTYPE,in0,in1,in2,in3,out0,out1)","PCKEV_B2_SB(...)","PCKEV_B2_SH(...)","PCKEV_B2_SW(...)","PCKEV_B2_UB(...)","PCKEV_B4(RTYPE,in0,in1,in2,in3,in4,in5,in6,in7,\\\\\\nout0,out1,out2,out3)","PCKEV_B4_SB(...)","PCKEV_B4_SH(...)","PCKEV_B4_SW(...)","PCKEV_B4_UB(...)","PCKEV_H2(RTYPE,in0,in1,in2,in3,out0,out1)","PCKEV_H2_SH(...)","PCKEV_H2_SW(...)","PCKEV_H2_UH(...)","PCKEV_H2_UW(...)","PCKEV_ST4x4_UB(in0,in1,in2,in3,pdst,stride)","PCKEV_W2(RTYPE,in0,in1,in2,in3,out0,out1)","PCKEV_W2_SH(...)","PCKEV_W2_SW(...)","PCKEV_W2_UH(...)","PCKEV_W2_UW(...)","PCKOD_H2(RTYPE,in0,in1,in2,in3,out0,out1)","PCKOD_H2_SH(...)","PCKOD_H2_SW(...)","PCKOD_H2_UH(...)","PCKOD_H2_UW(...)","SD(val,pdst)","SD4(in0,in1,in2,in3,pdst,stride)","SH(val,pdst)","SLDI_B(RTYPE,in0,in1,slide_val)","SLDI_SB(...)","SLDI_SH(...)","SLDI_UB(...)","SLLI_B(a,b)","SRAI_B(a,b)","SRAI_H(a,b)","SRAI_H2(RTYPE,in0,in1,shift_val)","SRAI_H2_SH(...)","SRAI_H2_UH(...)","SRAI_W(a,b)","SRAI_W2(RTYPE,in0,in1,shift_val)","SRAI_W2_SW(...)","SRAI_W2_UW(...)","SRAI_W4(RTYPE,in0,in1,in2,in3,shift_val)","SRAI_W4_SW(...)","SRAI_W4_UW(...)","SRARI_W2(RTYPE,in0,in1,shift)","SRARI_W2_SW(...)","SRARI_W4(RTYPE,in0,in1,in2,in3,shift)","SRARI_W4_SH(...)","SRARI_W4_SW(...)","SRARI_W4_UW(...)","SRAR_D2(RTYPE,in0,in1,shift)","SRAR_D2_SD(...)","SRAR_D2_SW(...)","SRAR_D2_UD(...)","SRAR_D4(RTYPE,in0,in1,in2,in3,shift)","SRAR_D4_SD(...)","SRAR_D4_UD(...)","SRLI_H(a,b)","ST2x4_UB(in,stidx,pdst,stride)","ST4x4_UB(in0,in1,idx0,idx1,idx2,idx3,pdst,stride)","ST4x8_UB(in0,in1,pdst,stride)","ST_B(RTYPE,in,pdst)","ST_B2(RTYPE,in0,in1,pdst,stride)","ST_B4(RTYPE,in0,in1,in2,in3,pdst,stride)","ST_B8(RTYPE,in0,in1,in2,in3,in4,in5,in6,in7,\\\\\\npdst,stride)","ST_H(RTYPE,in,pdst)","ST_H2(RTYPE,in0,in1,pdst,stride)","ST_SB(...)","ST_SB2(...)","ST_SB4(...)","ST_SH(...)","ST_SH2(...)","ST_SW(...)","ST_SW2(...)","ST_SW3(...)","ST_SW4(...)","ST_UB(...)","ST_UB2(...)","ST_UB4(...)","ST_UB8(...)","ST_UH(...)","ST_UH2(...)","ST_UW(...)","ST_UW2(...)","ST_UW3(...)","ST_UW4(...)","ST_W(RTYPE,in,pdst)","ST_W2(RTYPE,in0,in1,pdst,stride)","ST_W3(RTYPE,in0,in1,in2,pdst,stride)","ST_W4(RTYPE,in0,in1,in2,in3,pdst,stride)","SUB2(in0,in1,in2,in3,out0,out1)","SUB3(in0,in1,in2,in3,in4,in5,out0,out1,out2)","SUB4(in0,in1,in2,in3,in4,in5,in6,in7,\\\\\\nout0,out1,out2,out3)","SW(val,pdst)","SW2(in0,in1,pdst,stride)","SW3(in0,in1,in2,pdst,stride)","SW4(in0,in1,in2,in3,pdst,stride)","TRANSPOSE16x4_UB_UB(in0,in1,in2,in3,in4,in5,in6,in7,\\\\\\nin8,in9,in10,in11,in12,in13,in14,in15,\\\\\\nout0,out1,out2,out3)","TRANSPOSE16x8_UB_UB(in0,in1,in2,in3,in4,in5,in6,in7,\\\\\\nin8,in9,in10,in11,in12,in13,in14,in15,\\\\\\nout0,out1,out2,out3,out4,out5,\\\\\\nout6,out7)","TRANSPOSE4x4_SW_SW(...)","TRANSPOSE4x4_W(RTYPE,in0,in1,in2,in3,\\\\\\nout0,out1,out2,out3)","UNPCK_R_SH_SW(in,out)","UNPCK_SH_SW(in,out0,out1)","VSHF_B(RTYPE,in0,in1,mask)","VSHF_B2(RTYPE,in0,in1,in2,in3,mask0,mask1,out0,out1)","VSHF_B2_SB(...)","VSHF_B2_SH(...)","VSHF_B2_UB(...)","VSHF_B2_UH(...)","VSHF_H2(RTYPE,in0,in1,in2,in3,mask0,mask1,out0,out1)","VSHF_H2_SH(...)","VSHF_H2_UH(...)","VSHF_SB(...)","VSHF_SH(...)","VSHF_UB(...)","VSHF_UH(...)","WEBP_DSP_MSA_MACRO_H_"]}]}
{"Filepath":"src/3rdparty/libwebp/src/dsp/neon.h","Functions":[{"Uniquefunname":"WEBP_INLINE int32x4x4_t Transpose4x4_NEON(const int32x4x4_t rows)","Funname":"Transpose4x4_NEON","Returntype":"WEBP_INLINE int32x4x4_t","Args":"const int32x4x4_t rows"}],"Records":[{"Name":"macro","Fields":["INIT_VECTOR2(v,a,b)","INIT_VECTOR3(v,a,b,c)","INIT_VECTOR4(v,a,b,c,d)","WEBP_DSP_NEON_H_","WEBP_USE_INTRINSICS","WORK_AROUND_GCC"]}]}
{"Filepath":"src/3rdparty/libwebp/src/dsp/quant.h","Functions":[{"Uniquefunname":"WEBP_INLINE int IsFlat(const int16_t * levels,int num_blocks,int thresh)","Funname":"IsFlat","Returntype":"WEBP_INLINE int","Args":"const int16_t * levels,int num_blocks,int thresh"},{"Uniquefunname":"WEBP_INLINE int IsFlatSource16(const uint8_t * src)","Funname":"IsFlatSource16","Returntype":"WEBP_INLINE int","Args":"const uint8_t * src"},{"Uniquefunname":"uint32x2_t horizontal_add_uint32x4(const uint32x4_t a)","Funname":"horizontal_add_uint32x4","Returntype":"uint32x2_t","Args":"const uint32x4_t a"}],"Records":[{"Name":"macro","Fields":["IsFlat","WEBP_DSP_QUANT_H_"]}]}
{"Filepath":"src/3rdparty/libwebp/src/dsp/yuv.h","Functions":[{"Uniquefunname":"WEBP_INLINE int MultHi(int v,int coeff)","Funname":"MultHi","Returntype":"WEBP_INLINE int","Args":"int v,int coeff"},{"Uniquefunname":"WEBP_INLINE int VP8Clip8(int v)","Funname":"VP8Clip8","Returntype":"WEBP_INLINE int","Args":"int v"},{"Uniquefunname":"WEBP_INLINE int VP8ClipUV(int uv,int rounding)","Funname":"VP8ClipUV","Returntype":"WEBP_INLINE int","Args":"int uv,int rounding"},{"Uniquefunname":"WEBP_INLINE int VP8RGBToU(int r,int g,int b,int rounding)","Funname":"VP8RGBToU","Returntype":"WEBP_INLINE int","Args":"int r,int g,int b,int rounding"},{"Uniquefunname":"WEBP_INLINE int VP8RGBToV(int r,int g,int b,int rounding)","Funname":"VP8RGBToV","Returntype":"WEBP_INLINE int","Args":"int r,int g,int b,int rounding"},{"Uniquefunname":"WEBP_INLINE int VP8RGBToY(int r,int g,int b,int rounding)","Funname":"VP8RGBToY","Returntype":"WEBP_INLINE int","Args":"int r,int g,int b,int rounding"},{"Uniquefunname":"WEBP_INLINE int VP8YUVToB(int y,int u)","Funname":"VP8YUVToB","Returntype":"WEBP_INLINE int","Args":"int y,int u"},{"Uniquefunname":"WEBP_INLINE int VP8YUVToG(int y,int u,int v)","Funname":"VP8YUVToG","Returntype":"WEBP_INLINE int","Args":"int y,int u,int v"},{"Uniquefunname":"WEBP_INLINE int VP8YUVToR(int y,int v)","Funname":"VP8YUVToR","Returntype":"WEBP_INLINE int","Args":"int y,int v"},{"Uniquefunname":"WEBP_INLINE void VP8YuvToArgb(uint8_t y,uint8_t u,uint8_t v,uint8_t * const argb)","Funname":"VP8YuvToArgb","Returntype":"WEBP_INLINE void","Args":"uint8_t y,uint8_t u,uint8_t v,uint8_t * const argb"},{"Uniquefunname":"void VP8YuvToArgb32_SSE2(const uint8_t * y,const uint8_t * u,const uint8_t * v,uint8_t * dst)","Funname":"VP8YuvToArgb32_SSE2","Returntype":"void","Args":"const uint8_t * y,const uint8_t * u,const uint8_t * v,uint8_t * dst"},{"Uniquefunname":"WEBP_INLINE void VP8YuvToBgr(int y,int u,int v,uint8_t * const bgr)","Funname":"VP8YuvToBgr","Returntype":"WEBP_INLINE void","Args":"int y,int u,int v,uint8_t * const bgr"},{"Uniquefunname":"void VP8YuvToBgr32_SSE2(const uint8_t * y,const uint8_t * u,const uint8_t * v,uint8_t * dst)","Funname":"VP8YuvToBgr32_SSE2","Returntype":"void","Args":"const uint8_t * y,const uint8_t * u,const uint8_t * v,uint8_t * dst"},{"Uniquefunname":"void VP8YuvToBgr32_SSE41(const uint8_t * y,const uint8_t * u,const uint8_t * v,uint8_t * dst)","Funname":"VP8YuvToBgr32_SSE41","Returntype":"void","Args":"const uint8_t * y,const uint8_t * u,const uint8_t * v,uint8_t * dst"},{"Uniquefunname":"WEBP_INLINE void VP8YuvToBgra(uint8_t y,uint8_t u,uint8_t v,uint8_t * const bgra)","Funname":"VP8YuvToBgra","Returntype":"WEBP_INLINE void","Args":"uint8_t y,uint8_t u,uint8_t v,uint8_t * const bgra"},{"Uniquefunname":"void VP8YuvToBgra32_SSE2(const uint8_t * y,const uint8_t * u,const uint8_t * v,uint8_t * dst)","Funname":"VP8YuvToBgra32_SSE2","Returntype":"void","Args":"const uint8_t * y,const uint8_t * u,const uint8_t * v,uint8_t * dst"},{"Uniquefunname":"WEBP_INLINE void VP8YuvToRgb(int y,int u,int v,uint8_t * const rgb)","Funname":"VP8YuvToRgb","Returntype":"WEBP_INLINE void","Args":"int y,int u,int v,uint8_t * const rgb"},{"Uniquefunname":"void VP8YuvToRgb32_SSE2(const uint8_t * y,const uint8_t * u,const uint8_t * v,uint8_t * dst)","Funname":"VP8YuvToRgb32_SSE2","Returntype":"void","Args":"const uint8_t * y,const uint8_t * u,const uint8_t * v,uint8_t * dst"},{"Uniquefunname":"void VP8YuvToRgb32_SSE41(const uint8_t * y,const uint8_t * u,const uint8_t * v,uint8_t * dst)","Funname":"VP8YuvToRgb32_SSE41","Returntype":"void","Args":"const uint8_t * y,const uint8_t * u,const uint8_t * v,uint8_t * dst"},{"Uniquefunname":"WEBP_INLINE void VP8YuvToRgb565(int y,int u,int v,uint8_t * const rgb)","Funname":"VP8YuvToRgb565","Returntype":"WEBP_INLINE void","Args":"int y,int u,int v,uint8_t * const rgb"},{"Uniquefunname":"void VP8YuvToRgb56532_SSE2(const uint8_t * y,const uint8_t * u,const uint8_t * v,uint8_t * dst)","Funname":"VP8YuvToRgb56532_SSE2","Returntype":"void","Args":"const uint8_t * y,const uint8_t * u,const uint8_t * v,uint8_t * dst"},{"Uniquefunname":"WEBP_INLINE void VP8YuvToRgba(uint8_t y,uint8_t u,uint8_t v,uint8_t * const rgba)","Funname":"VP8YuvToRgba","Returntype":"WEBP_INLINE void","Args":"uint8_t y,uint8_t u,uint8_t v,uint8_t * const rgba"},{"Uniquefunname":"void VP8YuvToRgba32_SSE2(const uint8_t * y,const uint8_t * u,const uint8_t * v,uint8_t * dst)","Funname":"VP8YuvToRgba32_SSE2","Returntype":"void","Args":"const uint8_t * y,const uint8_t * u,const uint8_t * v,uint8_t * dst"},{"Uniquefunname":"WEBP_INLINE void VP8YuvToRgba4444(int y,int u,int v,uint8_t * const argb)","Funname":"VP8YuvToRgba4444","Returntype":"WEBP_INLINE void","Args":"int y,int u,int v,uint8_t * const argb"},{"Uniquefunname":"void VP8YuvToRgba444432_SSE2(const uint8_t * y,const uint8_t * u,const uint8_t * v,uint8_t * dst)","Funname":"VP8YuvToRgba444432_SSE2","Returntype":"void","Args":"const uint8_t * y,const uint8_t * u,const uint8_t * v,uint8_t * dst"}],"Records":[{"Name":"macro","Fields":["WEBP_DSP_YUV_H_"]}]}
{"Filepath":"src/3rdparty/libwebp/src/enc/backward_references_enc.h","Functions":[{"Uniquefunname":"WEBP_INLINE uint32_t PixOrCopyCacheIdx(const PixOrCopy * const p)","Funname":"PixOrCopyCacheIdx","Returntype":"WEBP_INLINE uint32_t","Args":"const PixOrCopy * const p"},{"Uniquefunname":"WEBP_INLINE PixOrCopy PixOrCopyCreateCacheIdx(int idx)","Funname":"PixOrCopyCreateCacheIdx","Returntype":"WEBP_INLINE PixOrCopy","Args":"int idx"},{"Uniquefunname":"WEBP_INLINE PixOrCopy PixOrCopyCreateCopy(uint32_t distance,uint16_t len)","Funname":"PixOrCopyCreateCopy","Returntype":"WEBP_INLINE PixOrCopy","Args":"uint32_t distance,uint16_t len"},{"Uniquefunname":"WEBP_INLINE PixOrCopy PixOrCopyCreateLiteral(uint32_t argb)","Funname":"PixOrCopyCreateLiteral","Returntype":"WEBP_INLINE PixOrCopy","Args":"uint32_t argb"},{"Uniquefunname":"WEBP_INLINE uint32_t PixOrCopyDistance(const PixOrCopy * const p)","Funname":"PixOrCopyDistance","Returntype":"WEBP_INLINE uint32_t","Args":"const PixOrCopy * const p"},{"Uniquefunname":"WEBP_INLINE int PixOrCopyIsCacheIdx(const PixOrCopy * const p)","Funname":"PixOrCopyIsCacheIdx","Returntype":"WEBP_INLINE int","Args":"const PixOrCopy * const p"},{"Uniquefunname":"WEBP_INLINE int PixOrCopyIsCopy(const PixOrCopy * const p)","Funname":"PixOrCopyIsCopy","Returntype":"WEBP_INLINE int","Args":"const PixOrCopy * const p"},{"Uniquefunname":"WEBP_INLINE int PixOrCopyIsLiteral(const PixOrCopy * const p)","Funname":"PixOrCopyIsLiteral","Returntype":"WEBP_INLINE int","Args":"const PixOrCopy * const p"},{"Uniquefunname":"WEBP_INLINE uint32_t PixOrCopyLength(const PixOrCopy * const p)","Funname":"PixOrCopyLength","Returntype":"WEBP_INLINE uint32_t","Args":"const PixOrCopy * const p"},{"Uniquefunname":"WEBP_INLINE uint32_t PixOrCopyLiteral(const PixOrCopy * const p,int component)","Funname":"PixOrCopyLiteral","Returntype":"WEBP_INLINE uint32_t","Args":"const PixOrCopy * const p,int component"},{"Uniquefunname":"void VP8LBackwardRefsClear(VP8LBackwardRefs * const refs)","Funname":"VP8LBackwardRefsClear","Returntype":"void","Args":"VP8LBackwardRefs * const refs"},{"Uniquefunname":"void VP8LBackwardRefsInit(VP8LBackwardRefs * const refs,int block_size)","Funname":"VP8LBackwardRefsInit","Returntype":"void","Args":"VP8LBackwardRefs * const refs,int block_size"},{"Uniquefunname":"VP8LBackwardRefs * VP8LGetBackwardReferences(int width,int height,const uint32_t * const argb,int quality,int low_effort,int lz77_types_to_try,int * const cache_bits,const VP8LHashChain * const hash_chain,VP8LBackwardRefs * const refs_tmp1,VP8LBackwardRefs * const refs_tmp2)","Funname":"VP8LGetBackwardReferences","Returntype":"VP8LBackwardRefs *","Args":"int width,int height,const uint32_t * const argb,int quality,int low_effort,int lz77_types_to_try,int * const cache_bits,const VP8LHashChain * const hash_chain,VP8LBackwardRefs * const refs_tmp1,VP8LBackwardRefs * const refs_tmp2"},{"Uniquefunname":"void VP8LHashChainClear(VP8LHashChain * const p)","Funname":"VP8LHashChainClear","Returntype":"void","Args":"VP8LHashChain * const p"},{"Uniquefunname":"int VP8LHashChainFill(VP8LHashChain * const p,int quality,const uint32_t * const argb,int xsize,int ysize,int low_effort)","Funname":"VP8LHashChainFill","Returntype":"int","Args":"VP8LHashChain * const p,int quality,const uint32_t * const argb,int xsize,int ysize,int low_effort"},{"Uniquefunname":"WEBP_INLINE void VP8LHashChainFindCopy(const VP8LHashChain * const p,int base_position,int * const offset_ptr,int * const length_ptr)","Funname":"VP8LHashChainFindCopy","Returntype":"WEBP_INLINE void","Args":"const VP8LHashChain * const p,int base_position,int * const offset_ptr,int * const length_ptr"},{"Uniquefunname":"WEBP_INLINE int VP8LHashChainFindLength(const VP8LHashChain * const p,const int base_position)","Funname":"VP8LHashChainFindLength","Returntype":"WEBP_INLINE int","Args":"const VP8LHashChain * const p,const int base_position"},{"Uniquefunname":"WEBP_INLINE int VP8LHashChainFindOffset(const VP8LHashChain * const p,const int base_position)","Funname":"VP8LHashChainFindOffset","Returntype":"WEBP_INLINE int","Args":"const VP8LHashChain * const p,const int base_position"},{"Uniquefunname":"int VP8LHashChainInit(VP8LHashChain * const p,int size)","Funname":"VP8LHashChainInit","Returntype":"int","Args":"VP8LHashChain * const p,int size"},{"Uniquefunname":"VP8LRefsCursor VP8LRefsCursorInit(const VP8LBackwardRefs * const refs)","Funname":"VP8LRefsCursorInit","Returntype":"VP8LRefsCursor","Args":"const VP8LBackwardRefs * const refs"},{"Uniquefunname":"WEBP_INLINE void VP8LRefsCursorNext(VP8LRefsCursor * const c)","Funname":"VP8LRefsCursorNext","Returntype":"WEBP_INLINE void","Args":"VP8LRefsCursor * const c"},{"Uniquefunname":"void VP8LRefsCursorNextBlock(VP8LRefsCursor * const c)","Funname":"VP8LRefsCursorNextBlock","Returntype":"void","Args":"VP8LRefsCursor * const c"},{"Uniquefunname":"WEBP_INLINE int VP8LRefsCursorOk(const VP8LRefsCursor * const c)","Funname":"VP8LRefsCursorOk","Returntype":"WEBP_INLINE int","Args":"const VP8LRefsCursor * const c"}],"Records":[{"Name":"macro","Fields":["HASH_BITS","HASH_SIZE","MAX_COLOR_CACHE_BITS","MAX_LENGTH","MAX_LENGTH_BITS","MAX_REFS_BLOCK_PER_IMAGE","WEBP_ENC_BACKWARD_REFERENCES_ENC_H_","WINDOW_SIZE_BITS"]},{"Name":"struct:VP8LBackwardRefs","Fields":["int VP8LBackwardRefs::block_size_","int VP8LBackwardRefs::error_","PixOrCopyBlock * VP8LBackwardRefs::free_blocks_","PixOrCopyBlock * VP8LBackwardRefs::last_block_","PixOrCopyBlock * VP8LBackwardRefs::refs_","PixOrCopyBlock ** VP8LBackwardRefs::tail_"]},{"Name":"struct:VP8LHashChain","Fields":["uint32_t * VP8LHashChain::offset_length_","int VP8LHashChain::size_"]},{"Name":"enum:Mode","Fields":["kCacheIdx","kCopy","kLiteral","kNone"]},{"Name":"enum:VP8LLZ77Type","Fields":["kLZ77Box","kLZ77RLE","kLZ77Standard"]}]}
{"Filepath":"src/3rdparty/libwebp/src/enc/cost_enc.h","Functions":[{"Uniquefunname":"WEBP_INLINE int VP8BitCost(int bit,uint8_t proba)","Funname":"VP8BitCost","Returntype":"WEBP_INLINE int","Args":"int bit,uint8_t proba"},{"Uniquefunname":"void VP8CalculateLevelCosts(VP8EncProba * const proba)","Funname":"VP8CalculateLevelCosts","Returntype":"void","Args":"VP8EncProba * const proba"},{"Uniquefunname":"void VP8InitResidual(int first,int coeff_type,VP8Encoder * const enc,VP8Residual * const res)","Funname":"VP8InitResidual","Returntype":"void","Args":"int first,int coeff_type,VP8Encoder * const enc,VP8Residual * const res"},{"Uniquefunname":"WEBP_INLINE int VP8LevelCost(const uint16_t * const table,int level)","Funname":"VP8LevelCost","Returntype":"WEBP_INLINE int","Args":"const uint16_t * const table,int level"},{"Uniquefunname":"int VP8RecordCoeffs(int ctx,const VP8Residual * const res)","Funname":"VP8RecordCoeffs","Returntype":"int","Args":"int ctx,const VP8Residual * const res"},{"Uniquefunname":"WEBP_INLINE int VP8RecordStats(int bit,proba_t * const stats)","Funname":"VP8RecordStats","Returntype":"WEBP_INLINE int","Args":"int bit,proba_t * const stats"}],"Records":[{"Name":"struct:VP8Residual","Fields":["int VP8Residual::coeff_type","const int16_t * VP8Residual::coeffs","CostArrayPtr VP8Residual::costs","int VP8Residual::first","int VP8Residual::last","ProbaArray * VP8Residual::prob","StatsArray * VP8Residual::stats"]},{"Name":"macro","Fields":["WEBP_ENC_COST_ENC_H_"]}]}
{"Filepath":"src/3rdparty/libwebp/src/enc/histogram_enc.h","Functions":[{"Uniquefunname":"VP8LHistogram * VP8LAllocateHistogram(int cache_bits)","Funname":"VP8LAllocateHistogram","Returntype":"VP8LHistogram *","Args":"int cache_bits"},{"Uniquefunname":"VP8LHistogramSet * VP8LAllocateHistogramSet(int size,int cache_bits)","Funname":"VP8LAllocateHistogramSet","Returntype":"VP8LHistogramSet *","Args":"int size,int cache_bits"},{"Uniquefunname":"double VP8LBitsEntropy(const uint32_t * const array,int n)","Funname":"VP8LBitsEntropy","Returntype":"double","Args":"const uint32_t * const array,int n"},{"Uniquefunname":"void VP8LFreeHistogram(VP8LHistogram * const histo)","Funname":"VP8LFreeHistogram","Returntype":"void","Args":"VP8LHistogram * const histo"},{"Uniquefunname":"void VP8LFreeHistogramSet(VP8LHistogramSet * const histo)","Funname":"VP8LFreeHistogramSet","Returntype":"void","Args":"VP8LHistogramSet * const histo"},{"Uniquefunname":"int VP8LGetHistoImageSymbols(int xsize,int ysize,const VP8LBackwardRefs * const refs,int quality,int low_effort,int histogram_bits,int cache_bits,VP8LHistogramSet * const image_in,VP8LHistogram * const tmp_histo,uint16_t * const histogram_symbols)","Funname":"VP8LGetHistoImageSymbols","Returntype":"int","Args":"int xsize,int ysize,const VP8LBackwardRefs * const refs,int quality,int low_effort,int histogram_bits,int cache_bits,VP8LHistogramSet * const image_in,VP8LHistogram * const tmp_histo,uint16_t * const histogram_symbols"},{"Uniquefunname":"int VP8LGetHistogramSize(int palette_code_bits)","Funname":"VP8LGetHistogramSize","Returntype":"int","Args":"int palette_code_bits"},{"Uniquefunname":"void VP8LHistogramAddSinglePixOrCopy(VP8LHistogram * const histo,const PixOrCopy * const v,int (* const distance_modifier)(int,int),int distance_modifier_arg0)","Funname":"VP8LHistogramAddSinglePixOrCopy","Returntype":"void","Args":"VP8LHistogram * const histo,const PixOrCopy * const v,int (* const distance_modifier)(int,int),int distance_modifier_arg0"},{"Uniquefunname":"void VP8LHistogramCreate(VP8LHistogram * const p,const VP8LBackwardRefs * const refs,int palette_code_bits)","Funname":"VP8LHistogramCreate","Returntype":"void","Args":"VP8LHistogram * const p,const VP8LBackwardRefs * const refs,int palette_code_bits"},{"Uniquefunname":"double VP8LHistogramEstimateBits(VP8LHistogram * const p)","Funname":"VP8LHistogramEstimateBits","Returntype":"double","Args":"VP8LHistogram * const p"},{"Uniquefunname":"void VP8LHistogramInit(VP8LHistogram * const p,int palette_code_bits,int init_arrays)","Funname":"VP8LHistogramInit","Returntype":"void","Args":"VP8LHistogram * const p,int palette_code_bits,int init_arrays"},{"Uniquefunname":"WEBP_INLINE int VP8LHistogramNumCodes(int palette_code_bits)","Funname":"VP8LHistogramNumCodes","Returntype":"WEBP_INLINE int","Args":"int palette_code_bits"},{"Uniquefunname":"void VP8LHistogramSetClear(VP8LHistogramSet * const set)","Funname":"VP8LHistogramSetClear","Returntype":"void","Args":"VP8LHistogramSet * const set"},{"Uniquefunname":"void VP8LHistogramStoreRefs(const VP8LBackwardRefs * const refs,VP8LHistogram * const histo)","Funname":"VP8LHistogramStoreRefs","Returntype":"void","Args":"const VP8LBackwardRefs * const refs,VP8LHistogram * const histo"}],"Records":[{"Name":"macro","Fields":["VP8L_NON_TRIVIAL_SYM","WEBP_ENC_HISTOGRAM_ENC_H_"]}]}
{"Filepath":"src/3rdparty/libwebp/src/enc/vp8i_enc.h","Functions":[{"Uniquefunname":"WEBP_INLINE int QUANTDIV(uint32_t n,uint32_t iQ,uint32_t B)","Funname":"QUANTDIV","Returntype":"WEBP_INLINE int","Args":"uint32_t n,uint32_t iQ,uint32_t B"},{"Uniquefunname":"void VP8AdjustFilterStrength(VP8EncIterator * const it)","Funname":"VP8AdjustFilterStrength","Returntype":"void","Args":"VP8EncIterator * const it"},{"Uniquefunname":"void VP8CodeIntraModes(VP8Encoder * const enc)","Funname":"VP8CodeIntraModes","Returntype":"void","Args":"VP8Encoder * const enc"},{"Uniquefunname":"int VP8Decimate(VP8EncIterator * const it,VP8ModeScore * const rd,VP8RDLevel rd_opt)","Funname":"VP8Decimate","Returntype":"int","Args":"VP8EncIterator * const it,VP8ModeScore * const rd,VP8RDLevel rd_opt"},{"Uniquefunname":"void VP8DefaultProbas(VP8Encoder * const enc)","Funname":"VP8DefaultProbas","Returntype":"void","Args":"VP8Encoder * const enc"},{"Uniquefunname":"int VP8EmitTokens(VP8TBuffer * const b,VP8BitWriter * const bw,const uint8_t * const probas,int final_pass)","Funname":"VP8EmitTokens","Returntype":"int","Args":"VP8TBuffer * const b,VP8BitWriter * const bw,const uint8_t * const probas,int final_pass"},{"Uniquefunname":"int VP8EncAnalyze(VP8Encoder * const enc)","Funname":"VP8EncAnalyze","Returntype":"int","Args":"VP8Encoder * const enc"},{"Uniquefunname":"int VP8EncDeleteAlpha(VP8Encoder * const enc)","Funname":"VP8EncDeleteAlpha","Returntype":"int","Args":"VP8Encoder * const enc"},{"Uniquefunname":"int VP8EncFinishAlpha(VP8Encoder * const enc)","Funname":"VP8EncFinishAlpha","Returntype":"int","Args":"VP8Encoder * const enc"},{"Uniquefunname":"void VP8EncFreeBitWriters(VP8Encoder * const enc)","Funname":"VP8EncFreeBitWriters","Returntype":"void","Args":"VP8Encoder * const enc"},{"Uniquefunname":"void VP8EncInitAlpha(VP8Encoder * const enc)","Funname":"VP8EncInitAlpha","Returntype":"void","Args":"VP8Encoder * const enc"},{"Uniquefunname":"int VP8EncLoop(VP8Encoder * const enc)","Funname":"VP8EncLoop","Returntype":"int","Args":"VP8Encoder * const enc"},{"Uniquefunname":"int VP8EncStartAlpha(VP8Encoder * const enc)","Funname":"VP8EncStartAlpha","Returntype":"int","Args":"VP8Encoder * const enc"},{"Uniquefunname":"int VP8EncTokenLoop(VP8Encoder * const enc)","Funname":"VP8EncTokenLoop","Returntype":"int","Args":"VP8Encoder * const enc"},{"Uniquefunname":"int VP8EncWrite(VP8Encoder * const enc)","Funname":"VP8EncWrite","Returntype":"int","Args":"VP8Encoder * const enc"},{"Uniquefunname":"size_t VP8EstimateTokenSize(VP8TBuffer * const b,const uint8_t * const probas)","Funname":"VP8EstimateTokenSize","Returntype":"size_t","Args":"VP8TBuffer * const b,const uint8_t * const probas"},{"Uniquefunname":"int VP8FilterStrengthFromDelta(int sharpness,int delta)","Funname":"VP8FilterStrengthFromDelta","Returntype":"int","Args":"int sharpness,int delta"},{"Uniquefunname":"int VP8GetCostLuma16(VP8EncIterator * const it,const VP8ModeScore * const rd)","Funname":"VP8GetCostLuma16","Returntype":"int","Args":"VP8EncIterator * const it,const VP8ModeScore * const rd"},{"Uniquefunname":"int VP8GetCostLuma4(VP8EncIterator * const it,const int16_t levels[16])","Funname":"VP8GetCostLuma4","Returntype":"int","Args":"VP8EncIterator * const it,const int16_t levels[16]"},{"Uniquefunname":"int VP8GetCostUV(VP8EncIterator * const it,const VP8ModeScore * const rd)","Funname":"VP8GetCostUV","Returntype":"int","Args":"VP8EncIterator * const it,const VP8ModeScore * const rd"},{"Uniquefunname":"void VP8InitFilter(VP8EncIterator * const it)","Funname":"VP8InitFilter","Returntype":"void","Args":"VP8EncIterator * const it"},{"Uniquefunname":"void VP8IteratorBytesToNz(VP8EncIterator * const it)","Funname":"VP8IteratorBytesToNz","Returntype":"void","Args":"VP8EncIterator * const it"},{"Uniquefunname":"void VP8IteratorExport(const VP8EncIterator * const it)","Funname":"VP8IteratorExport","Returntype":"void","Args":"const VP8EncIterator * const it"},{"Uniquefunname":"void VP8IteratorImport(VP8EncIterator * const it,uint8_t * const tmp_32)","Funname":"VP8IteratorImport","Returntype":"void","Args":"VP8EncIterator * const it,uint8_t * const tmp_32"},{"Uniquefunname":"void VP8IteratorInit(VP8Encoder * const enc,VP8EncIterator * const it)","Funname":"VP8IteratorInit","Returntype":"void","Args":"VP8Encoder * const enc,VP8EncIterator * const it"},{"Uniquefunname":"int VP8IteratorIsDone(const VP8EncIterator * const it)","Funname":"VP8IteratorIsDone","Returntype":"int","Args":"const VP8EncIterator * const it"},{"Uniquefunname":"int VP8IteratorNext(VP8EncIterator * const it)","Funname":"VP8IteratorNext","Returntype":"int","Args":"VP8EncIterator * const it"},{"Uniquefunname":"void VP8IteratorNzToBytes(VP8EncIterator * const it)","Funname":"VP8IteratorNzToBytes","Returntype":"void","Args":"VP8EncIterator * const it"},{"Uniquefunname":"int VP8IteratorProgress(const VP8EncIterator * const it,int final_delta_percent)","Funname":"VP8IteratorProgress","Returntype":"int","Args":"const VP8EncIterator * const it,int final_delta_percent"},{"Uniquefunname":"void VP8IteratorReset(VP8EncIterator * const it)","Funname":"VP8IteratorReset","Returntype":"void","Args":"VP8EncIterator * const it"},{"Uniquefunname":"int VP8IteratorRotateI4(VP8EncIterator * const it,const uint8_t * const yuv_out)","Funname":"VP8IteratorRotateI4","Returntype":"int","Args":"VP8EncIterator * const it,const uint8_t * const yuv_out"},{"Uniquefunname":"void VP8IteratorSaveBoundary(VP8EncIterator * const it)","Funname":"VP8IteratorSaveBoundary","Returntype":"void","Args":"VP8EncIterator * const it"},{"Uniquefunname":"void VP8IteratorSetCountDown(VP8EncIterator * const it,int count_down)","Funname":"VP8IteratorSetCountDown","Returntype":"void","Args":"VP8EncIterator * const it,int count_down"},{"Uniquefunname":"void VP8IteratorSetRow(VP8EncIterator * const it,int y)","Funname":"VP8IteratorSetRow","Returntype":"void","Args":"VP8EncIterator * const it,int y"},{"Uniquefunname":"void VP8IteratorStartI4(VP8EncIterator * const it)","Funname":"VP8IteratorStartI4","Returntype":"void","Args":"VP8EncIterator * const it"},{"Uniquefunname":"void VP8MakeChroma8Preds(const VP8EncIterator * const it)","Funname":"VP8MakeChroma8Preds","Returntype":"void","Args":"const VP8EncIterator * const it"},{"Uniquefunname":"void VP8MakeIntra4Preds(const VP8EncIterator * const it)","Funname":"VP8MakeIntra4Preds","Returntype":"void","Args":"const VP8EncIterator * const it"},{"Uniquefunname":"void VP8MakeLuma16Preds(const VP8EncIterator * const it)","Funname":"VP8MakeLuma16Preds","Returntype":"void","Args":"const VP8EncIterator * const it"},{"Uniquefunname":"int VP8RecordCoeffTokens(int ctx,const struct VP8Residual * const res,VP8TBuffer * const tokens)","Funname":"VP8RecordCoeffTokens","Returntype":"int","Args":"int ctx,const struct VP8Residual * const res,VP8TBuffer * const tokens"},{"Uniquefunname":"void VP8SetIntra16Mode(const VP8EncIterator * const it,int mode)","Funname":"VP8SetIntra16Mode","Returntype":"void","Args":"const VP8EncIterator * const it,int mode"},{"Uniquefunname":"void VP8SetIntra4Mode(const VP8EncIterator * const it,const uint8_t * modes)","Funname":"VP8SetIntra4Mode","Returntype":"void","Args":"const VP8EncIterator * const it,const uint8_t * modes"},{"Uniquefunname":"void VP8SetIntraUVMode(const VP8EncIterator * const it,int mode)","Funname":"VP8SetIntraUVMode","Returntype":"void","Args":"const VP8EncIterator * const it,int mode"},{"Uniquefunname":"void VP8SetSegment(const VP8EncIterator * const it,int segment)","Funname":"VP8SetSegment","Returntype":"void","Args":"const VP8EncIterator * const it,int segment"},{"Uniquefunname":"void VP8SetSegmentParams(VP8Encoder * const enc,float quality)","Funname":"VP8SetSegmentParams","Returntype":"void","Args":"VP8Encoder * const enc,float quality"},{"Uniquefunname":"void VP8SetSkip(const VP8EncIterator * const it,int skip)","Funname":"VP8SetSkip","Returntype":"void","Args":"const VP8EncIterator * const it,int skip"},{"Uniquefunname":"void VP8StoreFilterStats(VP8EncIterator * const it)","Funname":"VP8StoreFilterStats","Returntype":"void","Args":"VP8EncIterator * const it"},{"Uniquefunname":"void VP8TBufferClear(VP8TBuffer * const b)","Funname":"VP8TBufferClear","Returntype":"void","Args":"VP8TBuffer * const b"},{"Uniquefunname":"void VP8TBufferInit(VP8TBuffer * const b,int page_size)","Funname":"VP8TBufferInit","Returntype":"void","Args":"VP8TBuffer * const b,int page_size"},{"Uniquefunname":"void VP8WriteProbas(VP8BitWriter * const bw,const VP8EncProba * const probas)","Funname":"VP8WriteProbas","Returntype":"void","Args":"VP8BitWriter * const bw,const VP8EncProba * const probas"},{"Uniquefunname":"void WebPCleanupTransparentAreaLossless(WebPPicture * const pic)","Funname":"WebPCleanupTransparentAreaLossless","Returntype":"void","Args":"WebPPicture * const pic"},{"Uniquefunname":"int WebPEncodingSetError(const WebPPicture * const pic,WebPEncodingError error)","Funname":"WebPEncodingSetError","Returntype":"int","Args":"const WebPPicture * const pic,WebPEncodingError error"},{"Uniquefunname":"int WebPPictureAllocARGB(WebPPicture * const picture,int width,int height)","Funname":"WebPPictureAllocARGB","Returntype":"int","Args":"WebPPicture * const picture,int width,int height"},{"Uniquefunname":"int WebPPictureAllocYUVA(WebPPicture * const picture,int width,int height)","Funname":"WebPPictureAllocYUVA","Returntype":"int","Args":"WebPPicture * const picture,int width,int height"},{"Uniquefunname":"void WebPPictureResetBuffers(WebPPicture * const picture)","Funname":"WebPPictureResetBuffers","Returntype":"void","Args":"WebPPicture * const picture"},{"Uniquefunname":"int WebPReportProgress(const WebPPicture * const pic,int percent,int * const percent_store)","Funname":"WebPReportProgress","Returntype":"int","Args":"const WebPPicture * const pic,int percent,int * const percent_store"}],"Records":[{"Name":"macro","Fields":["BIAS(b)","C8DC8","C8HE8","C8TM8","C8VE8","ENC_MAJ_VERSION","ENC_MIN_VERSION","ENC_REV_VERSION","ERROR_DIFFUSION_QUALITY","I16DC16","I16HE16","I16TM16","I16VE16","I4DC4","I4HD4","I4HE4","I4HU4","I4LD4","I4RD4","I4TM4","I4TMP","I4VE4","I4VL4","I4VR4","MAX_COST","PRED_SIZE_ENC","QFIX","U_OFF_ENC","V_OFF_ENC","WEBP_ENC_VP8I_ENC_H_","YUV_SIZE_ENC","Y_OFF_ENC"]},{"Name":"struct:VP8Encoder","Fields":["int VP8Encoder::alpha_","uint8_t * VP8Encoder::alpha_data_","uint32_t VP8Encoder::alpha_data_size_","WebPWorker VP8Encoder::alpha_worker_","int VP8Encoder::base_quant_","int[3] VP8Encoder::block_count_","VP8BitWriter VP8Encoder::bw_","int VP8Encoder::coded_size_","const WebPConfig * VP8Encoder::config_","int VP8Encoder::do_search_","int VP8Encoder::dq_uv_ac_","int VP8Encoder::dq_uv_dc_","int VP8Encoder::dq_y1_dc_","int VP8Encoder::dq_y2_ac_","int VP8Encoder::dq_y2_dc_","VP8SegmentInfo[] VP8Encoder::dqm_","VP8EncFilterHeader VP8Encoder::filter_hdr_","int VP8Encoder::has_alpha_","LFStats * VP8Encoder::lf_stats_","int VP8Encoder::max_i4_header_bits_","int VP8Encoder::mb_h_","int VP8Encoder::mb_header_limit_","VP8MBInfo * VP8Encoder::mb_info_","int VP8Encoder::mb_w_","int VP8Encoder::method_","int VP8Encoder::num_parts_","uint32_t * VP8Encoder::nz_","VP8BitWriter[] VP8Encoder::parts_","int VP8Encoder::percent_","WebPPicture * VP8Encoder::pic_","uint8_t * VP8Encoder::preds_","int VP8Encoder::preds_w_","VP8EncProba VP8Encoder::proba_","int VP8Encoder::profile_","VP8RDLevel VP8Encoder::rd_opt_level_","int[3][4] VP8Encoder::residual_bytes_","VP8EncSegmentHeader VP8Encoder::segment_hdr_","uint64_t[4] VP8Encoder::sse_","uint64_t VP8Encoder::sse_count_","int VP8Encoder::thread_level_","VP8TBuffer VP8Encoder::tokens_","DError * VP8Encoder::top_derr_","int VP8Encoder::use_tokens_","int VP8Encoder::uv_alpha_","uint8_t * VP8Encoder::uv_top_","uint8_t * VP8Encoder::y_top_"]},{"Name":"struct:VP8Matrix","Fields":["uint32_t[16] VP8Matrix::bias_","uint16_t[16] VP8Matrix::iq_","uint16_t[16] VP8Matrix::q_","uint16_t[16] VP8Matrix::sharpen_","uint32_t[16] VP8Matrix::zthresh_"]}]}
{"Filepath":"src/3rdparty/libwebp/src/enc/vp8li_enc.h","Functions":[{"Uniquefunname":"int VP8ApplyNearLossless(const WebPPicture * const picture,int quality,uint32_t * const argb_dst)","Funname":"VP8ApplyNearLossless","Returntype":"int","Args":"const WebPPicture * const picture,int quality,uint32_t * const argb_dst"},{"Uniquefunname":"void VP8LColorSpaceTransform(int width,int height,int bits,int quality,uint32_t * const argb,uint32_t * image)","Funname":"VP8LColorSpaceTransform","Returntype":"void","Args":"int width,int height,int bits,int quality,uint32_t * const argb,uint32_t * image"},{"Uniquefunname":"int VP8LEncodeImage(const WebPConfig * const config,const WebPPicture * const picture)","Funname":"VP8LEncodeImage","Returntype":"int","Args":"const WebPConfig * const config,const WebPPicture * const picture"},{"Uniquefunname":"WebPEncodingError VP8LEncodeStream(const WebPConfig * const config,const WebPPicture * const picture,VP8LBitWriter * const bw,int use_cache)","Funname":"VP8LEncodeStream","Returntype":"WebPEncodingError","Args":"const WebPConfig * const config,const WebPPicture * const picture,VP8LBitWriter * const bw,int use_cache"},{"Uniquefunname":"void VP8LResidualImage(int width,int height,int bits,int low_effort,uint32_t * const argb,uint32_t * const argb_scratch,uint32_t * const image,int near_lossless,int exact,int used_subtract_green)","Funname":"VP8LResidualImage","Returntype":"void","Args":"int width,int height,int bits,int low_effort,uint32_t * const argb,uint32_t * const argb_scratch,uint32_t * const image,int near_lossless,int exact,int used_subtract_green"}],"Records":[{"Name":"macro","Fields":["MAX_TRANSFORM_BITS","WEBP_ENC_VP8LI_ENC_H_","WEBP_NEAR_LOSSLESS"]}]}
{"Filepath":"src/3rdparty/libwebp/src/mux/animi.h","Functions":[{"Uniquefunname":"int WebPAnimEncoderRefineRect(const struct WebPPicture * const prev_canvas,const struct WebPPicture * const curr_canvas,int is_lossless,float quality,int * const x_offset,int * const y_offset,int * const width,int * const height)","Funname":"WebPAnimEncoderRefineRect","Returntype":"int","Args":"const struct WebPPicture * const prev_canvas,const struct WebPPicture * const curr_canvas,int is_lossless,float quality,int * const x_offset,int * const y_offset,int * const width,int * const height"}],"Records":[{"Name":"macro","Fields":["WEBP_MUX_ANIMI_H_"]}]}
{"Filepath":"src/3rdparty/libwebp/src/mux/muxi.h","Functions":[{"Uniquefunname":"WebPMuxError ChunkAppend(WebPChunk * const chunk,WebPChunk *** const chunk_list)","Funname":"ChunkAppend","Returntype":"WebPMuxError","Args":"WebPChunk * const chunk,WebPChunk *** const chunk_list"},{"Uniquefunname":"WebPMuxError ChunkAssignData(WebPChunk * chunk,const WebPData * const data,int copy_data,uint32_t tag)","Funname":"ChunkAssignData","Returntype":"WebPMuxError","Args":"WebPChunk * chunk,const WebPData * const data,int copy_data,uint32_t tag"},{"Uniquefunname":"WebPChunk * ChunkDelete(WebPChunk * const chunk)","Funname":"ChunkDelete","Returntype":"WebPChunk *","Args":"WebPChunk * const chunk"},{"Uniquefunname":"WEBP_INLINE size_t ChunkDiskSize(const WebPChunk * chunk)","Funname":"ChunkDiskSize","Returntype":"WEBP_INLINE size_t","Args":"const WebPChunk * chunk"},{"Uniquefunname":"WebPChunkId ChunkGetIdFromTag(uint32_t tag)","Funname":"ChunkGetIdFromTag","Returntype":"WebPChunkId","Args":"uint32_t tag"},{"Uniquefunname":"CHUNK_INDEX ChunkGetIndexFromFourCC(const char fourcc[4])","Funname":"ChunkGetIndexFromFourCC","Returntype":"CHUNK_INDEX","Args":"const char fourcc[4]"},{"Uniquefunname":"CHUNK_INDEX ChunkGetIndexFromTag(uint32_t tag)","Funname":"ChunkGetIndexFromTag","Returntype":"CHUNK_INDEX","Args":"uint32_t tag"},{"Uniquefunname":"uint32_t ChunkGetTagFromFourCC(const char fourcc[4])","Funname":"ChunkGetTagFromFourCC","Returntype":"uint32_t","Args":"const char fourcc[4]"},{"Uniquefunname":"void ChunkInit(WebPChunk * const chunk)","Funname":"ChunkInit","Returntype":"void","Args":"WebPChunk * const chunk"},{"Uniquefunname":"void ChunkListDelete(WebPChunk ** const chunk_list)","Funname":"ChunkListDelete","Returntype":"void","Args":"WebPChunk ** const chunk_list"},{"Uniquefunname":"size_t ChunkListDiskSize(const WebPChunk * chunk_list)","Funname":"ChunkListDiskSize","Returntype":"size_t","Args":"const WebPChunk * chunk_list"},{"Uniquefunname":"uint8_t * ChunkListEmit(const WebPChunk * chunk_list,uint8_t * dst)","Funname":"ChunkListEmit","Returntype":"uint8_t *","Args":"const WebPChunk * chunk_list,uint8_t * dst"},{"Uniquefunname":"WebPChunk * ChunkRelease(WebPChunk * const chunk)","Funname":"ChunkRelease","Returntype":"WebPChunk *","Args":"WebPChunk * const chunk"},{"Uniquefunname":"WebPChunk * ChunkSearchList(WebPChunk * first,uint32_t nth,uint32_t tag)","Funname":"ChunkSearchList","Returntype":"WebPChunk *","Args":"WebPChunk * first,uint32_t nth,uint32_t tag"},{"Uniquefunname":"WebPMuxError ChunkSetHead(WebPChunk * const chunk,WebPChunk ** const chunk_list)","Funname":"ChunkSetHead","Returntype":"WebPMuxError","Args":"WebPChunk * const chunk,WebPChunk ** const chunk_list"},{"Uniquefunname":"WEBP_INLINE int IsWPI(WebPChunkId id)","Funname":"IsWPI","Returntype":"WEBP_INLINE int","Args":"WebPChunkId id"},{"Uniquefunname":"uint8_t * MuxEmitRiffHeader(uint8_t * const data,size_t size)","Funname":"MuxEmitRiffHeader","Returntype":"uint8_t *","Args":"uint8_t * const data,size_t size"},{"Uniquefunname":"WebPChunk ** MuxGetChunkListFromId(const WebPMux * mux,WebPChunkId id)","Funname":"MuxGetChunkListFromId","Returntype":"WebPChunk **","Args":"const WebPMux * mux,WebPChunkId id"},{"Uniquefunname":"int MuxHasAlpha(const WebPMuxImage * images)","Funname":"MuxHasAlpha","Returntype":"int","Args":"const WebPMuxImage * images"},{"Uniquefunname":"int MuxImageCount(const WebPMuxImage * wpi_list,WebPChunkId id)","Funname":"MuxImageCount","Returntype":"int","Args":"const WebPMuxImage * wpi_list,WebPChunkId id"},{"Uniquefunname":"WebPMuxImage * MuxImageDelete(WebPMuxImage * const wpi)","Funname":"MuxImageDelete","Returntype":"WebPMuxImage *","Args":"WebPMuxImage * const wpi"},{"Uniquefunname":"WebPMuxError MuxImageDeleteNth(WebPMuxImage ** wpi_list,uint32_t nth)","Funname":"MuxImageDeleteNth","Returntype":"WebPMuxError","Args":"WebPMuxImage ** wpi_list,uint32_t nth"},{"Uniquefunname":"size_t MuxImageDiskSize(const WebPMuxImage * const wpi)","Funname":"MuxImageDiskSize","Returntype":"size_t","Args":"const WebPMuxImage * const wpi"},{"Uniquefunname":"uint8_t * MuxImageEmit(const WebPMuxImage * const wpi,uint8_t * dst)","Funname":"MuxImageEmit","Returntype":"uint8_t *","Args":"const WebPMuxImage * const wpi,uint8_t * dst"},{"Uniquefunname":"int MuxImageFinalize(WebPMuxImage * const wpi)","Funname":"MuxImageFinalize","Returntype":"int","Args":"WebPMuxImage * const wpi"},{"Uniquefunname":"WebPMuxError MuxImageGetNth(const WebPMuxImage ** wpi_list,uint32_t nth,WebPMuxImage ** wpi)","Funname":"MuxImageGetNth","Returntype":"WebPMuxError","Args":"const WebPMuxImage ** wpi_list,uint32_t nth,WebPMuxImage ** wpi"},{"Uniquefunname":"void MuxImageInit(WebPMuxImage * const wpi)","Funname":"MuxImageInit","Returntype":"void","Args":"WebPMuxImage * const wpi"},{"Uniquefunname":"WebPMuxError MuxImagePush(const WebPMuxImage * wpi,WebPMuxImage ** wpi_list)","Funname":"MuxImagePush","Returntype":"WebPMuxError","Args":"const WebPMuxImage * wpi,WebPMuxImage ** wpi_list"},{"Uniquefunname":"WebPMuxImage * MuxImageRelease(WebPMuxImage * const wpi)","Funname":"MuxImageRelease","Returntype":"WebPMuxImage *","Args":"WebPMuxImage * const wpi"},{"Uniquefunname":"WebPMuxError MuxValidate(const WebPMux * const mux)","Funname":"MuxValidate","Returntype":"WebPMuxError","Args":"const WebPMux * const mux"},{"Uniquefunname":"WEBP_INLINE size_t SizeWithPadding(size_t chunk_size)","Funname":"SizeWithPadding","Returntype":"WEBP_INLINE size_t","Args":"size_t chunk_size"}],"Records":[{"Name":"macro","Fields":["MUX_MAJ_VERSION","MUX_MIN_VERSION","MUX_REV_VERSION","NIL_TAG","WEBP_MUX_MUXI_H_"]},{"Name":"struct:WebPChunk","Fields":["WebPData WebPChunk::data_","WebPChunk * WebPChunk::next_","int WebPChunk::owner_","uint32_t WebPChunk::tag_"]},{"Name":"struct:WebPMux","Fields":["WebPChunk * WebPMux::anim_","int WebPMux::canvas_height_","int WebPMux::canvas_width_","WebPChunk * WebPMux::exif_","WebPChunk * WebPMux::iccp_","WebPMuxImage * WebPMux::images_","WebPChunk * WebPMux::unknown_","WebPChunk * WebPMux::vp8x_","WebPChunk * WebPMux::xmp_"]},{"Name":"struct:WebPMuxImage","Fields":["WebPChunk * WebPMuxImage::alpha_","int WebPMuxImage::has_alpha_","WebPChunk * WebPMuxImage::header_","int WebPMuxImage::height_","WebPChunk * WebPMuxImage::img_","int WebPMuxImage::is_partial_","WebPMuxImage * WebPMuxImage::next_","WebPChunk * WebPMuxImage::unknown_","int WebPMuxImage::width_"]}]}
{"Filepath":"src/3rdparty/libwebp/src/utils/bit_reader_inl_utils.h","Functions":[{"Uniquefunname":"WEBP_INLINE int VP8GetBit(VP8BitReader * const br,int prob,const char label[])","Funname":"VP8GetBit","Returntype":"WEBP_INLINE int","Args":"VP8BitReader * const br,int prob,const char label[]"},{"Uniquefunname":"WEBP_INLINE int VP8GetBitAlt(VP8BitReader * const br,int prob,const char label[])","Funname":"VP8GetBitAlt","Returntype":"WEBP_INLINE int","Args":"VP8BitReader * const br,int prob,const char label[]"},{"Uniquefunname":"WEBP_UBSAN_IGNORE_UNSIGNED_OVERFLOW WEBP_INLINE int VP8GetSigned(VP8BitReader * const br,int v,const char label[])","Funname":"VP8GetSigned","Returntype":"WEBP_UBSAN_IGNORE_UNSIGNED_OVERFLOW WEBP_INLINE int","Args":"VP8BitReader * const br,int v,const char label[]"},{"Uniquefunname":"void VP8LoadFinalBytes(VP8BitReader * const br)","Funname":"VP8LoadFinalBytes","Returntype":"void","Args":"VP8BitReader * const br"},{"Uniquefunname":"WEBP_UBSAN_IGNORE_UNDEF WEBP_INLINE void VP8LoadNewBytes(VP8BitReader * const br)","Funname":"VP8LoadNewBytes","Returntype":"WEBP_UBSAN_IGNORE_UNDEF WEBP_INLINE void","Args":"VP8BitReader * const br"}],"Records":[{"Name":"macro","Fields":["WEBP_UTILS_BIT_READER_INL_UTILS_H_"]}]}
{"Filepath":"src/3rdparty/libwebp/src/utils/bit_reader_utils.h","Functions":[{"Uniquefunname":"void BitTrace(const struct VP8BitReader * const br,const char label[])","Funname":"BitTrace","Returntype":"void","Args":"const struct VP8BitReader * const br,const char label[]"},{"Uniquefunname":"void VP8BitReaderSetBuffer(VP8BitReader * const br,const uint8_t * const start,size_t size)","Funname":"VP8BitReaderSetBuffer","Returntype":"void","Args":"VP8BitReader * const br,const uint8_t * const start,size_t size"},{"Uniquefunname":"int32_t VP8GetSignedValue(VP8BitReader * const br,int num_bits,const char label[])","Funname":"VP8GetSignedValue","Returntype":"int32_t","Args":"VP8BitReader * const br,int num_bits,const char label[]"},{"Uniquefunname":"uint32_t VP8GetValue(VP8BitReader * const br,int num_bits,const char label[])","Funname":"VP8GetValue","Returntype":"uint32_t","Args":"VP8BitReader * const br,int num_bits,const char label[]"},{"Uniquefunname":"void VP8InitBitReader(VP8BitReader * const br,const uint8_t * const start,size_t size)","Funname":"VP8InitBitReader","Returntype":"void","Args":"VP8BitReader * const br,const uint8_t * const start,size_t size"},{"Uniquefunname":"void VP8LBitReaderSetBuffer(VP8LBitReader * const br,const uint8_t * const buffer,size_t length)","Funname":"VP8LBitReaderSetBuffer","Returntype":"void","Args":"VP8LBitReader * const br,const uint8_t * const buffer,size_t length"},{"Uniquefunname":"void VP8LDoFillBitWindow(VP8LBitReader * const br)","Funname":"VP8LDoFillBitWindow","Returntype":"void","Args":"VP8LBitReader * const br"},{"Uniquefunname":"WEBP_INLINE void VP8LFillBitWindow(VP8LBitReader * const br)","Funname":"VP8LFillBitWindow","Returntype":"WEBP_INLINE void","Args":"VP8LBitReader * const br"},{"Uniquefunname":"void VP8LInitBitReader(VP8LBitReader * const br,const uint8_t * const start,size_t length)","Funname":"VP8LInitBitReader","Returntype":"void","Args":"VP8LBitReader * const br,const uint8_t * const start,size_t length"},{"Uniquefunname":"WEBP_INLINE int VP8LIsEndOfStream(const VP8LBitReader * const br)","Funname":"VP8LIsEndOfStream","Returntype":"WEBP_INLINE int","Args":"const VP8LBitReader * const br"},{"Uniquefunname":"WEBP_INLINE uint32_t VP8LPrefetchBits(VP8LBitReader * const br)","Funname":"VP8LPrefetchBits","Returntype":"WEBP_INLINE uint32_t","Args":"VP8LBitReader * const br"},{"Uniquefunname":"uint32_t VP8LReadBits(VP8LBitReader * const br,int n_bits)","Funname":"VP8LReadBits","Returntype":"uint32_t","Args":"VP8LBitReader * const br,int n_bits"},{"Uniquefunname":"WEBP_INLINE void VP8LSetBitPos(VP8LBitReader * const br,int val)","Funname":"VP8LSetBitPos","Returntype":"WEBP_INLINE void","Args":"VP8LBitReader * const br,int val"},{"Uniquefunname":"void VP8RemapBitReader(VP8BitReader * const br,ptrdiff_t offset)","Funname":"VP8RemapBitReader","Returntype":"void","Args":"VP8BitReader * const br,ptrdiff_t offset"}],"Records":[{"Name":"macro","Fields":["BITS","BITTRACE","BT_TRACK(br)","VP8Get(BR,L)","VP8GetBit(BR,P,L)","VP8GetBitAlt(BR,P,L)","VP8GetSigned(BR,V,L)","VP8GetSignedValue(BR,N,L)","VP8GetValue(BR,N,L)","VP8L_LBITS","VP8L_MAX_NUM_BIT_READ","VP8L_WBITS","WEBP_UTILS_BIT_READER_UTILS_H_"]},{"Name":"struct:VP8BitReader","Fields":["int VP8BitReader::bits_","const uint8_t * VP8BitReader::buf_","const uint8_t * VP8BitReader::buf_end_","const uint8_t * VP8BitReader::buf_max_","int VP8BitReader::eof_","range_t VP8BitReader::range_","bit_t VP8BitReader::value_"]}]}
{"Filepath":"src/3rdparty/libwebp/src/utils/bit_writer_utils.h","Functions":[{"Uniquefunname":"int VP8BitWriterAppend(VP8BitWriter * const bw,const uint8_t * data,size_t size)","Funname":"VP8BitWriterAppend","Returntype":"int","Args":"VP8BitWriter * const bw,const uint8_t * data,size_t size"},{"Uniquefunname":"WEBP_INLINE uint8_t * VP8BitWriterBuf(const VP8BitWriter * const bw)","Funname":"VP8BitWriterBuf","Returntype":"WEBP_INLINE uint8_t *","Args":"const VP8BitWriter * const bw"},{"Uniquefunname":"uint8_t * VP8BitWriterFinish(VP8BitWriter * const bw)","Funname":"VP8BitWriterFinish","Returntype":"uint8_t *","Args":"VP8BitWriter * const bw"},{"Uniquefunname":"int VP8BitWriterInit(VP8BitWriter * const bw,size_t expected_size)","Funname":"VP8BitWriterInit","Returntype":"int","Args":"VP8BitWriter * const bw,size_t expected_size"},{"Uniquefunname":"WEBP_INLINE uint64_t VP8BitWriterPos(const VP8BitWriter * const bw)","Funname":"VP8BitWriterPos","Returntype":"WEBP_INLINE uint64_t","Args":"const VP8BitWriter * const bw"},{"Uniquefunname":"WEBP_INLINE size_t VP8BitWriterSize(const VP8BitWriter * const bw)","Funname":"VP8BitWriterSize","Returntype":"WEBP_INLINE size_t","Args":"const VP8BitWriter * const bw"},{"Uniquefunname":"void VP8BitWriterWipeOut(VP8BitWriter * const bw)","Funname":"VP8BitWriterWipeOut","Returntype":"void","Args":"VP8BitWriter * const bw"},{"Uniquefunname":"int VP8LBitWriterClone(const VP8LBitWriter * const src,VP8LBitWriter * const dst)","Funname":"VP8LBitWriterClone","Returntype":"int","Args":"const VP8LBitWriter * const src,VP8LBitWriter * const dst"},{"Uniquefunname":"uint8_t * VP8LBitWriterFinish(VP8LBitWriter * const bw)","Funname":"VP8LBitWriterFinish","Returntype":"uint8_t *","Args":"VP8LBitWriter * const bw"},{"Uniquefunname":"int VP8LBitWriterInit(VP8LBitWriter * const bw,size_t expected_size)","Funname":"VP8LBitWriterInit","Returntype":"int","Args":"VP8LBitWriter * const bw,size_t expected_size"},{"Uniquefunname":"WEBP_INLINE size_t VP8LBitWriterNumBytes(const VP8LBitWriter * const bw)","Funname":"VP8LBitWriterNumBytes","Returntype":"WEBP_INLINE size_t","Args":"const VP8LBitWriter * const bw"},{"Uniquefunname":"void VP8LBitWriterReset(const VP8LBitWriter * const bw_init,VP8LBitWriter * const bw)","Funname":"VP8LBitWriterReset","Returntype":"void","Args":"const VP8LBitWriter * const bw_init,VP8LBitWriter * const bw"},{"Uniquefunname":"void VP8LBitWriterSwap(VP8LBitWriter * const src,VP8LBitWriter * const dst)","Funname":"VP8LBitWriterSwap","Returntype":"void","Args":"VP8LBitWriter * const src,VP8LBitWriter * const dst"},{"Uniquefunname":"void VP8LBitWriterWipeOut(VP8LBitWriter * const bw)","Funname":"VP8LBitWriterWipeOut","Returntype":"void","Args":"VP8LBitWriter * const bw"},{"Uniquefunname":"WEBP_INLINE void VP8LPutBits(VP8LBitWriter * const bw,uint32_t bits,int n_bits)","Funname":"VP8LPutBits","Returntype":"WEBP_INLINE void","Args":"VP8LBitWriter * const bw,uint32_t bits,int n_bits"},{"Uniquefunname":"void VP8LPutBitsFlushBits(VP8LBitWriter * const bw)","Funname":"VP8LPutBitsFlushBits","Returntype":"void","Args":"VP8LBitWriter * const bw"},{"Uniquefunname":"void VP8LPutBitsInternal(VP8LBitWriter * const bw,uint32_t bits,int n_bits)","Funname":"VP8LPutBitsInternal","Returntype":"void","Args":"VP8LBitWriter * const bw,uint32_t bits,int n_bits"},{"Uniquefunname":"int VP8PutBit(VP8BitWriter * const bw,int bit,int prob)","Funname":"VP8PutBit","Returntype":"int","Args":"VP8BitWriter * const bw,int bit,int prob"},{"Uniquefunname":"int VP8PutBitUniform(VP8BitWriter * const bw,int bit)","Funname":"VP8PutBitUniform","Returntype":"int","Args":"VP8BitWriter * const bw,int bit"},{"Uniquefunname":"void VP8PutBits(VP8BitWriter * const bw,uint32_t value,int nb_bits)","Funname":"VP8PutBits","Returntype":"void","Args":"VP8BitWriter * const bw,uint32_t value,int nb_bits"},{"Uniquefunname":"void VP8PutSignedBits(VP8BitWriter * const bw,int value,int nb_bits)","Funname":"VP8PutSignedBits","Returntype":"void","Args":"VP8BitWriter * const bw,int value,int nb_bits"}],"Records":[{"Name":"struct:VP8BitWriter","Fields":["uint8_t * VP8BitWriter::buf_","int VP8BitWriter::error_","size_t VP8BitWriter::max_pos_","int VP8BitWriter::nb_bits_","size_t VP8BitWriter::pos_","int32_t VP8BitWriter::range_","int VP8BitWriter::run_","int32_t VP8BitWriter::value_"]},{"Name":"macro","Fields":["VP8L_WRITER_BITS","VP8L_WRITER_BYTES","VP8L_WRITER_MAX_BITS","WEBP_UTILS_BIT_WRITER_UTILS_H_","WSWAP"]}]}
{"Filepath":"src/3rdparty/libwebp/src/utils/color_cache_utils.h","Functions":[{"Uniquefunname":"void VP8LColorCacheClear(VP8LColorCache * const color_cache)","Funname":"VP8LColorCacheClear","Returntype":"void","Args":"VP8LColorCache * const color_cache"},{"Uniquefunname":"WEBP_INLINE int VP8LColorCacheContains(const VP8LColorCache * const cc,uint32_t argb)","Funname":"VP8LColorCacheContains","Returntype":"WEBP_INLINE int","Args":"const VP8LColorCache * const cc,uint32_t argb"},{"Uniquefunname":"void VP8LColorCacheCopy(const VP8LColorCache * const src,VP8LColorCache * const dst)","Funname":"VP8LColorCacheCopy","Returntype":"void","Args":"const VP8LColorCache * const src,VP8LColorCache * const dst"},{"Uniquefunname":"WEBP_INLINE int VP8LColorCacheGetIndex(const VP8LColorCache * const cc,uint32_t argb)","Funname":"VP8LColorCacheGetIndex","Returntype":"WEBP_INLINE int","Args":"const VP8LColorCache * const cc,uint32_t argb"},{"Uniquefunname":"int VP8LColorCacheInit(VP8LColorCache * const color_cache,int hash_bits)","Funname":"VP8LColorCacheInit","Returntype":"int","Args":"VP8LColorCache * const color_cache,int hash_bits"},{"Uniquefunname":"WEBP_INLINE void VP8LColorCacheInsert(const VP8LColorCache * const cc,uint32_t argb)","Funname":"VP8LColorCacheInsert","Returntype":"WEBP_INLINE void","Args":"const VP8LColorCache * const cc,uint32_t argb"},{"Uniquefunname":"WEBP_INLINE uint32_t VP8LColorCacheLookup(const VP8LColorCache * const cc,uint32_t key)","Funname":"VP8LColorCacheLookup","Returntype":"WEBP_INLINE uint32_t","Args":"const VP8LColorCache * const cc,uint32_t key"},{"Uniquefunname":"WEBP_INLINE void VP8LColorCacheSet(const VP8LColorCache * const cc,uint32_t key,uint32_t argb)","Funname":"VP8LColorCacheSet","Returntype":"WEBP_INLINE void","Args":"const VP8LColorCache * const cc,uint32_t key,uint32_t argb"},{"Uniquefunname":"WEBP_UBSAN_IGNORE_UNSIGNED_OVERFLOW WEBP_INLINE int VP8LHashPix(uint32_t argb,int shift)","Funname":"VP8LHashPix","Returntype":"WEBP_UBSAN_IGNORE_UNSIGNED_OVERFLOW WEBP_INLINE int","Args":"uint32_t argb,int shift"}],"Records":[{"Name":"macro","Fields":["WEBP_UTILS_COLOR_CACHE_UTILS_H_"]}]}
{"Filepath":"src/3rdparty/libwebp/src/utils/endian_inl_utils.h","Functions":[{"Uniquefunname":"WEBP_INLINE uint16_t BSwap16(uint16_t x)","Funname":"BSwap16","Returntype":"WEBP_INLINE uint16_t","Args":"uint16_t x"},{"Uniquefunname":"WEBP_INLINE uint32_t BSwap32(uint32_t x)","Funname":"BSwap32","Returntype":"WEBP_INLINE uint32_t","Args":"uint32_t x"},{"Uniquefunname":"WEBP_INLINE uint64_t BSwap64(uint64_t x)","Funname":"BSwap64","Returntype":"WEBP_INLINE uint64_t","Args":"uint64_t x"}],"Records":[{"Name":"macro","Fields":["HAVE_BUILTIN_BSWAP16","HAVE_BUILTIN_BSWAP32","HAVE_BUILTIN_BSWAP64","HToLE16","HToLE16(x)","HToLE32","HToLE32(x)","WEBP_UTILS_ENDIAN_INL_UTILS_H_"]}]}
{"Filepath":"src/3rdparty/libwebp/src/utils/filters_utils.h","Functions":[{"Uniquefunname":"WEBP_FILTER_TYPE WebPEstimateBestFilter(const uint8_t * data,int width,int height,int stride)","Funname":"WebPEstimateBestFilter","Returntype":"WEBP_FILTER_TYPE","Args":"const uint8_t * data,int width,int height,int stride"}],"Records":[{"Name":"macro","Fields":["WEBP_UTILS_FILTERS_UTILS_H_"]}]}
{"Filepath":"src/3rdparty/libwebp/src/utils/huffman_encode_utils.h","Functions":[{"Uniquefunname":"int VP8LCreateCompressedHuffmanTree(const HuffmanTreeCode * const tree,HuffmanTreeToken * tokens,int max_tokens)","Funname":"VP8LCreateCompressedHuffmanTree","Returntype":"int","Args":"const HuffmanTreeCode * const tree,HuffmanTreeToken * tokens,int max_tokens"},{"Uniquefunname":"void VP8LCreateHuffmanTree(uint32_t * const histogram,int tree_depth_limit,uint8_t * const buf_rle,HuffmanTree * const huff_tree,HuffmanTreeCode * const tree)","Funname":"VP8LCreateHuffmanTree","Returntype":"void","Args":"uint32_t * const histogram,int tree_depth_limit,uint8_t * const buf_rle,HuffmanTree * const huff_tree,HuffmanTreeCode * const tree"}],"Records":[{"Name":"macro","Fields":["WEBP_UTILS_HUFFMAN_ENCODE_UTILS_H_"]}]}
{"Filepath":"src/3rdparty/libwebp/src/utils/huffman_utils.h","Functions":[{"Uniquefunname":"int VP8LBuildHuffmanTable(HuffmanCode * const root_table,int root_bits,const int code_lengths[],int code_lengths_size)","Funname":"VP8LBuildHuffmanTable","Returntype":"int","Args":"HuffmanCode * const root_table,int root_bits,const int code_lengths[],int code_lengths_size"},{"Uniquefunname":"void VP8LHtreeGroupsFree(HTreeGroup * const htree_groups)","Funname":"VP8LHtreeGroupsFree","Returntype":"void","Args":"HTreeGroup * const htree_groups"},{"Uniquefunname":"HTreeGroup * VP8LHtreeGroupsNew(int num_htree_groups)","Funname":"VP8LHtreeGroupsNew","Returntype":"HTreeGroup *","Args":"int num_htree_groups"}],"Records":[{"Name":"struct:HTreeGroup","Fields":["HuffmanCode * [] HTreeGroup::htrees","int HTreeGroup::is_trivial_code","int HTreeGroup::is_trivial_literal","uint32_t HTreeGroup::literal_arb","HuffmanCode32[] HTreeGroup::packed_table","int HTreeGroup::use_packed_table"]},{"Name":"macro","Fields":["HUFFMAN_PACKED_BITS","HUFFMAN_PACKED_TABLE_SIZE","HUFFMAN_TABLE_BITS","HUFFMAN_TABLE_MASK","LENGTHS_TABLE_BITS","LENGTHS_TABLE_MASK","WEBP_UTILS_HUFFMAN_UTILS_H_"]}]}
{"Filepath":"src/3rdparty/libwebp/src/utils/quant_levels_dec_utils.h","Functions":[{"Uniquefunname":"int WebPDequantizeLevels(uint8_t * const data,int width,int height,int stride,int strength)","Funname":"WebPDequantizeLevels","Returntype":"int","Args":"uint8_t * const data,int width,int height,int stride,int strength"}],"Records":[{"Name":"macro","Fields":["WEBP_UTILS_QUANT_LEVELS_DEC_UTILS_H_"]}]}
{"Filepath":"src/3rdparty/libwebp/src/utils/quant_levels_utils.h","Functions":[{"Uniquefunname":"int QuantizeLevels(uint8_t * const data,int width,int height,int num_levels,uint64_t * const sse)","Funname":"QuantizeLevels","Returntype":"int","Args":"uint8_t * const data,int width,int height,int num_levels,uint64_t * const sse"}],"Records":[{"Name":"macro","Fields":["WEBP_UTILS_QUANT_LEVELS_UTILS_H_"]}]}
{"Filepath":"src/3rdparty/libwebp/src/utils/random_utils.h","Functions":[{"Uniquefunname":"void VP8InitRandom(VP8Random * const rg,float dithering)","Funname":"VP8InitRandom","Returntype":"void","Args":"VP8Random * const rg,float dithering"},{"Uniquefunname":"WEBP_INLINE int VP8RandomBits(VP8Random * const rg,int num_bits)","Funname":"VP8RandomBits","Returntype":"WEBP_INLINE int","Args":"VP8Random * const rg,int num_bits"},{"Uniquefunname":"WEBP_INLINE int VP8RandomBits2(VP8Random * const rg,int num_bits,int amp)","Funname":"VP8RandomBits2","Returntype":"WEBP_INLINE int","Args":"VP8Random * const rg,int num_bits,int amp"}],"Records":[{"Name":"macro","Fields":["VP8_RANDOM_DITHER_FIX","VP8_RANDOM_TABLE_SIZE","WEBP_UTILS_RANDOM_UTILS_H_"]}]}
{"Filepath":"src/3rdparty/libwebp/src/utils/rescaler_utils.h","Functions":[{"Uniquefunname":"int WebPRescaleNeededLines(const WebPRescaler * const rescaler,int max_num_lines)","Funname":"WebPRescaleNeededLines","Returntype":"int","Args":"const WebPRescaler * const rescaler,int max_num_lines"},{"Uniquefunname":"int WebPRescalerExport(WebPRescaler * const rescaler)","Funname":"WebPRescalerExport","Returntype":"int","Args":"WebPRescaler * const rescaler"},{"Uniquefunname":"int WebPRescalerGetScaledDimensions(int src_width,int src_height,int * const scaled_width,int * const scaled_height)","Funname":"WebPRescalerGetScaledDimensions","Returntype":"int","Args":"int src_width,int src_height,int * const scaled_width,int * const scaled_height"},{"Uniquefunname":"WEBP_INLINE int WebPRescalerHasPendingOutput(const WebPRescaler * const rescaler)","Funname":"WebPRescalerHasPendingOutput","Returntype":"WEBP_INLINE int","Args":"const WebPRescaler * const rescaler"},{"Uniquefunname":"int WebPRescalerImport(WebPRescaler * const rescaler,int num_rows,const uint8_t * src,int src_stride)","Funname":"WebPRescalerImport","Returntype":"int","Args":"WebPRescaler * const rescaler,int num_rows,const uint8_t * src,int src_stride"},{"Uniquefunname":"void WebPRescalerInit(WebPRescaler * const rescaler,int src_width,int src_height,uint8_t * const dst,int dst_width,int dst_height,int dst_stride,int num_channels,rescaler_t * const work)","Funname":"WebPRescalerInit","Returntype":"void","Args":"WebPRescaler * const rescaler,int src_width,int src_height,uint8_t * const dst,int dst_width,int dst_height,int dst_stride,int num_channels,rescaler_t * const work"},{"Uniquefunname":"WEBP_INLINE int WebPRescalerInputDone(const WebPRescaler * const rescaler)","Funname":"WebPRescalerInputDone","Returntype":"WEBP_INLINE int","Args":"const WebPRescaler * const rescaler"},{"Uniquefunname":"WEBP_INLINE int WebPRescalerOutputDone(const WebPRescaler * const rescaler)","Funname":"WebPRescalerOutputDone","Returntype":"WEBP_INLINE int","Args":"const WebPRescaler * const rescaler"}],"Records":[{"Name":"macro","Fields":["WEBP_RESCALER_FRAC(x,y)","WEBP_RESCALER_ONE","WEBP_RESCALER_RFIX","WEBP_UTILS_RESCALER_UTILS_H_"]},{"Name":"struct:WebPRescaler","Fields":["uint8_t * WebPRescaler::dst","int WebPRescaler::dst_height","int WebPRescaler::dst_stride","int WebPRescaler::dst_width","int WebPRescaler::dst_y","rescaler_t ** WebPRescaler::frow","uint32_t WebPRescaler::fx_scale","uint32_t WebPRescaler::fxy_scale","uint32_t WebPRescaler::fy_scale","rescaler_t * WebPRescaler::irow","int WebPRescaler::num_channels","int WebPRescaler::src_height","int WebPRescaler::src_width","int WebPRescaler::src_y","int WebPRescaler::x_add","int WebPRescaler::x_expand","int WebPRescaler::x_sub","int WebPRescaler::y_accum","int WebPRescaler::y_add","int WebPRescaler::y_expand","int WebPRescaler::y_sub"]}]}
{"Filepath":"src/3rdparty/libwebp/src/utils/thread_utils.h","Functions":[{"Uniquefunname":"WEBP_EXTERN const WebPWorkerInterface * WebPGetWorkerInterface(void)","Funname":"WebPGetWorkerInterface","Returntype":"WEBP_EXTERN const WebPWorkerInterface *","Args":"void"},{"Uniquefunname":"WEBP_EXTERN int WebPSetWorkerInterface(const WebPWorkerInterface * const winterface)","Funname":"WebPSetWorkerInterface","Returntype":"WEBP_EXTERN int","Args":"const WebPWorkerInterface * const winterface"}],"Records":[{"Name":"macro","Fields":["WEBP_UTILS_THREAD_UTILS_H_"]}]}
{"Filepath":"src/3rdparty/libwebp/src/utils/utils.h","Functions":[{"Uniquefunname":"WEBP_INLINE int BitsLog2Floor(uint32_t n)","Funname":"BitsLog2Floor","Returntype":"WEBP_INLINE int","Args":"uint32_t n"},{"Uniquefunname":"WEBP_INLINE int BitsLog2Floor(uint32_t n)","Funname":"BitsLog2Floor","Returntype":"WEBP_INLINE int","Args":"uint32_t n"},{"Uniquefunname":"WEBP_INLINE int GetLE16(const uint8_t * const data)","Funname":"GetLE16","Returntype":"WEBP_INLINE int","Args":"const uint8_t * const data"},{"Uniquefunname":"WEBP_INLINE int GetLE24(const uint8_t * const data)","Funname":"GetLE24","Returntype":"WEBP_INLINE int","Args":"const uint8_t * const data"},{"Uniquefunname":"WEBP_INLINE uint32_t GetLE32(const uint8_t * const data)","Funname":"GetLE32","Returntype":"WEBP_INLINE uint32_t","Args":"const uint8_t * const data"},{"Uniquefunname":"WEBP_INLINE void PutLE16(uint8_t * const data,int val)","Funname":"PutLE16","Returntype":"WEBP_INLINE void","Args":"uint8_t * const data,int val"},{"Uniquefunname":"WEBP_INLINE void PutLE24(uint8_t * const data,int val)","Funname":"PutLE24","Returntype":"WEBP_INLINE void","Args":"uint8_t * const data,int val"},{"Uniquefunname":"WEBP_INLINE void PutLE32(uint8_t * const data,uint32_t val)","Funname":"PutLE32","Returntype":"WEBP_INLINE void","Args":"uint8_t * const data,uint32_t val"},{"Uniquefunname":"WEBP_EXTERN void WebPCopyPixels(const struct WebPPicture * const src,struct WebPPicture * const dst)","Funname":"WebPCopyPixels","Returntype":"WEBP_EXTERN void","Args":"const struct WebPPicture * const src,struct WebPPicture * const dst"},{"Uniquefunname":"WEBP_EXTERN void WebPCopyPlane(const uint8_t * src,int src_stride,uint8_t * dst,int dst_stride,int width,int height)","Funname":"WebPCopyPlane","Returntype":"WEBP_EXTERN void","Args":"const uint8_t * src,int src_stride,uint8_t * dst,int dst_stride,int width,int height"},{"Uniquefunname":"WEBP_EXTERN int WebPGetColorPalette(const struct WebPPicture * const pic,uint32_t * const palette)","Funname":"WebPGetColorPalette","Returntype":"WEBP_EXTERN int","Args":"const struct WebPPicture * const pic,uint32_t * const palette"},{"Uniquefunname":"WEBP_INLINE int WebPLog2FloorC(uint32_t n)","Funname":"WebPLog2FloorC","Returntype":"WEBP_INLINE int","Args":"uint32_t n"},{"Uniquefunname":"WEBP_INLINE uint32_t WebPMemToUint32(const uint8_t * const ptr)","Funname":"WebPMemToUint32","Returntype":"WEBP_INLINE uint32_t","Args":"const uint8_t * const ptr"},{"Uniquefunname":"WEBP_EXTERN void * WebPSafeCalloc(uint64_t nmemb,size_t size)","Funname":"WebPSafeCalloc","Returntype":"WEBP_EXTERN void *","Args":"uint64_t nmemb,size_t size"},{"Uniquefunname":"WEBP_EXTERN void WebPSafeFree(void * const ptr)","Funname":"WebPSafeFree","Returntype":"WEBP_EXTERN void","Args":"void * const ptr"},{"Uniquefunname":"WEBP_EXTERN void * WebPSafeMalloc(uint64_t nmemb,size_t size)","Funname":"WebPSafeMalloc","Returntype":"WEBP_EXTERN void *","Args":"uint64_t nmemb,size_t size"},{"Uniquefunname":"WEBP_INLINE void WebPUint32ToMem(uint8_t * const ptr,uint32_t val)","Funname":"WebPUint32ToMem","Returntype":"WEBP_INLINE void","Args":"uint8_t * const ptr,uint32_t val"}],"Records":[{"Name":"macro","Fields":["WEBP_ALIGN(PTR)","WEBP_ALIGN_CST","WEBP_MAX_ALLOCABLE_MEMORY","WEBP_NEED_LOG_TABLE_8BIT","WEBP_UTILS_UTILS_H_"]}]}
{"Filepath":"src/3rdparty/libwebp/src/webp/config.h","Functions":null,"Records":[{"Name":"macro","Fields":["PACKAGE","PACKAGE_BUGREPORT","PACKAGE_NAME","PACKAGE_STRING","PACKAGE_TARNAME","PACKAGE_URL","PACKAGE_VERSION","VERSION","WEBP_USE_THREAD","WORDS_BIGENDIAN"]}]}
{"Filepath":"src/3rdparty/libwebp/src/webp/decode.h","Functions":[{"Uniquefunname":"WEBP_EXTERN VP8StatusCode WebPDecode(const uint8_t * data,size_t data_size,WebPDecoderConfig * config)","Funname":"WebPDecode","Returntype":"WEBP_EXTERN VP8StatusCode","Args":"const uint8_t * data,size_t data_size,WebPDecoderConfig * config"},{"Uniquefunname":"WEBP_EXTERN uint8_t * WebPDecodeARGB(const uint8_t * data,size_t data_size,int * width,int * height)","Funname":"WebPDecodeARGB","Returntype":"WEBP_EXTERN uint8_t *","Args":"const uint8_t * data,size_t data_size,int * width,int * height"},{"Uniquefunname":"WEBP_EXTERN uint8_t * WebPDecodeARGBInto(const uint8_t * data,size_t data_size,uint8_t * output_buffer,size_t output_buffer_size,int output_stride)","Funname":"WebPDecodeARGBInto","Returntype":"WEBP_EXTERN uint8_t *","Args":"const uint8_t * data,size_t data_size,uint8_t * output_buffer,size_t output_buffer_size,int output_stride"},{"Uniquefunname":"WEBP_EXTERN uint8_t * WebPDecodeBGR(const uint8_t * data,size_t data_size,int * width,int * height)","Funname":"WebPDecodeBGR","Returntype":"WEBP_EXTERN uint8_t *","Args":"const uint8_t * data,size_t data_size,int * width,int * height"},{"Uniquefunname":"WEBP_EXTERN uint8_t * WebPDecodeBGRA(const uint8_t * data,size_t data_size,int * width,int * height)","Funname":"WebPDecodeBGRA","Returntype":"WEBP_EXTERN uint8_t *","Args":"const uint8_t * data,size_t data_size,int * width,int * height"},{"Uniquefunname":"WEBP_EXTERN uint8_t * WebPDecodeBGRAInto(const uint8_t * data,size_t data_size,uint8_t * output_buffer,size_t output_buffer_size,int output_stride)","Funname":"WebPDecodeBGRAInto","Returntype":"WEBP_EXTERN uint8_t *","Args":"const uint8_t * data,size_t data_size,uint8_t * output_buffer,size_t output_buffer_size,int output_stride"},{"Uniquefunname":"WEBP_EXTERN uint8_t * WebPDecodeBGRInto(const uint8_t * data,size_t data_size,uint8_t * output_buffer,size_t output_buffer_size,int output_stride)","Funname":"WebPDecodeBGRInto","Returntype":"WEBP_EXTERN uint8_t *","Args":"const uint8_t * data,size_t data_size,uint8_t * output_buffer,size_t output_buffer_size,int output_stride"},{"Uniquefunname":"WEBP_EXTERN uint8_t * WebPDecodeRGB(const uint8_t * data,size_t data_size,int * width,int * height)","Funname":"WebPDecodeRGB","Returntype":"WEBP_EXTERN uint8_t *","Args":"const uint8_t * data,size_t data_size,int * width,int * height"},{"Uniquefunname":"WEBP_EXTERN uint8_t * WebPDecodeRGBA(const uint8_t * data,size_t data_size,int * width,int * height)","Funname":"WebPDecodeRGBA","Returntype":"WEBP_EXTERN uint8_t *","Args":"const uint8_t * data,size_t data_size,int * width,int * height"},{"Uniquefunname":"WEBP_EXTERN uint8_t * WebPDecodeRGBAInto(const uint8_t * data,size_t data_size,uint8_t * output_buffer,size_t output_buffer_size,int output_stride)","Funname":"WebPDecodeRGBAInto","Returntype":"WEBP_EXTERN uint8_t *","Args":"const uint8_t * data,size_t data_size,uint8_t * output_buffer,size_t output_buffer_size,int output_stride"},{"Uniquefunname":"WEBP_EXTERN uint8_t * WebPDecodeRGBInto(const uint8_t * data,size_t data_size,uint8_t * output_buffer,size_t output_buffer_size,int output_stride)","Funname":"WebPDecodeRGBInto","Returntype":"WEBP_EXTERN uint8_t *","Args":"const uint8_t * data,size_t data_size,uint8_t * output_buffer,size_t output_buffer_size,int output_stride"},{"Uniquefunname":"WEBP_EXTERN uint8_t * WebPDecodeYUV(const uint8_t * data,size_t data_size,int * width,int * height,uint8_t ** u,uint8_t ** v,int * stride,int * uv_stride)","Funname":"WebPDecodeYUV","Returntype":"WEBP_EXTERN uint8_t *","Args":"const uint8_t * data,size_t data_size,int * width,int * height,uint8_t ** u,uint8_t ** v,int * stride,int * uv_stride"},{"Uniquefunname":"WEBP_EXTERN uint8_t * WebPDecodeYUVInto(const uint8_t * data,size_t data_size,uint8_t * luma,size_t luma_size,int luma_stride,uint8_t * u,size_t u_size,int u_stride,uint8_t * v,size_t v_size,int v_stride)","Funname":"WebPDecodeYUVInto","Returntype":"WEBP_EXTERN uint8_t *","Args":"const uint8_t * data,size_t data_size,uint8_t * luma,size_t luma_size,int luma_stride,uint8_t * u,size_t u_size,int u_stride,uint8_t * v,size_t v_size,int v_stride"},{"Uniquefunname":"WEBP_EXTERN void WebPFreeDecBuffer(WebPDecBuffer * buffer)","Funname":"WebPFreeDecBuffer","Returntype":"WEBP_EXTERN void","Args":"WebPDecBuffer * buffer"},{"Uniquefunname":"WEBP_EXTERN int WebPGetDecoderVersion(void)","Funname":"WebPGetDecoderVersion","Returntype":"WEBP_EXTERN int","Args":"void"},{"Uniquefunname":"WEBP_INLINE VP8StatusCode WebPGetFeatures(const uint8_t * data,size_t data_size,WebPBitstreamFeatures * features)","Funname":"WebPGetFeatures","Returntype":"WEBP_INLINE VP8StatusCode","Args":"const uint8_t * data,size_t data_size,WebPBitstreamFeatures * features"},{"Uniquefunname":"WEBP_EXTERN VP8StatusCode WebPGetFeaturesInternal(const uint8_t *,size_t,WebPBitstreamFeatures *,int)","Funname":"WebPGetFeaturesInternal","Returntype":"WEBP_EXTERN VP8StatusCode","Args":"const uint8_t *,size_t,WebPBitstreamFeatures *,int"},{"Uniquefunname":"WEBP_EXTERN int WebPGetInfo(const uint8_t * data,size_t data_size,int * width,int * height)","Funname":"WebPGetInfo","Returntype":"WEBP_EXTERN int","Args":"const uint8_t * data,size_t data_size,int * width,int * height"},{"Uniquefunname":"WEBP_EXTERN VP8StatusCode WebPIAppend(WebPIDecoder * idec,const uint8_t * data,size_t data_size)","Funname":"WebPIAppend","Returntype":"WEBP_EXTERN VP8StatusCode","Args":"WebPIDecoder * idec,const uint8_t * data,size_t data_size"},{"Uniquefunname":"WEBP_EXTERN uint8_t * WebPIDecGetRGB(const WebPIDecoder * idec,int * last_y,int * width,int * height,int * stride)","Funname":"WebPIDecGetRGB","Returntype":"WEBP_EXTERN uint8_t *","Args":"const WebPIDecoder * idec,int * last_y,int * width,int * height,int * stride"},{"Uniquefunname":"WEBP_INLINE uint8_t * WebPIDecGetYUV(const WebPIDecoder * idec,int * last_y,uint8_t ** u,uint8_t ** v,int * width,int * height,int * stride,int * uv_stride)","Funname":"WebPIDecGetYUV","Returntype":"WEBP_INLINE uint8_t *","Args":"const WebPIDecoder * idec,int * last_y,uint8_t ** u,uint8_t ** v,int * width,int * height,int * stride,int * uv_stride"},{"Uniquefunname":"WEBP_EXTERN uint8_t * WebPIDecGetYUVA(const WebPIDecoder * idec,int * last_y,uint8_t ** u,uint8_t ** v,uint8_t ** a,int * width,int * height,int * stride,int * uv_stride,int * a_stride)","Funname":"WebPIDecGetYUVA","Returntype":"WEBP_EXTERN uint8_t *","Args":"const WebPIDecoder * idec,int * last_y,uint8_t ** u,uint8_t ** v,uint8_t ** a,int * width,int * height,int * stride,int * uv_stride,int * a_stride"},{"Uniquefunname":"WEBP_EXTERN WebPIDecoder * WebPIDecode(const uint8_t * data,size_t data_size,WebPDecoderConfig * config)","Funname":"WebPIDecode","Returntype":"WEBP_EXTERN WebPIDecoder *","Args":"const uint8_t * data,size_t data_size,WebPDecoderConfig * config"},{"Uniquefunname":"WEBP_EXTERN const WebPDecBuffer * WebPIDecodedArea(const WebPIDecoder * idec,int * left,int * top,int * width,int * height)","Funname":"WebPIDecodedArea","Returntype":"WEBP_EXTERN const WebPDecBuffer *","Args":"const WebPIDecoder * idec,int * left,int * top,int * width,int * height"},{"Uniquefunname":"WEBP_EXTERN void WebPIDelete(WebPIDecoder * idec)","Funname":"WebPIDelete","Returntype":"WEBP_EXTERN void","Args":"WebPIDecoder * idec"},{"Uniquefunname":"WEBP_EXTERN WebPIDecoder * WebPINewDecoder(WebPDecBuffer * output_buffer)","Funname":"WebPINewDecoder","Returntype":"WEBP_EXTERN WebPIDecoder *","Args":"WebPDecBuffer * output_buffer"},{"Uniquefunname":"WEBP_EXTERN WebPIDecoder * WebPINewRGB(WEBP_CSP_MODE csp,uint8_t * output_buffer,size_t output_buffer_size,int output_stride)","Funname":"WebPINewRGB","Returntype":"WEBP_EXTERN WebPIDecoder *","Args":"WEBP_CSP_MODE csp,uint8_t * output_buffer,size_t output_buffer_size,int output_stride"},{"Uniquefunname":"WEBP_EXTERN WebPIDecoder * WebPINewYUV(uint8_t * luma,size_t luma_size,int luma_stride,uint8_t * u,size_t u_size,int u_stride,uint8_t * v,size_t v_size,int v_stride)","Funname":"WebPINewYUV","Returntype":"WEBP_EXTERN WebPIDecoder *","Args":"uint8_t * luma,size_t luma_size,int luma_stride,uint8_t * u,size_t u_size,int u_stride,uint8_t * v,size_t v_size,int v_stride"},{"Uniquefunname":"WEBP_EXTERN WebPIDecoder * WebPINewYUVA(uint8_t * luma,size_t luma_size,int luma_stride,uint8_t * u,size_t u_size,int u_stride,uint8_t * v,size_t v_size,int v_stride,uint8_t * a,size_t a_size,int a_stride)","Funname":"WebPINewYUVA","Returntype":"WEBP_EXTERN WebPIDecoder *","Args":"uint8_t * luma,size_t luma_size,int luma_stride,uint8_t * u,size_t u_size,int u_stride,uint8_t * v,size_t v_size,int v_stride,uint8_t * a,size_t a_size,int a_stride"},{"Uniquefunname":"WEBP_EXTERN VP8StatusCode WebPIUpdate(WebPIDecoder * idec,const uint8_t * data,size_t data_size)","Funname":"WebPIUpdate","Returntype":"WEBP_EXTERN VP8StatusCode","Args":"WebPIDecoder * idec,const uint8_t * data,size_t data_size"},{"Uniquefunname":"WEBP_INLINE int WebPInitDecBuffer(WebPDecBuffer * buffer)","Funname":"WebPInitDecBuffer","Returntype":"WEBP_INLINE int","Args":"WebPDecBuffer * buffer"},{"Uniquefunname":"WEBP_EXTERN int WebPInitDecBufferInternal(WebPDecBuffer *,int)","Funname":"WebPInitDecBufferInternal","Returntype":"WEBP_EXTERN int","Args":"WebPDecBuffer *,int"},{"Uniquefunname":"WEBP_INLINE int WebPInitDecoderConfig(WebPDecoderConfig * config)","Funname":"WebPInitDecoderConfig","Returntype":"WEBP_INLINE int","Args":"WebPDecoderConfig * config"},{"Uniquefunname":"WEBP_EXTERN int WebPInitDecoderConfigInternal(WebPDecoderConfig *,int)","Funname":"WebPInitDecoderConfigInternal","Returntype":"WEBP_EXTERN int","Args":"WebPDecoderConfig *,int"},{"Uniquefunname":"WEBP_INLINE int WebPIsAlphaMode(WEBP_CSP_MODE mode)","Funname":"WebPIsAlphaMode","Returntype":"WEBP_INLINE int","Args":"WEBP_CSP_MODE mode"},{"Uniquefunname":"WEBP_INLINE int WebPIsPremultipliedMode(WEBP_CSP_MODE mode)","Funname":"WebPIsPremultipliedMode","Returntype":"WEBP_INLINE int","Args":"WEBP_CSP_MODE mode"},{"Uniquefunname":"WEBP_INLINE int WebPIsRGBMode(WEBP_CSP_MODE mode)","Funname":"WebPIsRGBMode","Returntype":"WEBP_INLINE int","Args":"WEBP_CSP_MODE mode"}],"Records":[{"Name":"enum:WEBP_CSP_MODE","Fields":["MODE_ARGB","MODE_Argb","MODE_BGR","MODE_BGRA","MODE_LAST","MODE_RGB","MODE_RGBA","MODE_RGBA_4444","MODE_RGB_565","MODE_YUV","MODE_YUVA","MODE_bgrA","MODE_rgbA","MODE_rgbA_4444"]},{"Name":"enum:VP8StatusCode","Fields":["VP8_STATUS_BITSTREAM_ERROR","VP8_STATUS_INVALID_PARAM","VP8_STATUS_NOT_ENOUGH_DATA","VP8_STATUS_OK","VP8_STATUS_OUT_OF_MEMORY","VP8_STATUS_SUSPENDED","VP8_STATUS_UNSUPPORTED_FEATURE","VP8_STATUS_USER_ABORT"]},{"Name":"macro","Fields":["WEBP_DECODER_ABI_VERSION","WEBP_WEBP_DECODE_H_"]},{"Name":"struct:WebPBitstreamFeatures","Fields":["int WebPBitstreamFeatures::format","int WebPBitstreamFeatures::has_alpha","int WebPBitstreamFeatures::has_animation","int WebPBitstreamFeatures::height","uint32_t[5] WebPBitstreamFeatures::pad","int WebPBitstreamFeatures::width"]},{"Name":"struct:WebPDecBuffer","Fields":["WEBP_CSP_MODE WebPDecBuffer::colorspace","int WebPDecBuffer::height","int WebPDecBuffer::is_external_memory","uint32_t[4] WebPDecBuffer::pad","uint8_t * WebPDecBuffer::private_memory","WebPDecBuffer::u","int WebPDecBuffer::width"]},{"Name":"struct:WebPDecoderConfig","Fields":["WebPBitstreamFeatures WebPDecoderConfig::input","WebPDecoderOptions WebPDecoderConfig::options","WebPDecBuffer WebPDecoderConfig::output"]},{"Name":"struct:WebPDecoderOptions","Fields":["int WebPDecoderOptions::alpha_dithering_strength","int WebPDecoderOptions::bypass_filtering","int WebPDecoderOptions::crop_height","int WebPDecoderOptions::crop_left","int WebPDecoderOptions::crop_top","int WebPDecoderOptions::crop_width","int WebPDecoderOptions::dithering_strength","int WebPDecoderOptions::flip","int WebPDecoderOptions::no_fancy_upsampling","uint32_t[5] WebPDecoderOptions::pad","int WebPDecoderOptions::scaled_height","int WebPDecoderOptions::scaled_width","int WebPDecoderOptions::use_cropping","int WebPDecoderOptions::use_scaling","int WebPDecoderOptions::use_threads"]},{"Name":"struct:WebPRGBABuffer","Fields":["uint8_t * WebPRGBABuffer::rgba","size_t WebPRGBABuffer::size","int WebPRGBABuffer::stride"]},{"Name":"struct:WebPYUVABuffer","Fields":["uint8_t **** WebPYUVABuffer::a","size_t WebPYUVABuffer::a_size","int WebPYUVABuffer::a_stride","uint8_t ** WebPYUVABuffer::u","size_t WebPYUVABuffer::u_size","int WebPYUVABuffer::u_stride","uint8_t *** WebPYUVABuffer::v","size_t WebPYUVABuffer::v_size","int WebPYUVABuffer::v_stride","uint8_t * WebPYUVABuffer::y","size_t WebPYUVABuffer::y_size","int WebPYUVABuffer::y_stride"]}]}
{"Filepath":"src/3rdparty/libwebp/src/webp/demux.h","Functions":[{"Uniquefunname":"WEBP_EXTERN void WebPAnimDecoderDelete(WebPAnimDecoder * dec)","Funname":"WebPAnimDecoderDelete","Returntype":"WEBP_EXTERN void","Args":"WebPAnimDecoder * dec"},{"Uniquefunname":"WEBP_EXTERN const WebPDemuxer * WebPAnimDecoderGetDemuxer(const WebPAnimDecoder * dec)","Funname":"WebPAnimDecoderGetDemuxer","Returntype":"WEBP_EXTERN const WebPDemuxer *","Args":"const WebPAnimDecoder * dec"},{"Uniquefunname":"WEBP_EXTERN int WebPAnimDecoderGetInfo(const WebPAnimDecoder * dec,WebPAnimInfo * info)","Funname":"WebPAnimDecoderGetInfo","Returntype":"WEBP_EXTERN int","Args":"const WebPAnimDecoder * dec,WebPAnimInfo * info"},{"Uniquefunname":"WEBP_EXTERN int WebPAnimDecoderGetNext(WebPAnimDecoder * dec,uint8_t ** buf,int * timestamp)","Funname":"WebPAnimDecoderGetNext","Returntype":"WEBP_EXTERN int","Args":"WebPAnimDecoder * dec,uint8_t ** buf,int * timestamp"},{"Uniquefunname":"WEBP_EXTERN int WebPAnimDecoderHasMoreFrames(const WebPAnimDecoder * dec)","Funname":"WebPAnimDecoderHasMoreFrames","Returntype":"WEBP_EXTERN int","Args":"const WebPAnimDecoder * dec"},{"Uniquefunname":"WEBP_INLINE WebPAnimDecoder * WebPAnimDecoderNew(const WebPData * webp_data,const WebPAnimDecoderOptions * dec_options)","Funname":"WebPAnimDecoderNew","Returntype":"WEBP_INLINE WebPAnimDecoder *","Args":"const WebPData * webp_data,const WebPAnimDecoderOptions * dec_options"},{"Uniquefunname":"WEBP_EXTERN WebPAnimDecoder * WebPAnimDecoderNewInternal(const WebPData *,const WebPAnimDecoderOptions *,int)","Funname":"WebPAnimDecoderNewInternal","Returntype":"WEBP_EXTERN WebPAnimDecoder *","Args":"const WebPData *,const WebPAnimDecoderOptions *,int"},{"Uniquefunname":"WEBP_INLINE int WebPAnimDecoderOptionsInit(WebPAnimDecoderOptions * dec_options)","Funname":"WebPAnimDecoderOptionsInit","Returntype":"WEBP_INLINE int","Args":"WebPAnimDecoderOptions * dec_options"},{"Uniquefunname":"WEBP_EXTERN int WebPAnimDecoderOptionsInitInternal(WebPAnimDecoderOptions *,int)","Funname":"WebPAnimDecoderOptionsInitInternal","Returntype":"WEBP_EXTERN int","Args":"WebPAnimDecoderOptions *,int"},{"Uniquefunname":"WEBP_EXTERN void WebPAnimDecoderReset(WebPAnimDecoder * dec)","Funname":"WebPAnimDecoderReset","Returntype":"WEBP_EXTERN void","Args":"WebPAnimDecoder * dec"},{"Uniquefunname":"WEBP_INLINE WebPDemuxer * WebPDemux(const WebPData * data)","Funname":"WebPDemux","Returntype":"WEBP_INLINE WebPDemuxer *","Args":"const WebPData * data"},{"Uniquefunname":"WEBP_EXTERN void WebPDemuxDelete(WebPDemuxer * dmux)","Funname":"WebPDemuxDelete","Returntype":"WEBP_EXTERN void","Args":"WebPDemuxer * dmux"},{"Uniquefunname":"WEBP_EXTERN int WebPDemuxGetChunk(const WebPDemuxer * dmux,const char fourcc[4],int chunk_number,WebPChunkIterator * iter)","Funname":"WebPDemuxGetChunk","Returntype":"WEBP_EXTERN int","Args":"const WebPDemuxer * dmux,const char fourcc[4],int chunk_number,WebPChunkIterator * iter"},{"Uniquefunname":"WEBP_EXTERN int WebPDemuxGetFrame(const WebPDemuxer * dmux,int frame_number,WebPIterator * iter)","Funname":"WebPDemuxGetFrame","Returntype":"WEBP_EXTERN int","Args":"const WebPDemuxer * dmux,int frame_number,WebPIterator * iter"},{"Uniquefunname":"WEBP_EXTERN uint32_t WebPDemuxGetI(const WebPDemuxer * dmux,WebPFormatFeature feature)","Funname":"WebPDemuxGetI","Returntype":"WEBP_EXTERN uint32_t","Args":"const WebPDemuxer * dmux,WebPFormatFeature feature"},{"Uniquefunname":"WEBP_EXTERN WebPDemuxer * WebPDemuxInternal(const WebPData *,int,WebPDemuxState *,int)","Funname":"WebPDemuxInternal","Returntype":"WEBP_EXTERN WebPDemuxer *","Args":"const WebPData *,int,WebPDemuxState *,int"},{"Uniquefunname":"WEBP_EXTERN int WebPDemuxNextChunk(WebPChunkIterator * iter)","Funname":"WebPDemuxNextChunk","Returntype":"WEBP_EXTERN int","Args":"WebPChunkIterator * iter"},{"Uniquefunname":"WEBP_EXTERN int WebPDemuxNextFrame(WebPIterator * iter)","Funname":"WebPDemuxNextFrame","Returntype":"WEBP_EXTERN int","Args":"WebPIterator * iter"},{"Uniquefunname":"WEBP_INLINE WebPDemuxer * WebPDemuxPartial(const WebPData * data,WebPDemuxState * state)","Funname":"WebPDemuxPartial","Returntype":"WEBP_INLINE WebPDemuxer *","Args":"const WebPData * data,WebPDemuxState * state"},{"Uniquefunname":"WEBP_EXTERN int WebPDemuxPrevChunk(WebPChunkIterator * iter)","Funname":"WebPDemuxPrevChunk","Returntype":"WEBP_EXTERN int","Args":"WebPChunkIterator * iter"},{"Uniquefunname":"WEBP_EXTERN int WebPDemuxPrevFrame(WebPIterator * iter)","Funname":"WebPDemuxPrevFrame","Returntype":"WEBP_EXTERN int","Args":"WebPIterator * iter"},{"Uniquefunname":"WEBP_EXTERN void WebPDemuxReleaseChunkIterator(WebPChunkIterator * iter)","Funname":"WebPDemuxReleaseChunkIterator","Returntype":"WEBP_EXTERN void","Args":"WebPChunkIterator * iter"},{"Uniquefunname":"WEBP_EXTERN void WebPDemuxReleaseIterator(WebPIterator * iter)","Funname":"WebPDemuxReleaseIterator","Returntype":"WEBP_EXTERN void","Args":"WebPIterator * iter"},{"Uniquefunname":"WEBP_EXTERN int WebPGetDemuxVersion(void)","Funname":"WebPGetDemuxVersion","Returntype":"WEBP_EXTERN int","Args":"void"}],"Records":[{"Name":"macro","Fields":["WEBP_DEMUX_ABI_VERSION","WEBP_WEBP_DEMUX_H_"]},{"Name":"enum:WebPDemuxState","Fields":["WEBP_DEMUX_DONE","WEBP_DEMUX_PARSED_HEADER","WEBP_DEMUX_PARSE_ERROR","WEBP_DEMUX_PARSING_HEADER"]},{"Name":"enum:WebPFormatFeature","Fields":["WEBP_FF_BACKGROUND_COLOR","WEBP_FF_CANVAS_HEIGHT","WEBP_FF_CANVAS_WIDTH","WEBP_FF_FORMAT_FLAGS","WEBP_FF_FRAME_COUNT","WEBP_FF_LOOP_COUNT"]},{"Name":"struct:WebPAnimDecoderOptions","Fields":["WEBP_CSP_MODE WebPAnimDecoderOptions::color_mode","uint32_t[7] WebPAnimDecoderOptions::padding","int WebPAnimDecoderOptions::use_threads"]},{"Name":"struct:WebPAnimInfo","Fields":["uint32_t WebPAnimInfo::bgcolor","uint32_t WebPAnimInfo::canvas_height","uint32_t WebPAnimInfo::canvas_width","uint32_t WebPAnimInfo::frame_count","uint32_t WebPAnimInfo::loop_count","uint32_t[4] WebPAnimInfo::pad"]},{"Name":"struct:WebPChunkIterator","Fields":["WebPData WebPChunkIterator::chunk","int WebPChunkIterator::chunk_num","int WebPChunkIterator::num_chunks","uint32_t[6] WebPChunkIterator::pad","void * WebPChunkIterator::private_"]},{"Name":"struct:WebPIterator","Fields":["WebPMuxAnimBlend WebPIterator::blend_method","int WebPIterator::complete","WebPMuxAnimDispose WebPIterator::dispose_method","int WebPIterator::duration","WebPData WebPIterator::fragment","int WebPIterator::frame_num","int WebPIterator::has_alpha","int WebPIterator::height","int WebPIterator::num_frames","uint32_t[2] WebPIterator::pad","void * WebPIterator::private_","int WebPIterator::width","int WebPIterator::x_offset","int WebPIterator::y_offset"]}]}
{"Filepath":"src/3rdparty/libwebp/src/webp/encode.h","Functions":[{"Uniquefunname":"WEBP_EXTERN void WebPBlendAlpha(WebPPicture * pic,uint32_t background_rgb)","Funname":"WebPBlendAlpha","Returntype":"WEBP_EXTERN void","Args":"WebPPicture * pic,uint32_t background_rgb"},{"Uniquefunname":"WEBP_EXTERN void WebPCleanupTransparentArea(WebPPicture * picture)","Funname":"WebPCleanupTransparentArea","Returntype":"WEBP_EXTERN void","Args":"WebPPicture * picture"},{"Uniquefunname":"WEBP_INLINE int WebPConfigInit(WebPConfig * config)","Funname":"WebPConfigInit","Returntype":"WEBP_INLINE int","Args":"WebPConfig * config"},{"Uniquefunname":"WEBP_EXTERN int WebPConfigInitInternal(WebPConfig *,WebPPreset,float,int)","Funname":"WebPConfigInitInternal","Returntype":"WEBP_EXTERN int","Args":"WebPConfig *,WebPPreset,float,int"},{"Uniquefunname":"WEBP_EXTERN int WebPConfigLosslessPreset(WebPConfig * config,int level)","Funname":"WebPConfigLosslessPreset","Returntype":"WEBP_EXTERN int","Args":"WebPConfig * config,int level"},{"Uniquefunname":"WEBP_INLINE int WebPConfigPreset(WebPConfig * config,WebPPreset preset,float quality)","Funname":"WebPConfigPreset","Returntype":"WEBP_INLINE int","Args":"WebPConfig * config,WebPPreset preset,float quality"},{"Uniquefunname":"WEBP_EXTERN int WebPEncode(const WebPConfig * config,WebPPicture * picture)","Funname":"WebPEncode","Returntype":"WEBP_EXTERN int","Args":"const WebPConfig * config,WebPPicture * picture"},{"Uniquefunname":"WEBP_EXTERN size_t WebPEncodeBGR(const uint8_t * bgr,int width,int height,int stride,float quality_factor,uint8_t ** output)","Funname":"WebPEncodeBGR","Returntype":"WEBP_EXTERN size_t","Args":"const uint8_t * bgr,int width,int height,int stride,float quality_factor,uint8_t ** output"},{"Uniquefunname":"WEBP_EXTERN size_t WebPEncodeBGRA(const uint8_t * bgra,int width,int height,int stride,float quality_factor,uint8_t ** output)","Funname":"WebPEncodeBGRA","Returntype":"WEBP_EXTERN size_t","Args":"const uint8_t * bgra,int width,int height,int stride,float quality_factor,uint8_t ** output"},{"Uniquefunname":"WEBP_EXTERN size_t WebPEncodeLosslessBGR(const uint8_t * bgr,int width,int height,int stride,uint8_t ** output)","Funname":"WebPEncodeLosslessBGR","Returntype":"WEBP_EXTERN size_t","Args":"const uint8_t * bgr,int width,int height,int stride,uint8_t ** output"},{"Uniquefunname":"WEBP_EXTERN size_t WebPEncodeLosslessBGRA(const uint8_t * bgra,int width,int height,int stride,uint8_t ** output)","Funname":"WebPEncodeLosslessBGRA","Returntype":"WEBP_EXTERN size_t","Args":"const uint8_t * bgra,int width,int height,int stride,uint8_t ** output"},{"Uniquefunname":"WEBP_EXTERN size_t WebPEncodeLosslessRGB(const uint8_t * rgb,int width,int height,int stride,uint8_t ** output)","Funname":"WebPEncodeLosslessRGB","Returntype":"WEBP_EXTERN size_t","Args":"const uint8_t * rgb,int width,int height,int stride,uint8_t ** output"},{"Uniquefunname":"WEBP_EXTERN size_t WebPEncodeLosslessRGBA(const uint8_t * rgba,int width,int height,int stride,uint8_t ** output)","Funname":"WebPEncodeLosslessRGBA","Returntype":"WEBP_EXTERN size_t","Args":"const uint8_t * rgba,int width,int height,int stride,uint8_t ** output"},{"Uniquefunname":"WEBP_EXTERN size_t WebPEncodeRGB(const uint8_t * rgb,int width,int height,int stride,float quality_factor,uint8_t ** output)","Funname":"WebPEncodeRGB","Returntype":"WEBP_EXTERN size_t","Args":"const uint8_t * rgb,int width,int height,int stride,float quality_factor,uint8_t ** output"},{"Uniquefunname":"WEBP_EXTERN size_t WebPEncodeRGBA(const uint8_t * rgba,int width,int height,int stride,float quality_factor,uint8_t ** output)","Funname":"WebPEncodeRGBA","Returntype":"WEBP_EXTERN size_t","Args":"const uint8_t * rgba,int width,int height,int stride,float quality_factor,uint8_t ** output"},{"Uniquefunname":"WEBP_EXTERN int WebPGetEncoderVersion(void)","Funname":"WebPGetEncoderVersion","Returntype":"WEBP_EXTERN int","Args":"void"},{"Uniquefunname":"WEBP_EXTERN int WebPMemoryWrite(const uint8_t * data,size_t data_size,const WebPPicture * picture)","Funname":"WebPMemoryWrite","Returntype":"WEBP_EXTERN int","Args":"const uint8_t * data,size_t data_size,const WebPPicture * picture"},{"Uniquefunname":"WEBP_EXTERN void WebPMemoryWriterClear(WebPMemoryWriter * writer)","Funname":"WebPMemoryWriterClear","Returntype":"WEBP_EXTERN void","Args":"WebPMemoryWriter * writer"},{"Uniquefunname":"WEBP_EXTERN void WebPMemoryWriterInit(WebPMemoryWriter * writer)","Funname":"WebPMemoryWriterInit","Returntype":"WEBP_EXTERN void","Args":"WebPMemoryWriter * writer"},{"Uniquefunname":"WEBP_EXTERN int WebPPictureARGBToYUVA(WebPPicture * picture,WebPEncCSP)","Funname":"WebPPictureARGBToYUVA","Returntype":"WEBP_EXTERN int","Args":"WebPPicture * picture,WebPEncCSP"},{"Uniquefunname":"WEBP_EXTERN int WebPPictureARGBToYUVADithered(WebPPicture * picture,WebPEncCSP colorspace,float dithering)","Funname":"WebPPictureARGBToYUVADithered","Returntype":"WEBP_EXTERN int","Args":"WebPPicture * picture,WebPEncCSP colorspace,float dithering"},{"Uniquefunname":"WEBP_EXTERN int WebPPictureAlloc(WebPPicture * picture)","Funname":"WebPPictureAlloc","Returntype":"WEBP_EXTERN int","Args":"WebPPicture * picture"},{"Uniquefunname":"WEBP_EXTERN int WebPPictureCopy(const WebPPicture * src,WebPPicture * dst)","Funname":"WebPPictureCopy","Returntype":"WEBP_EXTERN int","Args":"const WebPPicture * src,WebPPicture * dst"},{"Uniquefunname":"WEBP_EXTERN int WebPPictureCrop(WebPPicture * picture,int left,int top,int width,int height)","Funname":"WebPPictureCrop","Returntype":"WEBP_EXTERN int","Args":"WebPPicture * picture,int left,int top,int width,int height"},{"Uniquefunname":"WEBP_EXTERN int WebPPictureDistortion(const WebPPicture * src,const WebPPicture * ref,int metric_type,float result[5])","Funname":"WebPPictureDistortion","Returntype":"WEBP_EXTERN int","Args":"const WebPPicture * src,const WebPPicture * ref,int metric_type,float result[5]"},{"Uniquefunname":"WEBP_EXTERN void WebPPictureFree(WebPPicture * picture)","Funname":"WebPPictureFree","Returntype":"WEBP_EXTERN void","Args":"WebPPicture * picture"},{"Uniquefunname":"WEBP_EXTERN int WebPPictureHasTransparency(const WebPPicture * picture)","Funname":"WebPPictureHasTransparency","Returntype":"WEBP_EXTERN int","Args":"const WebPPicture * picture"},{"Uniquefunname":"WEBP_EXTERN int WebPPictureImportBGR(WebPPicture * picture,const uint8_t * bgr,int bgr_stride)","Funname":"WebPPictureImportBGR","Returntype":"WEBP_EXTERN int","Args":"WebPPicture * picture,const uint8_t * bgr,int bgr_stride"},{"Uniquefunname":"WEBP_EXTERN int WebPPictureImportBGRA(WebPPicture * picture,const uint8_t * bgra,int bgra_stride)","Funname":"WebPPictureImportBGRA","Returntype":"WEBP_EXTERN int","Args":"WebPPicture * picture,const uint8_t * bgra,int bgra_stride"},{"Uniquefunname":"WEBP_EXTERN int WebPPictureImportBGRX(WebPPicture * picture,const uint8_t * bgrx,int bgrx_stride)","Funname":"WebPPictureImportBGRX","Returntype":"WEBP_EXTERN int","Args":"WebPPicture * picture,const uint8_t * bgrx,int bgrx_stride"},{"Uniquefunname":"WEBP_EXTERN int WebPPictureImportRGB(WebPPicture * picture,const uint8_t * rgb,int rgb_stride)","Funname":"WebPPictureImportRGB","Returntype":"WEBP_EXTERN int","Args":"WebPPicture * picture,const uint8_t * rgb,int rgb_stride"},{"Uniquefunname":"WEBP_EXTERN int WebPPictureImportRGBA(WebPPicture * picture,const uint8_t * rgba,int rgba_stride)","Funname":"WebPPictureImportRGBA","Returntype":"WEBP_EXTERN int","Args":"WebPPicture * picture,const uint8_t * rgba,int rgba_stride"},{"Uniquefunname":"WEBP_EXTERN int WebPPictureImportRGBX(WebPPicture * picture,const uint8_t * rgbx,int rgbx_stride)","Funname":"WebPPictureImportRGBX","Returntype":"WEBP_EXTERN int","Args":"WebPPicture * picture,const uint8_t * rgbx,int rgbx_stride"},{"Uniquefunname":"WEBP_INLINE int WebPPictureInit(WebPPicture * picture)","Funname":"WebPPictureInit","Returntype":"WEBP_INLINE int","Args":"WebPPicture * picture"},{"Uniquefunname":"WEBP_EXTERN int WebPPictureInitInternal(WebPPicture *,int)","Funname":"WebPPictureInitInternal","Returntype":"WEBP_EXTERN int","Args":"WebPPicture *,int"},{"Uniquefunname":"WEBP_EXTERN int WebPPictureIsView(const WebPPicture * picture)","Funname":"WebPPictureIsView","Returntype":"WEBP_EXTERN int","Args":"const WebPPicture * picture"},{"Uniquefunname":"WEBP_EXTERN int WebPPictureRescale(WebPPicture * pic,int width,int height)","Funname":"WebPPictureRescale","Returntype":"WEBP_EXTERN int","Args":"WebPPicture * pic,int width,int height"},{"Uniquefunname":"WEBP_EXTERN int WebPPictureSharpARGBToYUVA(WebPPicture * picture)","Funname":"WebPPictureSharpARGBToYUVA","Returntype":"WEBP_EXTERN int","Args":"WebPPicture * picture"},{"Uniquefunname":"WEBP_EXTERN int WebPPictureSmartARGBToYUVA(WebPPicture * picture)","Funname":"WebPPictureSmartARGBToYUVA","Returntype":"WEBP_EXTERN int","Args":"WebPPicture * picture"},{"Uniquefunname":"WEBP_EXTERN int WebPPictureView(const WebPPicture * src,int left,int top,int width,int height,WebPPicture * dst)","Funname":"WebPPictureView","Returntype":"WEBP_EXTERN int","Args":"const WebPPicture * src,int left,int top,int width,int height,WebPPicture * dst"},{"Uniquefunname":"WEBP_EXTERN int WebPPictureYUVAToARGB(WebPPicture * picture)","Funname":"WebPPictureYUVAToARGB","Returntype":"WEBP_EXTERN int","Args":"WebPPicture * picture"},{"Uniquefunname":"WEBP_EXTERN int WebPPlaneDistortion(const uint8_t * src,size_t src_stride,const uint8_t * ref,size_t ref_stride,int width,int height,size_t x_step,int type,float * distortion,float * result)","Funname":"WebPPlaneDistortion","Returntype":"WEBP_EXTERN int","Args":"const uint8_t * src,size_t src_stride,const uint8_t * ref,size_t ref_stride,int width,int height,size_t x_step,int type,float * distortion,float * result"},{"Uniquefunname":"WEBP_EXTERN int WebPValidateConfig(const WebPConfig * config)","Funname":"WebPValidateConfig","Returntype":"WEBP_EXTERN int","Args":"const WebPConfig * config"}],"Records":[{"Name":"enum:WebPEncodingError","Fields":["VP8_ENC_ERROR_BAD_DIMENSION","VP8_ENC_ERROR_BAD_WRITE","VP8_ENC_ERROR_BITSTREAM_OUT_OF_MEMORY","VP8_ENC_ERROR_FILE_TOO_BIG","VP8_ENC_ERROR_INVALID_CONFIGURATION","VP8_ENC_ERROR_LAST","VP8_ENC_ERROR_NULL_PARAMETER","VP8_ENC_ERROR_OUT_OF_MEMORY","VP8_ENC_ERROR_PARTITION0_OVERFLOW","VP8_ENC_ERROR_PARTITION_OVERFLOW","VP8_ENC_ERROR_USER_ABORT","VP8_ENC_OK"]},{"Name":"enum:WebPEncCSP","Fields":["WEBP_CSP_ALPHA_BIT","WEBP_CSP_UV_MASK","WEBP_YUV420","WEBP_YUV420A"]},{"Name":"macro","Fields":["WEBP_ENCODER_ABI_VERSION","WEBP_MAX_DIMENSION","WEBP_WEBP_ENCODE_H_"]},{"Name":"enum:WebPImageHint","Fields":["WEBP_HINT_DEFAULT","WEBP_HINT_GRAPH","WEBP_HINT_LAST","WEBP_HINT_PHOTO","WEBP_HINT_PICTURE"]},{"Name":"enum:WebPPreset","Fields":["WEBP_PRESET_DEFAULT","WEBP_PRESET_DRAWING","WEBP_PRESET_ICON","WEBP_PRESET_PHOTO","WEBP_PRESET_PICTURE","WEBP_PRESET_TEXT"]},{"Name":"struct:WebPAuxStats","Fields":["float[5] WebPAuxStats::PSNR","int WebPAuxStats::alpha_data_size","int[3] WebPAuxStats::block_count","int WebPAuxStats::cache_bits","int WebPAuxStats::coded_size","int[2] WebPAuxStats::header_bytes","int WebPAuxStats::histogram_bits","int WebPAuxStats::layer_data_size","int WebPAuxStats::lossless_data_size","uint32_t WebPAuxStats::lossless_features","int WebPAuxStats::lossless_hdr_size","int WebPAuxStats::lossless_size","uint32_t[2] WebPAuxStats::pad","int WebPAuxStats::palette_size","int[3][4] WebPAuxStats::residual_bytes","int[4] WebPAuxStats::segment_level","int[4] WebPAuxStats::segment_quant","int[4] WebPAuxStats::segment_size","int WebPAuxStats::transform_bits"]},{"Name":"struct:WebPConfig","Fields":["int WebPConfig::alpha_compression","int WebPConfig::alpha_filtering","int WebPConfig::alpha_quality","int WebPConfig::autofilter","int WebPConfig::emulate_jpeg_size","int WebPConfig::exact","int WebPConfig::filter_sharpness","int WebPConfig::filter_strength","int WebPConfig::filter_type","WebPImageHint WebPConfig::image_hint","int WebPConfig::lossless","int WebPConfig::low_memory","int WebPConfig::method","int WebPConfig::near_lossless","uint32_t[2] WebPConfig::pad","int WebPConfig::partition_limit","int WebPConfig::partitions","int WebPConfig::pass","int WebPConfig::preprocessing","float WebPConfig::quality","int WebPConfig::segments","int WebPConfig::show_compressed","int WebPConfig::sns_strength","float WebPConfig::target_PSNR","int WebPConfig::target_size","int WebPConfig::thread_level","int WebPConfig::use_delta_palette","int WebPConfig::use_sharp_yuv"]},{"Name":"struct:WebPMemoryWriter","Fields":["size_t WebPMemoryWriter::max_size","uint8_t * WebPMemoryWriter::mem","uint32_t[1] WebPMemoryWriter::pad","size_t WebPMemoryWriter::size"]},{"Name":"struct:WebPPicture","Fields":["uint8_t * WebPPicture::a","int WebPPicture::a_stride","uint32_t * WebPPicture::argb","int WebPPicture::argb_stride","WebPEncCSP WebPPicture::colorspace","void * WebPPicture::custom_ptr","WebPEncodingError WebPPicture::error_code","uint8_t * WebPPicture::extra_info","int WebPPicture::extra_info_type","int WebPPicture::height","void * WebPPicture::memory_","void * WebPPicture::memory_argb_","uint32_t[2] WebPPicture::pad1","uint32_t[3] WebPPicture::pad2","uint32_t[3] WebPPicture::pad3","uint8_t * WebPPicture::pad4","uint8_t ** WebPPicture::pad5","uint32_t[8] WebPPicture::pad6","void * [2] WebPPicture::pad7","WebPProgressHook WebPPicture::progress_hook","WebPAuxStats * WebPPicture::stats","uint8_t ** WebPPicture::u","int WebPPicture::use_argb","void * WebPPicture::user_data","int WebPPicture::uv_stride","uint8_t *** WebPPicture::v","int WebPPicture::width","WebPWriterFunction WebPPicture::writer","uint8_t * WebPPicture::y","int WebPPicture::y_stride"]}]}
{"Filepath":"src/3rdparty/libwebp/src/webp/format_constants.h","Functions":null,"Records":[{"Name":"macro","Fields":["ALPHA_HEADER_LEN","ALPHA_LOSSLESS_COMPRESSION","ALPHA_NO_COMPRESSION","ALPHA_PREPROCESSED_LEVELS","ANIM_CHUNK_SIZE","ANMF_CHUNK_SIZE","ARGB_BLACK","CHUNK_HEADER_SIZE","CHUNK_SIZE_BYTES","CODE_LENGTH_CODES","DEFAULT_CODE_LENGTH","HUFFMAN_CODES_PER_META_CODE","MAX_ALLOWED_CODE_LENGTH","MAX_CACHE_BITS","MAX_CANVAS_SIZE","MAX_CHUNK_PAYLOAD","MAX_DURATION","MAX_HUFFMAN_BITS","MAX_IMAGE_AREA","MAX_LOOP_COUNT","MAX_PALETTE_SIZE","MAX_POSITION_OFFSET","MIN_HUFFMAN_BITS","MKFOURCC(a,b,c,d)","NUM_DISTANCE_CODES","NUM_LENGTH_CODES","NUM_LITERAL_CODES","NUM_TRANSFORMS","RIFF_HEADER_SIZE","TAG_SIZE","TRANSFORM_PRESENT","VP8L_FRAME_HEADER_SIZE","VP8L_IMAGE_SIZE_BITS","VP8L_MAGIC_BYTE","VP8L_SIGNATURE_SIZE","VP8L_VERSION","VP8L_VERSION_BITS","VP8X_CHUNK_SIZE","VP8_FRAME_HEADER_SIZE","VP8_MAX_PARTITION0_SIZE","VP8_MAX_PARTITION_SIZE","VP8_SIGNATURE","WEBP_WEBP_FORMAT_CONSTANTS_H_"]}]}
{"Filepath":"src/3rdparty/libwebp/src/webp/mux.h","Functions":[{"Uniquefunname":"WEBP_EXTERN int WebPAnimEncoderAdd(WebPAnimEncoder * enc,struct WebPPicture * frame,int timestamp_ms,const struct WebPConfig * config)","Funname":"WebPAnimEncoderAdd","Returntype":"WEBP_EXTERN int","Args":"WebPAnimEncoder * enc,struct WebPPicture * frame,int timestamp_ms,const struct WebPConfig * config"},{"Uniquefunname":"WEBP_EXTERN int WebPAnimEncoderAssemble(WebPAnimEncoder * enc,WebPData * webp_data)","Funname":"WebPAnimEncoderAssemble","Returntype":"WEBP_EXTERN int","Args":"WebPAnimEncoder * enc,WebPData * webp_data"},{"Uniquefunname":"WEBP_EXTERN void WebPAnimEncoderDelete(WebPAnimEncoder * enc)","Funname":"WebPAnimEncoderDelete","Returntype":"WEBP_EXTERN void","Args":"WebPAnimEncoder * enc"},{"Uniquefunname":"WEBP_EXTERN const char * WebPAnimEncoderGetError(WebPAnimEncoder * enc)","Funname":"WebPAnimEncoderGetError","Returntype":"WEBP_EXTERN const char *","Args":"WebPAnimEncoder * enc"},{"Uniquefunname":"WEBP_INLINE WebPAnimEncoder * WebPAnimEncoderNew(int width,int height,const WebPAnimEncoderOptions * enc_options)","Funname":"WebPAnimEncoderNew","Returntype":"WEBP_INLINE WebPAnimEncoder *","Args":"int width,int height,const WebPAnimEncoderOptions * enc_options"},{"Uniquefunname":"WEBP_EXTERN WebPAnimEncoder * WebPAnimEncoderNewInternal(int,int,const WebPAnimEncoderOptions *,int)","Funname":"WebPAnimEncoderNewInternal","Returntype":"WEBP_EXTERN WebPAnimEncoder *","Args":"int,int,const WebPAnimEncoderOptions *,int"},{"Uniquefunname":"WEBP_INLINE int WebPAnimEncoderOptionsInit(WebPAnimEncoderOptions * enc_options)","Funname":"WebPAnimEncoderOptionsInit","Returntype":"WEBP_INLINE int","Args":"WebPAnimEncoderOptions * enc_options"},{"Uniquefunname":"WEBP_EXTERN int WebPAnimEncoderOptionsInitInternal(WebPAnimEncoderOptions *,int)","Funname":"WebPAnimEncoderOptionsInitInternal","Returntype":"WEBP_EXTERN int","Args":"WebPAnimEncoderOptions *,int"},{"Uniquefunname":"WEBP_EXTERN int WebPGetMuxVersion(void)","Funname":"WebPGetMuxVersion","Returntype":"WEBP_EXTERN int","Args":"void"},{"Uniquefunname":"WEBP_EXTERN WebPMuxError WebPMuxAssemble(WebPMux * mux,WebPData * assembled_data)","Funname":"WebPMuxAssemble","Returntype":"WEBP_EXTERN WebPMuxError","Args":"WebPMux * mux,WebPData * assembled_data"},{"Uniquefunname":"WEBP_INLINE WebPMux * WebPMuxCreate(const WebPData * bitstream,int copy_data)","Funname":"WebPMuxCreate","Returntype":"WEBP_INLINE WebPMux *","Args":"const WebPData * bitstream,int copy_data"},{"Uniquefunname":"WEBP_EXTERN WebPMux * WebPMuxCreateInternal(const WebPData *,int,int)","Funname":"WebPMuxCreateInternal","Returntype":"WEBP_EXTERN WebPMux *","Args":"const WebPData *,int,int"},{"Uniquefunname":"WEBP_EXTERN void WebPMuxDelete(WebPMux * mux)","Funname":"WebPMuxDelete","Returntype":"WEBP_EXTERN void","Args":"WebPMux * mux"},{"Uniquefunname":"WEBP_EXTERN WebPMuxError WebPMuxDeleteChunk(WebPMux * mux,const char fourcc[4])","Funname":"WebPMuxDeleteChunk","Returntype":"WEBP_EXTERN WebPMuxError","Args":"WebPMux * mux,const char fourcc[4]"},{"Uniquefunname":"WEBP_EXTERN WebPMuxError WebPMuxDeleteFrame(WebPMux * mux,uint32_t nth)","Funname":"WebPMuxDeleteFrame","Returntype":"WEBP_EXTERN WebPMuxError","Args":"WebPMux * mux,uint32_t nth"},{"Uniquefunname":"WEBP_EXTERN WebPMuxError WebPMuxGetAnimationParams(const WebPMux * mux,WebPMuxAnimParams * params)","Funname":"WebPMuxGetAnimationParams","Returntype":"WEBP_EXTERN WebPMuxError","Args":"const WebPMux * mux,WebPMuxAnimParams * params"},{"Uniquefunname":"WEBP_EXTERN WebPMuxError WebPMuxGetCanvasSize(const WebPMux * mux,int * width,int * height)","Funname":"WebPMuxGetCanvasSize","Returntype":"WEBP_EXTERN WebPMuxError","Args":"const WebPMux * mux,int * width,int * height"},{"Uniquefunname":"WEBP_EXTERN WebPMuxError WebPMuxGetChunk(const WebPMux * mux,const char fourcc[4],WebPData * chunk_data)","Funname":"WebPMuxGetChunk","Returntype":"WEBP_EXTERN WebPMuxError","Args":"const WebPMux * mux,const char fourcc[4],WebPData * chunk_data"},{"Uniquefunname":"WEBP_EXTERN WebPMuxError WebPMuxGetFeatures(const WebPMux * mux,uint32_t * flags)","Funname":"WebPMuxGetFeatures","Returntype":"WEBP_EXTERN WebPMuxError","Args":"const WebPMux * mux,uint32_t * flags"},{"Uniquefunname":"WEBP_EXTERN WebPMuxError WebPMuxGetFrame(const WebPMux * mux,uint32_t nth,WebPMuxFrameInfo * frame)","Funname":"WebPMuxGetFrame","Returntype":"WEBP_EXTERN WebPMuxError","Args":"const WebPMux * mux,uint32_t nth,WebPMuxFrameInfo * frame"},{"Uniquefunname":"WEBP_INLINE WebPMux * WebPMuxNew(void)","Funname":"WebPMuxNew","Returntype":"WEBP_INLINE WebPMux *","Args":"void"},{"Uniquefunname":"WEBP_EXTERN WebPMuxError WebPMuxNumChunks(const WebPMux * mux,WebPChunkId id,int * num_elements)","Funname":"WebPMuxNumChunks","Returntype":"WEBP_EXTERN WebPMuxError","Args":"const WebPMux * mux,WebPChunkId id,int * num_elements"},{"Uniquefunname":"WEBP_EXTERN WebPMuxError WebPMuxPushFrame(WebPMux * mux,const WebPMuxFrameInfo * frame,int copy_data)","Funname":"WebPMuxPushFrame","Returntype":"WEBP_EXTERN WebPMuxError","Args":"WebPMux * mux,const WebPMuxFrameInfo * frame,int copy_data"},{"Uniquefunname":"WEBP_EXTERN WebPMuxError WebPMuxSetAnimationParams(WebPMux * mux,const WebPMuxAnimParams * params)","Funname":"WebPMuxSetAnimationParams","Returntype":"WEBP_EXTERN WebPMuxError","Args":"WebPMux * mux,const WebPMuxAnimParams * params"},{"Uniquefunname":"WEBP_EXTERN WebPMuxError WebPMuxSetCanvasSize(WebPMux * mux,int width,int height)","Funname":"WebPMuxSetCanvasSize","Returntype":"WEBP_EXTERN WebPMuxError","Args":"WebPMux * mux,int width,int height"},{"Uniquefunname":"WEBP_EXTERN WebPMuxError WebPMuxSetChunk(WebPMux * mux,const char fourcc[4],const WebPData * chunk_data,int copy_data)","Funname":"WebPMuxSetChunk","Returntype":"WEBP_EXTERN WebPMuxError","Args":"WebPMux * mux,const char fourcc[4],const WebPData * chunk_data,int copy_data"},{"Uniquefunname":"WEBP_EXTERN WebPMuxError WebPMuxSetImage(WebPMux * mux,const WebPData * bitstream,int copy_data)","Funname":"WebPMuxSetImage","Returntype":"WEBP_EXTERN WebPMuxError","Args":"WebPMux * mux,const WebPData * bitstream,int copy_data"},{"Uniquefunname":"WEBP_EXTERN WebPMux * WebPNewInternal(int)","Funname":"WebPNewInternal","Returntype":"WEBP_EXTERN WebPMux *","Args":"int"}],"Records":[{"Name":"enum:WebPChunkId","Fields":["WEBP_CHUNK_ALPHA","WEBP_CHUNK_ANIM","WEBP_CHUNK_ANMF","WEBP_CHUNK_DEPRECATED","WEBP_CHUNK_EXIF","WEBP_CHUNK_ICCP","WEBP_CHUNK_IMAGE","WEBP_CHUNK_NIL","WEBP_CHUNK_UNKNOWN","WEBP_CHUNK_VP8X","WEBP_CHUNK_XMP"]},{"Name":"macro","Fields":["WEBP_MUX_ABI_VERSION","WEBP_WEBP_MUX_H_"]},{"Name":"enum:WebPMuxError","Fields":["WEBP_MUX_BAD_DATA","WEBP_MUX_INVALID_ARGUMENT","WEBP_MUX_MEMORY_ERROR","WEBP_MUX_NOT_ENOUGH_DATA","WEBP_MUX_NOT_FOUND","WEBP_MUX_OK"]},{"Name":"struct:WebPAnimEncoderOptions","Fields":["int WebPAnimEncoderOptions::allow_mixed","WebPMuxAnimParams WebPAnimEncoderOptions::anim_params","int WebPAnimEncoderOptions::kmax","int WebPAnimEncoderOptions::kmin","int WebPAnimEncoderOptions::minimize_size","uint32_t[4] WebPAnimEncoderOptions::padding","int WebPAnimEncoderOptions::verbose"]},{"Name":"struct:WebPMuxAnimParams","Fields":["uint32_t WebPMuxAnimParams::bgcolor","int WebPMuxAnimParams::loop_count"]},{"Name":"struct:WebPMuxFrameInfo","Fields":["WebPData WebPMuxFrameInfo::bitstream","WebPMuxAnimBlend WebPMuxFrameInfo::blend_method","WebPMuxAnimDispose WebPMuxFrameInfo::dispose_method","int WebPMuxFrameInfo::duration","WebPChunkId WebPMuxFrameInfo::id","uint32_t[1] WebPMuxFrameInfo::pad","int WebPMuxFrameInfo::x_offset","int WebPMuxFrameInfo::y_offset"]}]}
{"Filepath":"src/3rdparty/libwebp/src/webp/mux_types.h","Functions":[{"Uniquefunname":"WEBP_INLINE void WebPDataClear(WebPData * webp_data)","Funname":"WebPDataClear","Returntype":"WEBP_INLINE void","Args":"WebPData * webp_data"},{"Uniquefunname":"WEBP_INLINE int WebPDataCopy(const WebPData * src,WebPData * dst)","Funname":"WebPDataCopy","Returntype":"WEBP_INLINE int","Args":"const WebPData * src,WebPData * dst"},{"Uniquefunname":"WEBP_INLINE void WebPDataInit(WebPData * webp_data)","Funname":"WebPDataInit","Returntype":"WEBP_INLINE void","Args":"WebPData * webp_data"}],"Records":[{"Name":"enum:WebPFeatureFlags","Fields":["ALL_VALID_FLAGS","ALPHA_FLAG","ANIMATION_FLAG","EXIF_FLAG","ICCP_FLAG","XMP_FLAG"]},{"Name":"enum:WebPMuxAnimBlend","Fields":["WEBP_MUX_BLEND","WEBP_MUX_NO_BLEND"]},{"Name":"enum:WebPMuxAnimDispose","Fields":["WEBP_MUX_DISPOSE_BACKGROUND","WEBP_MUX_DISPOSE_NONE"]},{"Name":"macro","Fields":["WEBP_WEBP_MUX_TYPES_H_"]},{"Name":"struct:WebPData","Fields":["const uint8_t * WebPData::bytes","size_t WebPData::size"]}]}
{"Filepath":"src/3rdparty/libwebp/src/webp/types.h","Functions":[{"Uniquefunname":"WEBP_EXTERN void WebPFree(void * ptr)","Funname":"WebPFree","Returntype":"WEBP_EXTERN void","Args":"void * ptr"},{"Uniquefunname":"WEBP_EXTERN void * WebPMalloc(size_t size)","Funname":"WebPMalloc","Returntype":"WEBP_EXTERN void *","Args":"size_t size"}],"Records":[{"Name":"macro","Fields":["WEBP_ABI_IS_INCOMPATIBLE(a,b)","WEBP_EXTERN","WEBP_INLINE","WEBP_INLINE","WEBP_WEBP_TYPES_H_"]}]}
{"Filepath":"src/plugins/imageformats/dds/ddsheader.h","Functions":null,"Records":[{"Name":"enum:DDSHeader::DDSCaps2Flags","Fields":["Caps2CubeMap","Caps2CubeMapNegativeX","Caps2CubeMapNegativeY","Caps2CubeMapNegativeZ","Caps2CubeMapPositiveX","Caps2CubeMapPositiveY","Caps2CubeMapPositiveZ","Caps2Volume","DDSHeader::Caps2CubeMap","DDSHeader::Caps2CubeMapNegativeX","DDSHeader::Caps2CubeMapNegativeY","DDSHeader::Caps2CubeMapNegativeZ","DDSHeader::Caps2CubeMapPositiveX","DDSHeader::Caps2CubeMapPositiveY","DDSHeader::Caps2CubeMapPositiveZ","DDSHeader::Caps2Volume"]},{"Name":"enum:DDSHeader::DDSCapsFlags","Fields":["CapsComplex","CapsMipmap","CapsTexture","DDSHeader::CapsComplex","DDSHeader::CapsMipmap","DDSHeader::CapsTexture"]},{"Name":"macro","Fields":["DDSHEADER_H"]},{"Name":"enum:DDSHeader::DDSFlags","Fields":["DDSHeader::FlagCaps","DDSHeader::FlagDepth","DDSHeader::FlagHeight","DDSHeader::FlagLinearSize","DDSHeader::FlagMipmapCount","DDSHeader::FlagPitch","DDSHeader::FlagPixelFormat","DDSHeader::FlagWidth","FlagCaps","FlagDepth","FlagHeight","FlagLinearSize","FlagMipmapCount","FlagPitch","FlagPixelFormat","FlagWidth"]},{"Name":"struct:DDSHeader","Fields":["quint32 DDSHeader::caps","quint32 DDSHeader::caps2","quint32 DDSHeader::caps3","quint32 DDSHeader::caps4","quint32 DDSHeader::depth","quint32 DDSHeader::flags","quint32 DDSHeader::height","quint32 DDSHeader::magic","quint32 DDSHeader::mipMapCount","quint32 DDSHeader::pitchOrLinearSize","DDSPixelFormat DDSHeader::pixelFormat","quint32[] DDSHeader::reserved1","quint32 DDSHeader::reserved2","quint32 DDSHeader::size","quint32 DDSHeader::width"]},{"Name":"struct:DDSHeaderDX10","Fields":["quint32 DDSHeaderDX10::arraySize","quint32 DDSHeaderDX10::dxgiFormat","quint32 DDSHeaderDX10::miscFlag","quint32 DDSHeaderDX10::reserved","quint32 DDSHeaderDX10::resourceDimension"]},{"Name":"enum:DDSPixelFormat::DDSPixelFormatFlags","Fields":["DDSPixelFormat::FlagAlpha","DDSPixelFormat::FlagAlphaPixels","DDSPixelFormat::FlagFourCC","DDSPixelFormat::FlagLA","DDSPixelFormat::FlagLuminance","DDSPixelFormat::FlagNormal","DDSPixelFormat::FlagPaletteIndexed4","DDSPixelFormat::FlagPaletteIndexed8","DDSPixelFormat::FlagRGB","DDSPixelFormat::FlagRGBA","DDSPixelFormat::FlagYUV","FlagAlpha","FlagAlphaPixels","FlagFourCC","FlagLA","FlagLuminance","FlagNormal","FlagPaletteIndexed4","FlagPaletteIndexed8","FlagRGB","FlagRGBA","FlagYUV"]},{"Name":"struct:DDSPixelFormat","Fields":["quint32 DDSPixelFormat::aBitMask","quint32 DDSPixelFormat::bBitMask","quint32 DDSPixelFormat::flags","quint32 DDSPixelFormat::fourCC","quint32 DDSPixelFormat::gBitMask","quint32 DDSPixelFormat::rBitMask","quint32 DDSPixelFormat::rgbBitCount","quint32 DDSPixelFormat::size"]},{"Name":"enum:Format","Fields":["FormatA1","FormatA16B16G16R16","FormatA16B16G16R16F","FormatA1R5G5B5","FormatA2B10G10R10","FormatA2B10G10R10_XR_BIAS","FormatA2R10G10B10","FormatA2W10V10U10","FormatA32B32G32R32F","FormatA4L4","FormatA4P4","FormatA4R4G4B4","FormatA8","FormatA8B8G8R8","FormatA8L8","FormatA8P8","FormatA8R3G3B2","FormatA8R8G8B8","FormatATI2","FormatBinaryBuffer","FormatCxV8U8","FormatD15S1","FormatD16","FormatD16Lockable","FormatD24FS8","FormatD24S8","FormatD24X4S4","FormatD24X8","FormatD32","FormatD32FLockable","FormatD32Lockable","FormatDXT1","FormatDXT2","FormatDXT3","FormatDXT4","FormatDXT5","FormatG16R16","FormatG16R16F","FormatG32R32F","FormatG8R8G8B8","FormatIndex16","FormatIndex32","FormatL16","FormatL6V5U5","FormatL8","FormatLast","FormatMulti2ARGB8","FormatP4","FormatP8","FormatQ16W16V16U16","FormatQ8W8V8U8","FormatR16F","FormatR32F","FormatR3G3B2","FormatR5G6B5","FormatR8G8B8","FormatR8G8B8G8","FormatRXGB","FormatS8Lockable","FormatUYVY","FormatUnknown","FormatV16U16","FormatV8U8","FormatVertexData","FormatX1R5G5B5","FormatX4R4G4B4","FormatX8B8G8R8","FormatX8L8V8U8","FormatX8R8G8B8","FormatYUY2"]}]}
{"Filepath":"src/plugins/imageformats/dds/qddshandler.h","Functions":[{"Uniquefunname":"public QDDSHandler()","Funname":"QDDSHandler","Returntype":"public","Args":""},{"Uniquefunname":"bool canRead()","Funname":"canRead","Returntype":"bool","Args":""},{"Uniquefunname":"bool canRead(QIODevice * device)","Funname":"canRead","Returntype":"bool","Args":"QIODevice * device"},{"Uniquefunname":"private ensureScanned()","Funname":"ensureScanned","Returntype":"private","Args":""},{"Uniquefunname":"int imageCount()","Funname":"imageCount","Returntype":"int","Args":""},{"Uniquefunname":"bool jumpToImage(int imageNumber)","Funname":"jumpToImage","Returntype":"bool","Args":"int imageNumber"},{"Uniquefunname":"QVariant option(QImageIOHandler::ImageOption option)","Funname":"option","Returntype":"QVariant","Args":"QImageIOHandler::ImageOption option"},{"Uniquefunname":"bool read(QImage * image)","Funname":"read","Returntype":"bool","Args":"QImage * image"},{"Uniquefunname":"void setOption(ImageOption option,const QVariant \u0026 value)","Funname":"setOption","Returntype":"void","Args":"ImageOption option,const QVariant \u0026 value"},{"Uniquefunname":"bool supportsOption(QImageIOHandler::ImageOption option)","Funname":"supportsOption","Returntype":"bool","Args":"QImageIOHandler::ImageOption option"},{"Uniquefunname":"bool verifyHeader(const DDSHeader \u0026 dds)","Funname":"verifyHeader","Returntype":"bool","Args":"const DDSHeader \u0026 dds"},{"Uniquefunname":"bool write(const QImage \u0026 image)","Funname":"write","Returntype":"bool","Args":"const QImage \u0026 image"}],"Records":[{"Name":"macro","Fields":["QDDSHANDLER_H"]},{"Name":"enum:ScanState","Fields":["ScanError","ScanNotScanned","ScanSuccess"]}]}
{"Filepath":"src/plugins/imageformats/icns/qicnshandler_p.h","Functions":[{"Uniquefunname":" ICNSEntry()","Funname":"ICNSEntry","Returntype":"","Args":""},{"Uniquefunname":" ICNSEntry::ICNSEntry()","Funname":"ICNSEntry::ICNSEntry","Returntype":"","Args":""},{"Uniquefunname":"public QICNSHandler()","Funname":"QICNSHandler","Returntype":"public","Args":""},{"Uniquefunname":" Q_DECLARE_TYPEINFO(ICNSEntry,Q_MOVABLE_TYPE)","Funname":"Q_DECLARE_TYPEINFO","Returntype":"","Args":"ICNSEntry,Q_MOVABLE_TYPE"},{"Uniquefunname":"bool canRead()","Funname":"canRead","Returntype":"bool","Args":""},{"Uniquefunname":"bool canRead(QIODevice * device)","Funname":"canRead","Returntype":"bool","Args":"QIODevice * device"},{"Uniquefunname":"private ensureScanned()","Funname":"ensureScanned","Returntype":"private","Args":""},{"Uniquefunname":"const ICNSEntry \u0026 getIconMask(const ICNSEntry \u0026 icon)","Funname":"getIconMask","Returntype":"const ICNSEntry \u0026","Args":"const ICNSEntry \u0026 icon"},{"Uniquefunname":"int imageCount()","Funname":"imageCount","Returntype":"int","Args":""},{"Uniquefunname":"bool jumpToImage(int imageNumber)","Funname":"jumpToImage","Returntype":"bool","Args":"int imageNumber"},{"Uniquefunname":"bool jumpToNextImage()","Funname":"jumpToNextImage","Returntype":"bool","Args":""},{"Uniquefunname":"QVariant option(ImageOption option)","Funname":"option","Returntype":"QVariant","Args":"ImageOption option"},{"Uniquefunname":"bool read(QImage * image)","Funname":"read","Returntype":"bool","Args":"QImage * image"},{"Uniquefunname":"bool scanDevice()","Funname":"scanDevice","Returntype":"bool","Args":""},{"Uniquefunname":"bool supportsOption(ImageOption option)","Funname":"supportsOption","Returntype":"bool","Args":"ImageOption option"},{"Uniquefunname":"bool write(const QImage \u0026 image)","Funname":"write","Returntype":"bool","Args":"const QImage \u0026 image"}],"Records":[{"Name":"enum:ICNSEntry::Depth","Fields":["Depth32bit","Depth4bit","Depth8bit","DepthMono","DepthUnknown","ICNSEntry::Depth32bit","ICNSEntry::Depth4bit","ICNSEntry::Depth8bit","ICNSEntry::DepthMono","ICNSEntry::DepthUnknown"]},{"Name":"enum:ICNSEntry::Format","Fields":["FormatUnknown","ICNSEntry::FormatUnknown","ICNSEntry::JP2","ICNSEntry::PNG","ICNSEntry::RLE24","ICNSEntry::RawIcon","JP2","PNG","RLE24","RawIcon"]},{"Name":"enum:ICNSEntry::Group","Fields":["GroupCompressed","GroupHuge","GroupICON","GroupLarge","GroupMini","GroupPortable","GroupSmall","GroupThumbnail","GroupUnknown","ICNSEntry::GroupCompressed","ICNSEntry::GroupHuge","ICNSEntry::GroupICON","ICNSEntry::GroupLarge","ICNSEntry::GroupMini","ICNSEntry::GroupPortable","ICNSEntry::GroupSmall","ICNSEntry::GroupThumbnail","ICNSEntry::GroupUnknown"]},{"Name":"enum:ICNSBlockHeader::OS","Fields":["ICNSBlockHeader::TypeClut","ICNSBlockHeader::TypeDrop","ICNSBlockHeader::TypeIcns","ICNSBlockHeader::TypeIcnv","ICNSBlockHeader::TypeOdrp","ICNSBlockHeader::TypeOpen","ICNSBlockHeader::TypeOver","ICNSBlockHeader::TypeTile","ICNSBlockHeader::TypeToc","TypeClut","TypeDrop","TypeIcns","TypeIcnv","TypeOdrp","TypeOpen","TypeOver","TypeTile","TypeToc"]},{"Name":"struct:ICNSBlockHeader","Fields":["quint32 ICNSBlockHeader::length","quint32 ICNSBlockHeader::ostype"]},{"Name":"enum:ICNSEntry::Flags","Fields":["ICNSEntry::IconPlusMask","ICNSEntry::IsIcon","ICNSEntry::IsMask","ICNSEntry::Unknown","IconPlusMask","IsIcon","IsMask","Unknown"]},{"Name":"struct:ICNSEntry","Fields":["Format ICNSEntry::dataFormat","quint32 ICNSEntry::dataLength","qint64 ICNSEntry::dataOffset","Depth ICNSEntry::depth","Flags ICNSEntry::flags","Group ICNSEntry::group","quint32 ICNSEntry::height","quint32 ICNSEntry::ostype","quint32 ICNSEntry::variant","quint32 ICNSEntry::width"]},{"Name":"macro","Fields":["MAKEOSTYPE(c0,c1,c2,c3)","QICNSHANDLER_P_H"]},{"Name":"enum:ScanState","Fields":["ScanError","ScanNotScanned","ScanSuccess"]}]}
{"Filepath":"src/plugins/imageformats/jp2/qjp2handler_p.h","Functions":[{"Uniquefunname":"public QJp2Handler()","Funname":"QJp2Handler","Returntype":"public","Args":""},{"Uniquefunname":"    Q_DECLARE_PRIVATE(QJp2Handler)","Funname":"Q_DECLARE_PRIVATE","Returntype":"private","Args":"QJp2Handler"},{"Uniquefunname":"bool canRead()","Funname":"canRead","Returntype":"bool","Args":""},{"Uniquefunname":"bool canRead(QIODevice * iod,QByteArray * subType)","Funname":"canRead","Returntype":"bool","Args":"QIODevice * iod,QByteArray * subType"},{"Uniquefunname":"QVariant option(ImageOption option)","Funname":"option","Returntype":"QVariant","Args":"ImageOption option"},{"Uniquefunname":"bool read(QImage * image)","Funname":"read","Returntype":"bool","Args":"QImage * image"},{"Uniquefunname":"void setOption(ImageOption option,const QVariant \u0026 value)","Funname":"setOption","Returntype":"void","Args":"ImageOption option,const QVariant \u0026 value"},{"Uniquefunname":"bool supportsOption(ImageOption option)","Funname":"supportsOption","Returntype":"bool","Args":"ImageOption option"},{"Uniquefunname":"bool write(const QImage \u0026 image)","Funname":"write","Returntype":"bool","Args":"const QImage \u0026 image"},{"Uniquefunname":" ~QJp2Handler()","Funname":"~QJp2Handler","Returntype":"","Args":""}],"Records":[{"Name":"macro","Fields":["QJP2HANDLER_H"]}]}
{"Filepath":"src/plugins/imageformats/macheif/qmacheifhandler.h","Functions":[{"Uniquefunname":"public QMacHeifHandler()","Funname":"QMacHeifHandler","Returntype":"public","Args":""},{"Uniquefunname":"bool canRead()","Funname":"canRead","Returntype":"bool","Args":""},{"Uniquefunname":"bool canRead(QIODevice * iod)","Funname":"canRead","Returntype":"bool","Args":"QIODevice * iod"},{"Uniquefunname":"QVariant option(ImageOption option)","Funname":"option","Returntype":"QVariant","Args":"ImageOption option"},{"Uniquefunname":"bool read(QImage * image)","Funname":"read","Returntype":"bool","Args":"QImage * image"},{"Uniquefunname":"void setOption(ImageOption option,const QVariant \u0026 value)","Funname":"setOption","Returntype":"void","Args":"ImageOption option,const QVariant \u0026 value"},{"Uniquefunname":"bool supportsOption(ImageOption option)","Funname":"supportsOption","Returntype":"bool","Args":"ImageOption option"},{"Uniquefunname":"bool write(const QImage \u0026 image)","Funname":"write","Returntype":"bool","Args":"const QImage \u0026 image"}],"Records":[{"Name":"macro","Fields":["QMACHEIFHANDLER_H"]}]}
{"Filepath":"src/plugins/imageformats/macjp2/qmacjp2handler.h","Functions":[{"Uniquefunname":"public QMacJp2Handler()","Funname":"QMacJp2Handler","Returntype":"public","Args":""},{"Uniquefunname":"    Q_DECLARE_PRIVATE(QMacJp2Handler)","Funname":"Q_DECLARE_PRIVATE","Returntype":"private","Args":"QMacJp2Handler"},{"Uniquefunname":"bool canRead()","Funname":"canRead","Returntype":"bool","Args":""},{"Uniquefunname":"bool canRead(QIODevice * iod)","Funname":"canRead","Returntype":"bool","Args":"QIODevice * iod"},{"Uniquefunname":"QVariant option(ImageOption option)","Funname":"option","Returntype":"QVariant","Args":"ImageOption option"},{"Uniquefunname":"bool read(QImage * image)","Funname":"read","Returntype":"bool","Args":"QImage * image"},{"Uniquefunname":"void setOption(ImageOption option,const QVariant \u0026 value)","Funname":"setOption","Returntype":"void","Args":"ImageOption option,const QVariant \u0026 value"},{"Uniquefunname":"bool supportsOption(ImageOption option)","Funname":"supportsOption","Returntype":"bool","Args":"ImageOption option"},{"Uniquefunname":"bool write(const QImage \u0026 image)","Funname":"write","Returntype":"bool","Args":"const QImage \u0026 image"},{"Uniquefunname":" ~QMacJp2Handler()","Funname":"~QMacJp2Handler","Returntype":"","Args":""}],"Records":[{"Name":"macro","Fields":["QMACJP2HANDLER_H"]}]}
{"Filepath":"src/plugins/imageformats/mng/qmnghandler_p.h","Functions":[{"Uniquefunname":"public QMngHandler()","Funname":"QMngHandler","Returntype":"public","Args":""},{"Uniquefunname":"    Q_DECLARE_PRIVATE(QMngHandler)","Funname":"Q_DECLARE_PRIVATE","Returntype":"private","Args":"QMngHandler"},{"Uniquefunname":"bool canRead()","Funname":"canRead","Returntype":"bool","Args":""},{"Uniquefunname":"bool canRead(QIODevice * device)","Funname":"canRead","Returntype":"bool","Args":"QIODevice * device"},{"Uniquefunname":"int currentImageNumber()","Funname":"currentImageNumber","Returntype":"int","Args":""},{"Uniquefunname":"int imageCount()","Funname":"imageCount","Returntype":"int","Args":""},{"Uniquefunname":"bool jumpToImage(int imageNumber)","Funname":"jumpToImage","Returntype":"bool","Args":"int imageNumber"},{"Uniquefunname":"bool jumpToNextImage()","Funname":"jumpToNextImage","Returntype":"bool","Args":""},{"Uniquefunname":"int loopCount()","Funname":"loopCount","Returntype":"int","Args":""},{"Uniquefunname":"int nextImageDelay()","Funname":"nextImageDelay","Returntype":"int","Args":""},{"Uniquefunname":"QVariant option(ImageOption option)","Funname":"option","Returntype":"QVariant","Args":"ImageOption option"},{"Uniquefunname":"bool read(QImage * image)","Funname":"read","Returntype":"bool","Args":"QImage * image"},{"Uniquefunname":"void setOption(ImageOption option,const QVariant \u0026 value)","Funname":"setOption","Returntype":"void","Args":"ImageOption option,const QVariant \u0026 value"},{"Uniquefunname":"bool supportsOption(ImageOption option)","Funname":"supportsOption","Returntype":"bool","Args":"ImageOption option"},{"Uniquefunname":"bool write(const QImage \u0026 image)","Funname":"write","Returntype":"bool","Args":"const QImage \u0026 image"},{"Uniquefunname":" ~QMngHandler()","Funname":"~QMngHandler","Returntype":"","Args":""}],"Records":[{"Name":"macro","Fields":["QMNGHANDLER_P_H"]}]}
{"Filepath":"src/plugins/imageformats/shared/qiiofhelpers_p.h","Functions":[{"Uniquefunname":"public QIIOFHelper(QImageIOHandler * q)","Funname":"QIIOFHelper","Returntype":"public","Args":"QImageIOHandler * q"},{"Uniquefunname":"bool getIntProperty(CFStringRef property,int * value)","Funname":"getIntProperty","Returntype":"bool","Args":"CFStringRef property,int * value"},{"Uniquefunname":"QVariant imageProperty(QImageIOHandler::ImageOption option)","Funname":"imageProperty","Returntype":"QVariant","Args":"QImageIOHandler::ImageOption option"},{"Uniquefunname":"protected initRead()","Funname":"initRead","Returntype":"protected","Args":""},{"Uniquefunname":"bool readImage(QImage * out)","Funname":"readImage","Returntype":"bool","Args":"QImage * out"},{"Uniquefunname":"bool readImage(QImageIOHandler * q_ptr,QImage * out)","Funname":"readImage","Returntype":"bool","Args":"QImageIOHandler * q_ptr,QImage * out"},{"Uniquefunname":"void setOption(QImageIOHandler::ImageOption option,const QVariant \u0026 value)","Funname":"setOption","Returntype":"void","Args":"QImageIOHandler::ImageOption option,const QVariant \u0026 value"},{"Uniquefunname":"public systemCapabilities(const QString \u0026 uti)","Funname":"systemCapabilities","Returntype":"public","Args":"const QString \u0026 uti"},{"Uniquefunname":"bool writeImage(const QImage \u0026 in,const QString \u0026 uti)","Funname":"writeImage","Returntype":"bool","Args":"const QImage \u0026 in,const QString \u0026 uti"},{"Uniquefunname":"bool writeImage(QImageIOHandler * q_ptr,const QImage \u0026 in,const QString \u0026 uti)","Funname":"writeImage","Returntype":"bool","Args":"QImageIOHandler * q_ptr,const QImage \u0026 in,const QString \u0026 uti"}],"Records":[{"Name":"macro","Fields":["QIIOFHELPERS_P_H"]}]}
{"Filepath":"src/plugins/imageformats/tga/qtgafile.h","Functions":[{"Uniquefunname":" QTgaFile(QIODevice *)","Funname":"QTgaFile","Returntype":"","Args":"QIODevice *"},{"Uniquefunname":"Compression compression()","Funname":"compression","Returntype":"Compression","Args":""},{"Uniquefunname":"QTgaFile compression()","Funname":"compression","Returntype":"QTgaFile","Args":""},{"Uniquefunname":"QString errorMessage()","Funname":"errorMessage","Returntype":"QString","Args":""},{"Uniquefunname":"QString QTgaFile errorMessage()","Funname":"errorMessage","Returntype":"QString QTgaFile","Args":""},{"Uniquefunname":"int height()","Funname":"height","Returntype":"int","Args":""},{"Uniquefunname":"int QTgaFile height()","Funname":"height","Returntype":"int QTgaFile","Args":""},{"Uniquefunname":"bool isValid()","Funname":"isValid","Returntype":"bool","Args":""},{"Uniquefunname":"bool QTgaFile isValid()","Funname":"isValid","Returntype":"bool QTgaFile","Args":""},{"Uniquefunname":"private littleEndianInt(const unsigned char * d)","Funname":"littleEndianInt","Returntype":"private","Args":"const unsigned char * d"},{"Uniquefunname":"inline quint16 QTgaFile::littleEndianInt(const unsigned char *d)","Funname":"littleEndianInt","Returntype":"quint16 QTgaFile","Args":"const unsigned char * d"},{"Uniquefunname":"QImage readImage()","Funname":"readImage","Returntype":"QImage","Args":""},{"Uniquefunname":"QSize size()","Funname":"size","Returntype":"QSize","Args":""},{"Uniquefunname":"QSize QTgaFile size()","Funname":"size","Returntype":"QSize QTgaFile","Args":""},{"Uniquefunname":"int width()","Funname":"width","Returntype":"int","Args":""},{"Uniquefunname":"int QTgaFile width()","Funname":"width","Returntype":"int QTgaFile","Args":""},{"Uniquefunname":"int xOffset()","Funname":"xOffset","Returntype":"int","Args":""},{"Uniquefunname":"int QTgaFile xOffset()","Funname":"xOffset","Returntype":"int QTgaFile","Args":""},{"Uniquefunname":"int yOffset()","Funname":"yOffset","Returntype":"int","Args":""},{"Uniquefunname":"int QTgaFile yOffset()","Funname":"yOffset","Returntype":"int QTgaFile","Args":""},{"Uniquefunname":" ~QTgaFile()","Funname":"~QTgaFile","Returntype":"","Args":""}],"Records":[{"Name":"enum:HeaderOffset","Fields":["CMapDepth","CMapLength","CMapStart","ColorMapType","HeaderSize","Height","IdLength","ImageDescriptor","ImageType","PixelDepth","Width","XOffset","YOffset"]},{"Name":"enum:FooterOffset","Fields":["DeveloperOffset","ExtensionOffset","FooterSize","SignatureOffset"]},{"Name":"enum:Compression","Fields":["NoCompression","RleCompression"]},{"Name":"macro","Fields":["QTGAFILE_H"]}]}
{"Filepath":"src/plugins/imageformats/tga/qtgahandler.h","Functions":[{"Uniquefunname":"public QTgaHandler()","Funname":"QTgaHandler","Returntype":"public","Args":""},{"Uniquefunname":"bool canRead()","Funname":"canRead","Returntype":"bool","Args":""},{"Uniquefunname":"bool canRead(QIODevice * device)","Funname":"canRead","Returntype":"bool","Args":"QIODevice * device"},{"Uniquefunname":"QVariant option(ImageOption option)","Funname":"option","Returntype":"QVariant","Args":"ImageOption option"},{"Uniquefunname":"bool read(QImage * image)","Funname":"read","Returntype":"bool","Args":"QImage * image"},{"Uniquefunname":"void setOption(ImageOption option,const QVariant \u0026 value)","Funname":"setOption","Returntype":"void","Args":"ImageOption option,const QVariant \u0026 value"},{"Uniquefunname":"bool supportsOption(ImageOption option)","Funname":"supportsOption","Returntype":"bool","Args":"ImageOption option"},{"Uniquefunname":" ~QTgaHandler()","Funname":"~QTgaHandler","Returntype":"","Args":""}],"Records":[{"Name":"macro","Fields":["QTGAHANDLER_H"]}]}
{"Filepath":"src/plugins/imageformats/tiff/qtiffhandler_p.h","Functions":[{"Uniquefunname":"public QTiffHandler()","Funname":"QTiffHandler","Returntype":"public","Args":""},{"Uniquefunname":"bool canRead()","Funname":"canRead","Returntype":"bool","Args":""},{"Uniquefunname":"bool canRead(QIODevice * device)","Funname":"canRead","Returntype":"bool","Args":"QIODevice * device"},{"Uniquefunname":"private convert32BitOrder(void * buffer,int width)","Funname":"convert32BitOrder","Returntype":"private","Args":"void * buffer,int width"},{"Uniquefunname":"int currentImageNumber()","Funname":"currentImageNumber","Returntype":"int","Args":""},{"Uniquefunname":"bool ensureHaveDirectoryCount()","Funname":"ensureHaveDirectoryCount","Returntype":"bool","Args":""},{"Uniquefunname":"int imageCount()","Funname":"imageCount","Returntype":"int","Args":""},{"Uniquefunname":"bool jumpToImage(int imageNumber)","Funname":"jumpToImage","Returntype":"bool","Args":"int imageNumber"},{"Uniquefunname":"bool jumpToNextImage()","Funname":"jumpToNextImage","Returntype":"bool","Args":""},{"Uniquefunname":"QVariant option(ImageOption option)","Funname":"option","Returntype":"QVariant","Args":"ImageOption option"},{"Uniquefunname":"bool read(QImage * image)","Funname":"read","Returntype":"bool","Args":"QImage * image"},{"Uniquefunname":"void rgb48fixup(QImage * image)","Funname":"rgb48fixup","Returntype":"void","Args":"QImage * image"},{"Uniquefunname":"void setOption(ImageOption option,const QVariant \u0026 value)","Funname":"setOption","Returntype":"void","Args":"ImageOption option,const QVariant \u0026 value"},{"Uniquefunname":"bool supportsOption(ImageOption option)","Funname":"supportsOption","Returntype":"bool","Args":"ImageOption option"},{"Uniquefunname":"bool write(const QImage \u0026 image)","Funname":"write","Returntype":"bool","Args":"const QImage \u0026 image"}],"Records":[{"Name":"enum:Compression","Fields":["LzwCompression","NoCompression"]},{"Name":"macro","Fields":["QTIFFHANDLER_P_H"]}]}
{"Filepath":"src/plugins/imageformats/wbmp/qwbmphandler_p.h","Functions":[{"Uniquefunname":"public QWbmpHandler(QIODevice * device)","Funname":"QWbmpHandler","Returntype":"public","Args":"QIODevice * device"},{"Uniquefunname":"bool canRead()","Funname":"canRead","Returntype":"bool","Args":""},{"Uniquefunname":"bool canRead(QIODevice * device)","Funname":"canRead","Returntype":"bool","Args":"QIODevice * device"},{"Uniquefunname":"QVariant option(ImageOption option)","Funname":"option","Returntype":"QVariant","Args":"ImageOption option"},{"Uniquefunname":"bool read(QImage * image)","Funname":"read","Returntype":"bool","Args":"QImage * image"},{"Uniquefunname":"bool supportsOption(ImageOption option)","Funname":"supportsOption","Returntype":"bool","Args":"ImageOption option"},{"Uniquefunname":"bool write(const QImage \u0026 image)","Funname":"write","Returntype":"bool","Args":"const QImage \u0026 image"},{"Uniquefunname":" ~QWbmpHandler()","Funname":"~QWbmpHandler","Returntype":"","Args":""}],"Records":[{"Name":"macro","Fields":["QWBMPHANDLER_P_H"]}]}
{"Filepath":"src/plugins/imageformats/webp/qwebphandler_p.h","Functions":[{"Uniquefunname":"public QWebpHandler()","Funname":"QWebpHandler","Returntype":"public","Args":""},{"Uniquefunname":"public canRead()","Funname":"canRead","Returntype":"public","Args":""},{"Uniquefunname":"bool canRead(QIODevice * device)","Funname":"canRead","Returntype":"bool","Args":"QIODevice * device"},{"Uniquefunname":"int currentImageNumber()","Funname":"currentImageNumber","Returntype":"int","Args":""},{"Uniquefunname":"QRect currentImageRect()","Funname":"currentImageRect","Returntype":"QRect","Args":""},{"Uniquefunname":"bool ensureDemuxer()","Funname":"ensureDemuxer","Returntype":"bool","Args":""},{"Uniquefunname":"private ensureScanned()","Funname":"ensureScanned","Returntype":"private","Args":""},{"Uniquefunname":"int imageCount()","Funname":"imageCount","Returntype":"int","Args":""},{"Uniquefunname":"int loopCount()","Funname":"loopCount","Returntype":"int","Args":""},{"Uniquefunname":"int nextImageDelay()","Funname":"nextImageDelay","Returntype":"int","Args":""},{"Uniquefunname":"QVariant option(ImageOption option)","Funname":"option","Returntype":"QVariant","Args":"ImageOption option"},{"Uniquefunname":"bool read(QImage * image)","Funname":"read","Returntype":"bool","Args":"QImage * image"},{"Uniquefunname":"void setOption(ImageOption option,const QVariant \u0026 value)","Funname":"setOption","Returntype":"void","Args":"ImageOption option,const QVariant \u0026 value"},{"Uniquefunname":"bool supportsOption(ImageOption option)","Funname":"supportsOption","Returntype":"bool","Args":"ImageOption option"},{"Uniquefunname":"bool write(const QImage \u0026 image)","Funname":"write","Returntype":"bool","Args":"const QImage \u0026 image"},{"Uniquefunname":" ~QWebpHandler()","Funname":"~QWebpHandler","Returntype":"","Args":""}],"Records":[{"Name":"macro","Fields":["QWEBPHANDLER_P_H"]},{"Name":"enum:ScanState","Fields":["ScanError","ScanNotScanned","ScanSuccess"]}]}
